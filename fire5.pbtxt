node {
  name: "input_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "conv_0/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv_0/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1380131095647812
      }
    }
  }
}
node {
  name: "conv_0/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1380131095647812
      }
    }
  }
}
node {
  name: "conv_0/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_0/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2567603
    }
  }
}
node {
  name: "conv_0/random_uniform/sub"
  op: "Sub"
  input: "conv_0/random_uniform/max"
  input: "conv_0/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_0/random_uniform/mul"
  op: "Mul"
  input: "conv_0/random_uniform/RandomUniform"
  input: "conv_0/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_0/random_uniform"
  op: "Add"
  input: "conv_0/random_uniform/mul"
  input: "conv_0/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_0/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_0/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_0/kernel"
    }
  }
}
node {
  name: "conv_0/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_0/kernel"
}
node {
  name: "conv_0/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_0/kernel"
  input: "conv_0/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_0/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_0/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_0/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_0/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_0/convolution"
  op: "Conv2D"
  input: "input_1"
  input: "conv_0/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_0/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_0/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_0/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_0/gamma"
    }
  }
}
node {
  name: "bnorm_0/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_0/gamma"
}
node {
  name: "bnorm_0/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_0/gamma"
  input: "bnorm_0/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_0/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_0/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_0/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_0/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_0/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_0/beta"
    }
  }
}
node {
  name: "bnorm_0/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_0/beta"
}
node {
  name: "bnorm_0/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_0/beta"
  input: "bnorm_0/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_0/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_0/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_0/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_0/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_0/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_0/moving_mean"
    }
  }
}
node {
  name: "bnorm_0/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_0/moving_mean"
}
node {
  name: "bnorm_0/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_0/moving_mean"
  input: "bnorm_0/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_0/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_0/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_0/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_0/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_0/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_0/moving_variance"
    }
  }
}
node {
  name: "bnorm_0/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_0/moving_variance"
}
node {
  name: "bnorm_0/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_0/moving_variance"
  input: "bnorm_0/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_0/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_0/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_0/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_0/kernel"
}
node {
  name: "bnorm_0/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "bnorm_0/moving_mean"
}
node {
  name: "bnorm_0/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "bnorm_0/beta"
}
node {
  name: "bnorm_0/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "bnorm_0/moving_variance"
}
node {
  name: "bnorm_0/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "bnorm_0/gamma"
}
node {
  name: "bnorm_0/init"
  op: "NoOp"
  input: "^bnorm_0/beta/Assign"
  input: "^bnorm_0/gamma/Assign"
  input: "^bnorm_0/moving_mean/Assign"
  input: "^bnorm_0/moving_variance/Assign"
  input: "^conv_0/kernel/Assign"
}
node {
  name: "bnorm_0/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_0/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_0/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_0/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_0/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_0/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_0/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_0/convolution"
  input: "bnorm_0/ReadVariableOp"
  input: "bnorm_0/ReadVariableOp_1"
  input: "bnorm_0/Const_4"
  input: "bnorm_0/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_0/Shape"
  op: "Shape"
  input: "conv_0/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_0/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_0/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_0/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_0/strided_slice"
  op: "StridedSlice"
  input: "bnorm_0/Shape"
  input: "bnorm_0/strided_slice/stack"
  input: "bnorm_0/strided_slice/stack_1"
  input: "bnorm_0/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_0/Shape_1"
  op: "Shape"
  input: "conv_0/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_0/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_0/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_0/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_0/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_0/Shape_1"
  input: "bnorm_0/strided_slice_1/stack"
  input: "bnorm_0/strided_slice_1/stack_1"
  input: "bnorm_0/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_0/Shape_2"
  op: "Shape"
  input: "conv_0/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_0/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_0/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_0/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_0/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_0/Shape_2"
  input: "bnorm_0/strided_slice_2/stack"
  input: "bnorm_0/strided_slice_2/stack_1"
  input: "bnorm_0/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_0/Rank/packed"
  op: "Pack"
  input: "bnorm_0/strided_slice"
  input: "bnorm_0/strided_slice_1"
  input: "bnorm_0/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_0/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_0/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_0/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_0/range"
  op: "Range"
  input: "bnorm_0/range/start"
  input: "bnorm_0/Rank"
  input: "bnorm_0/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_0/Prod/input"
  op: "Pack"
  input: "bnorm_0/strided_slice"
  input: "bnorm_0/strided_slice_1"
  input: "bnorm_0/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_0/Prod"
  op: "Prod"
  input: "bnorm_0/Prod/input"
  input: "bnorm_0/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_0/Cast"
  op: "Cast"
  input: "bnorm_0/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_0/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_0/sub"
  op: "Sub"
  input: "bnorm_0/Cast"
  input: "bnorm_0/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_0/truediv"
  op: "RealDiv"
  input: "bnorm_0/Cast"
  input: "bnorm_0/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_0/mul"
  op: "Mul"
  input: "bnorm_0/FusedBatchNormV3:2"
  input: "bnorm_0/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_0/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_0/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_0/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_0/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_0/sub_1"
  op: "Sub"
  input: "bnorm_0/ReadVariableOp_2"
  input: "bnorm_0/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_0/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_0/mul_1"
  op: "Mul"
  input: "bnorm_0/sub_1"
  input: "bnorm_0/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_0/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_0/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_0/moving_mean"
  input: "bnorm_0/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_0/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_0/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_0/moving_mean"
  input: "^bnorm_0/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_0/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_0/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_0/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_0/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_0/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_0/sub_2"
  op: "Sub"
  input: "bnorm_0/ReadVariableOp_4"
  input: "bnorm_0/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_0/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_0/mul_2"
  op: "Mul"
  input: "bnorm_0/sub_2"
  input: "bnorm_0/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_0/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_0/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_0/moving_variance"
  input: "bnorm_0/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_0/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_0/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_0/moving_variance"
  input: "^bnorm_0/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_0/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_0/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_0/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_0/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_0/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_0/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_0/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_0/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_0/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_0/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_0/convolution"
  input: "bnorm_0/ReadVariableOp_6"
  input: "bnorm_0/ReadVariableOp_7"
  input: "bnorm_0/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_0/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_0/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_0/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "zero_padding2d_1/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "zero_padding2d_1/Pad"
  op: "Pad"
  input: "leaky_0/LeakyRelu"
  input: "zero_padding2d_1/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0833333358168602
      }
    }
  }
}
node {
  name: "conv_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "conv_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2097501
    }
  }
}
node {
  name: "conv_1/random_uniform/sub"
  op: "Sub"
  input: "conv_1/random_uniform/max"
  input: "conv_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_1/random_uniform/mul"
  op: "Mul"
  input: "conv_1/random_uniform/RandomUniform"
  input: "conv_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_1/random_uniform"
  op: "Add"
  input: "conv_1/random_uniform/mul"
  input: "conv_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_1/kernel"
    }
  }
}
node {
  name: "conv_1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_1/kernel"
}
node {
  name: "conv_1/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_1/kernel"
  input: "conv_1/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_1/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_1/convolution"
  op: "Conv2D"
  input: "zero_padding2d_1/Pad"
  input: "conv_1/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_1/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_1/gamma"
    }
  }
}
node {
  name: "bnorm_1/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_1/gamma"
}
node {
  name: "bnorm_1/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_1/gamma"
  input: "bnorm_1/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_1/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_1/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_1/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_1/beta"
    }
  }
}
node {
  name: "bnorm_1/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_1/beta"
}
node {
  name: "bnorm_1/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_1/beta"
  input: "bnorm_1/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_1/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_1/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_1/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_1/moving_mean"
    }
  }
}
node {
  name: "bnorm_1/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_1/moving_mean"
}
node {
  name: "bnorm_1/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_1/moving_mean"
  input: "bnorm_1/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_1/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_1/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_1/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_1/moving_variance"
    }
  }
}
node {
  name: "bnorm_1/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_1/moving_variance"
}
node {
  name: "bnorm_1/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_1/moving_variance"
  input: "bnorm_1/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_1/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_1/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_1/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_1/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_1/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_1/convolution"
  input: "bnorm_1/ReadVariableOp"
  input: "bnorm_1/ReadVariableOp_1"
  input: "bnorm_1/Const_4"
  input: "bnorm_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_1/Shape"
  op: "Shape"
  input: "conv_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_1/strided_slice"
  op: "StridedSlice"
  input: "bnorm_1/Shape"
  input: "bnorm_1/strided_slice/stack"
  input: "bnorm_1/strided_slice/stack_1"
  input: "bnorm_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_1/Shape_1"
  op: "Shape"
  input: "conv_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_1/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_1/Shape_1"
  input: "bnorm_1/strided_slice_1/stack"
  input: "bnorm_1/strided_slice_1/stack_1"
  input: "bnorm_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_1/Shape_2"
  op: "Shape"
  input: "conv_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_1/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_1/Shape_2"
  input: "bnorm_1/strided_slice_2/stack"
  input: "bnorm_1/strided_slice_2/stack_1"
  input: "bnorm_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_1/Rank/packed"
  op: "Pack"
  input: "bnorm_1/strided_slice"
  input: "bnorm_1/strided_slice_1"
  input: "bnorm_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_1/range"
  op: "Range"
  input: "bnorm_1/range/start"
  input: "bnorm_1/Rank"
  input: "bnorm_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_1/Prod/input"
  op: "Pack"
  input: "bnorm_1/strided_slice"
  input: "bnorm_1/strided_slice_1"
  input: "bnorm_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_1/Prod"
  op: "Prod"
  input: "bnorm_1/Prod/input"
  input: "bnorm_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_1/Cast"
  op: "Cast"
  input: "bnorm_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_1/sub"
  op: "Sub"
  input: "bnorm_1/Cast"
  input: "bnorm_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_1/truediv"
  op: "RealDiv"
  input: "bnorm_1/Cast"
  input: "bnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_1/mul"
  op: "Mul"
  input: "bnorm_1/FusedBatchNormV3:2"
  input: "bnorm_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_1/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_1/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_1/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_1/sub_1"
  op: "Sub"
  input: "bnorm_1/ReadVariableOp_2"
  input: "bnorm_1/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_1/mul_1"
  op: "Mul"
  input: "bnorm_1/sub_1"
  input: "bnorm_1/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_1/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_1/moving_mean"
  input: "bnorm_1/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_1/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_1/moving_mean"
  input: "^bnorm_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_1/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_1/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_1/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_1/sub_2"
  op: "Sub"
  input: "bnorm_1/ReadVariableOp_4"
  input: "bnorm_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_1/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_1/mul_2"
  op: "Mul"
  input: "bnorm_1/sub_2"
  input: "bnorm_1/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_1/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_1/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_1/moving_variance"
  input: "bnorm_1/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_1/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_1/moving_variance"
  input: "^bnorm_1/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_1/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_1/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_1/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_1/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_1/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_1/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_1/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_1/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_1/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_1/convolution"
  input: "bnorm_1/ReadVariableOp_6"
  input: "bnorm_1/ReadVariableOp_7"
  input: "bnorm_1/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_1/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_1/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_1/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_2/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv_2/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.25
      }
    }
  }
}
node {
  name: "conv_2/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "conv_2/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_2/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3709879
    }
  }
}
node {
  name: "conv_2/random_uniform/sub"
  op: "Sub"
  input: "conv_2/random_uniform/max"
  input: "conv_2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_2/random_uniform/mul"
  op: "Mul"
  input: "conv_2/random_uniform/RandomUniform"
  input: "conv_2/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_2/random_uniform"
  op: "Add"
  input: "conv_2/random_uniform/mul"
  input: "conv_2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_2/kernel"
    }
  }
}
node {
  name: "conv_2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_2/kernel"
}
node {
  name: "conv_2/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_2/kernel"
  input: "conv_2/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_2/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_2/convolution"
  op: "Conv2D"
  input: "leaky_1/LeakyRelu"
  input: "conv_2/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_2/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_2/gamma"
    }
  }
}
node {
  name: "bnorm_2/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_2/gamma"
}
node {
  name: "bnorm_2/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_2/gamma"
  input: "bnorm_2/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_2/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_2/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_2/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_2/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_2/beta"
    }
  }
}
node {
  name: "bnorm_2/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_2/beta"
}
node {
  name: "bnorm_2/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_2/beta"
  input: "bnorm_2/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_2/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_2/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_2/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_2/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_2/moving_mean"
    }
  }
}
node {
  name: "bnorm_2/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_2/moving_mean"
}
node {
  name: "bnorm_2/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_2/moving_mean"
  input: "bnorm_2/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_2/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_2/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_2/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_2/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_2/moving_variance"
    }
  }
}
node {
  name: "bnorm_2/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_2/moving_variance"
}
node {
  name: "bnorm_2/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_2/moving_variance"
  input: "bnorm_2/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_2/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_2/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_2/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_2/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_2/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_2/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_2/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_2/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_2/convolution"
  input: "bnorm_2/ReadVariableOp"
  input: "bnorm_2/ReadVariableOp_1"
  input: "bnorm_2/Const_4"
  input: "bnorm_2/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_2/Shape"
  op: "Shape"
  input: "conv_2/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_2/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_2/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_2/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_2/strided_slice"
  op: "StridedSlice"
  input: "bnorm_2/Shape"
  input: "bnorm_2/strided_slice/stack"
  input: "bnorm_2/strided_slice/stack_1"
  input: "bnorm_2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_2/Shape_1"
  op: "Shape"
  input: "conv_2/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_2/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_2/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_2/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_2/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_2/Shape_1"
  input: "bnorm_2/strided_slice_1/stack"
  input: "bnorm_2/strided_slice_1/stack_1"
  input: "bnorm_2/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_2/Shape_2"
  op: "Shape"
  input: "conv_2/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_2/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_2/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_2/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_2/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_2/Shape_2"
  input: "bnorm_2/strided_slice_2/stack"
  input: "bnorm_2/strided_slice_2/stack_1"
  input: "bnorm_2/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_2/Rank/packed"
  op: "Pack"
  input: "bnorm_2/strided_slice"
  input: "bnorm_2/strided_slice_1"
  input: "bnorm_2/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_2/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_2/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_2/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_2/range"
  op: "Range"
  input: "bnorm_2/range/start"
  input: "bnorm_2/Rank"
  input: "bnorm_2/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_2/Prod/input"
  op: "Pack"
  input: "bnorm_2/strided_slice"
  input: "bnorm_2/strided_slice_1"
  input: "bnorm_2/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_2/Prod"
  op: "Prod"
  input: "bnorm_2/Prod/input"
  input: "bnorm_2/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_2/Cast"
  op: "Cast"
  input: "bnorm_2/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_2/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_2/sub"
  op: "Sub"
  input: "bnorm_2/Cast"
  input: "bnorm_2/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_2/truediv"
  op: "RealDiv"
  input: "bnorm_2/Cast"
  input: "bnorm_2/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_2/mul"
  op: "Mul"
  input: "bnorm_2/FusedBatchNormV3:2"
  input: "bnorm_2/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_2/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_2/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_2/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_2/sub_1"
  op: "Sub"
  input: "bnorm_2/ReadVariableOp_2"
  input: "bnorm_2/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_2/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_2/mul_1"
  op: "Mul"
  input: "bnorm_2/sub_1"
  input: "bnorm_2/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_2/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_2/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_2/moving_mean"
  input: "bnorm_2/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_2/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_2/moving_mean"
  input: "^bnorm_2/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_2/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_2/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_2/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_2/sub_2"
  op: "Sub"
  input: "bnorm_2/ReadVariableOp_4"
  input: "bnorm_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_2/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_2/mul_2"
  op: "Mul"
  input: "bnorm_2/sub_2"
  input: "bnorm_2/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_2/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_2/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_2/moving_variance"
  input: "bnorm_2/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_2/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_2/moving_variance"
  input: "^bnorm_2/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_2/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_2/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_2/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_2/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_2/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_2/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_2/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_2/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_2/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_2/convolution"
  input: "bnorm_2/ReadVariableOp_6"
  input: "bnorm_2/ReadVariableOp_7"
  input: "bnorm_2/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_2/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_2/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_2/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_3/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_3/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0833333358168602
      }
    }
  }
}
node {
  name: "conv_3/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "conv_3/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_3/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3146709
    }
  }
}
node {
  name: "conv_3/random_uniform/sub"
  op: "Sub"
  input: "conv_3/random_uniform/max"
  input: "conv_3/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_3/random_uniform/mul"
  op: "Mul"
  input: "conv_3/random_uniform/RandomUniform"
  input: "conv_3/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_3/random_uniform"
  op: "Add"
  input: "conv_3/random_uniform/mul"
  input: "conv_3/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_3/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_3/kernel"
    }
  }
}
node {
  name: "conv_3/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_3/kernel"
}
node {
  name: "conv_3/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_3/kernel"
  input: "conv_3/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_3/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_3/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_3/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_3/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_3/convolution"
  op: "Conv2D"
  input: "leaky_2/LeakyRelu"
  input: "conv_3/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_3/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_3/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_3/gamma"
    }
  }
}
node {
  name: "bnorm_3/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_3/gamma"
}
node {
  name: "bnorm_3/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_3/gamma"
  input: "bnorm_3/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_3/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_3/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_3/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_3/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_3/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_3/beta"
    }
  }
}
node {
  name: "bnorm_3/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_3/beta"
}
node {
  name: "bnorm_3/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_3/beta"
  input: "bnorm_3/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_3/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_3/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_3/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_3/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_3/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_3/moving_mean"
    }
  }
}
node {
  name: "bnorm_3/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_3/moving_mean"
}
node {
  name: "bnorm_3/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_3/moving_mean"
  input: "bnorm_3/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_3/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_3/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_3/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_3/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_3/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_3/moving_variance"
    }
  }
}
node {
  name: "bnorm_3/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_3/moving_variance"
}
node {
  name: "bnorm_3/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_3/moving_variance"
  input: "bnorm_3/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_3/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_3/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_3/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_3/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_3/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_3/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_3/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_3/convolution"
  input: "bnorm_3/ReadVariableOp"
  input: "bnorm_3/ReadVariableOp_1"
  input: "bnorm_3/Const_4"
  input: "bnorm_3/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_3/Shape"
  op: "Shape"
  input: "conv_3/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_3/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_3/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_3/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_3/strided_slice"
  op: "StridedSlice"
  input: "bnorm_3/Shape"
  input: "bnorm_3/strided_slice/stack"
  input: "bnorm_3/strided_slice/stack_1"
  input: "bnorm_3/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_3/Shape_1"
  op: "Shape"
  input: "conv_3/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_3/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_3/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_3/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_3/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_3/Shape_1"
  input: "bnorm_3/strided_slice_1/stack"
  input: "bnorm_3/strided_slice_1/stack_1"
  input: "bnorm_3/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_3/Shape_2"
  op: "Shape"
  input: "conv_3/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_3/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_3/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_3/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_3/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_3/Shape_2"
  input: "bnorm_3/strided_slice_2/stack"
  input: "bnorm_3/strided_slice_2/stack_1"
  input: "bnorm_3/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_3/Rank/packed"
  op: "Pack"
  input: "bnorm_3/strided_slice"
  input: "bnorm_3/strided_slice_1"
  input: "bnorm_3/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_3/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_3/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_3/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_3/range"
  op: "Range"
  input: "bnorm_3/range/start"
  input: "bnorm_3/Rank"
  input: "bnorm_3/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_3/Prod/input"
  op: "Pack"
  input: "bnorm_3/strided_slice"
  input: "bnorm_3/strided_slice_1"
  input: "bnorm_3/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_3/Prod"
  op: "Prod"
  input: "bnorm_3/Prod/input"
  input: "bnorm_3/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_3/Cast"
  op: "Cast"
  input: "bnorm_3/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_3/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_3/sub"
  op: "Sub"
  input: "bnorm_3/Cast"
  input: "bnorm_3/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_3/truediv"
  op: "RealDiv"
  input: "bnorm_3/Cast"
  input: "bnorm_3/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_3/mul"
  op: "Mul"
  input: "bnorm_3/FusedBatchNormV3:2"
  input: "bnorm_3/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_3/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_3/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_3/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_3/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_3/sub_1"
  op: "Sub"
  input: "bnorm_3/ReadVariableOp_2"
  input: "bnorm_3/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_3/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_3/mul_1"
  op: "Mul"
  input: "bnorm_3/sub_1"
  input: "bnorm_3/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_3/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_3/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_3/moving_mean"
  input: "bnorm_3/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_3/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_3/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_3/moving_mean"
  input: "^bnorm_3/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_3/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_3/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_3/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_3/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_3/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_3/sub_2"
  op: "Sub"
  input: "bnorm_3/ReadVariableOp_4"
  input: "bnorm_3/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_3/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_3/mul_2"
  op: "Mul"
  input: "bnorm_3/sub_2"
  input: "bnorm_3/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_3/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_3/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_3/moving_variance"
  input: "bnorm_3/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_3/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_3/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_3/moving_variance"
  input: "^bnorm_3/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_3/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_3/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_3/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_3/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_3/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_3/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_3/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_3/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_3/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_3/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_3/convolution"
  input: "bnorm_3/ReadVariableOp_6"
  input: "bnorm_3/ReadVariableOp_7"
  input: "bnorm_3/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_3/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_3/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_3/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "add_1/add"
  op: "AddV2"
  input: "leaky_1/LeakyRelu"
  input: "leaky_3/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_padding2d_2/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "zero_padding2d_2/Pad"
  op: "Pad"
  input: "add_1/add"
  input: "zero_padding2d_2/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_5/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv_5/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0589255653321743
      }
    }
  }
}
node {
  name: "conv_5/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "conv_5/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_5/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6562658
    }
  }
}
node {
  name: "conv_5/random_uniform/sub"
  op: "Sub"
  input: "conv_5/random_uniform/max"
  input: "conv_5/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_5/random_uniform/mul"
  op: "Mul"
  input: "conv_5/random_uniform/RandomUniform"
  input: "conv_5/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_5/random_uniform"
  op: "Add"
  input: "conv_5/random_uniform/mul"
  input: "conv_5/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_5/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_5/kernel"
    }
  }
}
node {
  name: "conv_5/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_5/kernel"
}
node {
  name: "conv_5/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_5/kernel"
  input: "conv_5/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_5/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_5/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_5/convolution"
  op: "Conv2D"
  input: "zero_padding2d_2/Pad"
  input: "conv_5/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_5/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_5/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_5/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_5/gamma"
    }
  }
}
node {
  name: "bnorm_5/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_5/gamma"
}
node {
  name: "bnorm_5/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_5/gamma"
  input: "bnorm_5/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_5/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_5/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_5/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_5/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_5/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_5/beta"
    }
  }
}
node {
  name: "bnorm_5/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_5/beta"
}
node {
  name: "bnorm_5/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_5/beta"
  input: "bnorm_5/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_5/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_5/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_5/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_5/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_5/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_5/moving_mean"
    }
  }
}
node {
  name: "bnorm_5/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_5/moving_mean"
}
node {
  name: "bnorm_5/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_5/moving_mean"
  input: "bnorm_5/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_5/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_5/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_5/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_5/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_5/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_5/moving_variance"
    }
  }
}
node {
  name: "bnorm_5/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_5/moving_variance"
}
node {
  name: "bnorm_5/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_5/moving_variance"
  input: "bnorm_5/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_5/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_5/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_5/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_5/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_5/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_5/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_5/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_5/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_5/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_5/convolution"
  input: "bnorm_5/ReadVariableOp"
  input: "bnorm_5/ReadVariableOp_1"
  input: "bnorm_5/Const_4"
  input: "bnorm_5/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_5/Shape"
  op: "Shape"
  input: "conv_5/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_5/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_5/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_5/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_5/strided_slice"
  op: "StridedSlice"
  input: "bnorm_5/Shape"
  input: "bnorm_5/strided_slice/stack"
  input: "bnorm_5/strided_slice/stack_1"
  input: "bnorm_5/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_5/Shape_1"
  op: "Shape"
  input: "conv_5/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_5/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_5/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_5/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_5/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_5/Shape_1"
  input: "bnorm_5/strided_slice_1/stack"
  input: "bnorm_5/strided_slice_1/stack_1"
  input: "bnorm_5/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_5/Shape_2"
  op: "Shape"
  input: "conv_5/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_5/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_5/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_5/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_5/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_5/Shape_2"
  input: "bnorm_5/strided_slice_2/stack"
  input: "bnorm_5/strided_slice_2/stack_1"
  input: "bnorm_5/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_5/Rank/packed"
  op: "Pack"
  input: "bnorm_5/strided_slice"
  input: "bnorm_5/strided_slice_1"
  input: "bnorm_5/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_5/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_5/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_5/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_5/range"
  op: "Range"
  input: "bnorm_5/range/start"
  input: "bnorm_5/Rank"
  input: "bnorm_5/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_5/Prod/input"
  op: "Pack"
  input: "bnorm_5/strided_slice"
  input: "bnorm_5/strided_slice_1"
  input: "bnorm_5/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_5/Prod"
  op: "Prod"
  input: "bnorm_5/Prod/input"
  input: "bnorm_5/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_5/Cast"
  op: "Cast"
  input: "bnorm_5/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_5/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_5/sub"
  op: "Sub"
  input: "bnorm_5/Cast"
  input: "bnorm_5/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_5/truediv"
  op: "RealDiv"
  input: "bnorm_5/Cast"
  input: "bnorm_5/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_5/mul"
  op: "Mul"
  input: "bnorm_5/FusedBatchNormV3:2"
  input: "bnorm_5/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_5/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_5/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_5/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_5/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_5/sub_1"
  op: "Sub"
  input: "bnorm_5/ReadVariableOp_2"
  input: "bnorm_5/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_5/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_5/mul_1"
  op: "Mul"
  input: "bnorm_5/sub_1"
  input: "bnorm_5/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_5/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_5/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_5/moving_mean"
  input: "bnorm_5/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_5/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_5/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_5/moving_mean"
  input: "^bnorm_5/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_5/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_5/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_5/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_5/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_5/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_5/sub_2"
  op: "Sub"
  input: "bnorm_5/ReadVariableOp_4"
  input: "bnorm_5/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_5/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_5/mul_2"
  op: "Mul"
  input: "bnorm_5/sub_2"
  input: "bnorm_5/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_5/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_5/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_5/moving_variance"
  input: "bnorm_5/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_5/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_5/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_5/moving_variance"
  input: "^bnorm_5/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_5/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_5/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_5/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_5/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_5/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_5/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_5/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_5/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_5/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_5/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_5/convolution"
  input: "bnorm_5/ReadVariableOp_6"
  input: "bnorm_5/ReadVariableOp_7"
  input: "bnorm_5/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_5/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_5/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_5/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_6/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_6/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1767766922712326
      }
    }
  }
}
node {
  name: "conv_6/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1767766922712326
      }
    }
  }
}
node {
  name: "conv_6/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_6/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4600344
    }
  }
}
node {
  name: "conv_6/random_uniform/sub"
  op: "Sub"
  input: "conv_6/random_uniform/max"
  input: "conv_6/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_6/random_uniform/mul"
  op: "Mul"
  input: "conv_6/random_uniform/RandomUniform"
  input: "conv_6/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_6/random_uniform"
  op: "Add"
  input: "conv_6/random_uniform/mul"
  input: "conv_6/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_6/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_6/kernel"
    }
  }
}
node {
  name: "conv_6/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_6/kernel"
}
node {
  name: "conv_6/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_6/kernel"
  input: "conv_6/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_6/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_6/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_6/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_6/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_6/convolution"
  op: "Conv2D"
  input: "leaky_5/LeakyRelu"
  input: "conv_6/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_6/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_6/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_6/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_6/gamma"
    }
  }
}
node {
  name: "bnorm_6/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_6/gamma"
}
node {
  name: "bnorm_6/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_6/gamma"
  input: "bnorm_6/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_6/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_6/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_6/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_6/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_6/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_6/beta"
    }
  }
}
node {
  name: "bnorm_6/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_6/beta"
}
node {
  name: "bnorm_6/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_6/beta"
  input: "bnorm_6/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_6/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_6/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_6/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_6/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_6/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_6/moving_mean"
    }
  }
}
node {
  name: "bnorm_6/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_6/moving_mean"
}
node {
  name: "bnorm_6/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_6/moving_mean"
  input: "bnorm_6/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_6/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_6/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_6/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_6/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_6/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_6/moving_variance"
    }
  }
}
node {
  name: "bnorm_6/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_6/moving_variance"
}
node {
  name: "bnorm_6/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_6/moving_variance"
  input: "bnorm_6/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_6/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_6/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_6/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_6/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_6/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_6/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_6/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_6/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_6/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_6/convolution"
  input: "bnorm_6/ReadVariableOp"
  input: "bnorm_6/ReadVariableOp_1"
  input: "bnorm_6/Const_4"
  input: "bnorm_6/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_6/Shape"
  op: "Shape"
  input: "conv_6/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_6/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_6/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_6/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_6/strided_slice"
  op: "StridedSlice"
  input: "bnorm_6/Shape"
  input: "bnorm_6/strided_slice/stack"
  input: "bnorm_6/strided_slice/stack_1"
  input: "bnorm_6/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_6/Shape_1"
  op: "Shape"
  input: "conv_6/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_6/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_6/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_6/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_6/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_6/Shape_1"
  input: "bnorm_6/strided_slice_1/stack"
  input: "bnorm_6/strided_slice_1/stack_1"
  input: "bnorm_6/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_6/Shape_2"
  op: "Shape"
  input: "conv_6/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_6/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_6/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_6/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_6/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_6/Shape_2"
  input: "bnorm_6/strided_slice_2/stack"
  input: "bnorm_6/strided_slice_2/stack_1"
  input: "bnorm_6/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_6/Rank/packed"
  op: "Pack"
  input: "bnorm_6/strided_slice"
  input: "bnorm_6/strided_slice_1"
  input: "bnorm_6/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_6/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_6/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_6/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_6/range"
  op: "Range"
  input: "bnorm_6/range/start"
  input: "bnorm_6/Rank"
  input: "bnorm_6/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_6/Prod/input"
  op: "Pack"
  input: "bnorm_6/strided_slice"
  input: "bnorm_6/strided_slice_1"
  input: "bnorm_6/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_6/Prod"
  op: "Prod"
  input: "bnorm_6/Prod/input"
  input: "bnorm_6/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_6/Cast"
  op: "Cast"
  input: "bnorm_6/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_6/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_6/sub"
  op: "Sub"
  input: "bnorm_6/Cast"
  input: "bnorm_6/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_6/truediv"
  op: "RealDiv"
  input: "bnorm_6/Cast"
  input: "bnorm_6/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_6/mul"
  op: "Mul"
  input: "bnorm_6/FusedBatchNormV3:2"
  input: "bnorm_6/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_6/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_6/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_6/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_6/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_6/sub_1"
  op: "Sub"
  input: "bnorm_6/ReadVariableOp_2"
  input: "bnorm_6/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_6/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_6/mul_1"
  op: "Mul"
  input: "bnorm_6/sub_1"
  input: "bnorm_6/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_6/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_6/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_6/moving_mean"
  input: "bnorm_6/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_6/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_6/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_6/moving_mean"
  input: "^bnorm_6/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_6/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_6/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_6/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_6/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_6/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_6/sub_2"
  op: "Sub"
  input: "bnorm_6/ReadVariableOp_4"
  input: "bnorm_6/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_6/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_6/mul_2"
  op: "Mul"
  input: "bnorm_6/sub_2"
  input: "bnorm_6/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_6/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_6/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_6/moving_variance"
  input: "bnorm_6/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_6/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_6/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_6/moving_variance"
  input: "^bnorm_6/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_6/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_6/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_6/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_6/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_6/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_6/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_6/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_6/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_6/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_6/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_6/convolution"
  input: "bnorm_6/ReadVariableOp_6"
  input: "bnorm_6/ReadVariableOp_7"
  input: "bnorm_6/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_6/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_6/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_6/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_7/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv_7/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0589255653321743
      }
    }
  }
}
node {
  name: "conv_7/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "conv_7/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_7/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2166410
    }
  }
}
node {
  name: "conv_7/random_uniform/sub"
  op: "Sub"
  input: "conv_7/random_uniform/max"
  input: "conv_7/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_7/random_uniform/mul"
  op: "Mul"
  input: "conv_7/random_uniform/RandomUniform"
  input: "conv_7/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_7/random_uniform"
  op: "Add"
  input: "conv_7/random_uniform/mul"
  input: "conv_7/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_7/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_7/kernel"
    }
  }
}
node {
  name: "conv_7/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_7/kernel"
}
node {
  name: "conv_7/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_7/kernel"
  input: "conv_7/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_7/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_7/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_7/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_7/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_7/convolution"
  op: "Conv2D"
  input: "leaky_6/LeakyRelu"
  input: "conv_7/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_7/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_7/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_7/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_7/gamma"
    }
  }
}
node {
  name: "bnorm_7/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_7/gamma"
}
node {
  name: "bnorm_7/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_7/gamma"
  input: "bnorm_7/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_7/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_7/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_7/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_7/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_7/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_7/beta"
    }
  }
}
node {
  name: "bnorm_7/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_7/beta"
}
node {
  name: "bnorm_7/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_7/beta"
  input: "bnorm_7/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_7/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_7/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_7/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_7/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_7/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_7/moving_mean"
    }
  }
}
node {
  name: "bnorm_7/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_7/moving_mean"
}
node {
  name: "bnorm_7/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_7/moving_mean"
  input: "bnorm_7/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_7/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_7/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_7/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_7/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_7/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_7/moving_variance"
    }
  }
}
node {
  name: "bnorm_7/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_7/moving_variance"
}
node {
  name: "bnorm_7/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_7/moving_variance"
  input: "bnorm_7/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_7/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_7/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_7/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_7/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_7/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_7/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_7/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_7/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_7/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_7/convolution"
  input: "bnorm_7/ReadVariableOp"
  input: "bnorm_7/ReadVariableOp_1"
  input: "bnorm_7/Const_4"
  input: "bnorm_7/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_7/Shape"
  op: "Shape"
  input: "conv_7/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_7/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_7/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_7/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_7/strided_slice"
  op: "StridedSlice"
  input: "bnorm_7/Shape"
  input: "bnorm_7/strided_slice/stack"
  input: "bnorm_7/strided_slice/stack_1"
  input: "bnorm_7/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_7/Shape_1"
  op: "Shape"
  input: "conv_7/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_7/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_7/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_7/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_7/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_7/Shape_1"
  input: "bnorm_7/strided_slice_1/stack"
  input: "bnorm_7/strided_slice_1/stack_1"
  input: "bnorm_7/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_7/Shape_2"
  op: "Shape"
  input: "conv_7/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_7/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_7/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_7/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_7/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_7/Shape_2"
  input: "bnorm_7/strided_slice_2/stack"
  input: "bnorm_7/strided_slice_2/stack_1"
  input: "bnorm_7/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_7/Rank/packed"
  op: "Pack"
  input: "bnorm_7/strided_slice"
  input: "bnorm_7/strided_slice_1"
  input: "bnorm_7/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_7/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_7/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_7/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_7/range"
  op: "Range"
  input: "bnorm_7/range/start"
  input: "bnorm_7/Rank"
  input: "bnorm_7/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_7/Prod/input"
  op: "Pack"
  input: "bnorm_7/strided_slice"
  input: "bnorm_7/strided_slice_1"
  input: "bnorm_7/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_7/Prod"
  op: "Prod"
  input: "bnorm_7/Prod/input"
  input: "bnorm_7/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_7/Cast"
  op: "Cast"
  input: "bnorm_7/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_7/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_7/sub"
  op: "Sub"
  input: "bnorm_7/Cast"
  input: "bnorm_7/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_7/truediv"
  op: "RealDiv"
  input: "bnorm_7/Cast"
  input: "bnorm_7/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_7/mul"
  op: "Mul"
  input: "bnorm_7/FusedBatchNormV3:2"
  input: "bnorm_7/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_7/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_7/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_7/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_7/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_7/sub_1"
  op: "Sub"
  input: "bnorm_7/ReadVariableOp_2"
  input: "bnorm_7/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_7/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_7/mul_1"
  op: "Mul"
  input: "bnorm_7/sub_1"
  input: "bnorm_7/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_7/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_7/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_7/moving_mean"
  input: "bnorm_7/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_7/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_7/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_7/moving_mean"
  input: "^bnorm_7/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_7/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_7/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_7/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_7/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_7/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_7/sub_2"
  op: "Sub"
  input: "bnorm_7/ReadVariableOp_4"
  input: "bnorm_7/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_7/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_7/mul_2"
  op: "Mul"
  input: "bnorm_7/sub_2"
  input: "bnorm_7/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_7/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_7/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_7/moving_variance"
  input: "bnorm_7/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_7/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_7/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_7/moving_variance"
  input: "^bnorm_7/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_7/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_7/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_7/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_7/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_7/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_7/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_7/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_7/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_7/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_7/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_7/convolution"
  input: "bnorm_7/ReadVariableOp_6"
  input: "bnorm_7/ReadVariableOp_7"
  input: "bnorm_7/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_7/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_7/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_7/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "add_2/add"
  op: "AddV2"
  input: "leaky_5/LeakyRelu"
  input: "leaky_7/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_9/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_9/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1767766922712326
      }
    }
  }
}
node {
  name: "conv_9/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1767766922712326
      }
    }
  }
}
node {
  name: "conv_9/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_9/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 988787
    }
  }
}
node {
  name: "conv_9/random_uniform/sub"
  op: "Sub"
  input: "conv_9/random_uniform/max"
  input: "conv_9/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_9/random_uniform/mul"
  op: "Mul"
  input: "conv_9/random_uniform/RandomUniform"
  input: "conv_9/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_9/random_uniform"
  op: "Add"
  input: "conv_9/random_uniform/mul"
  input: "conv_9/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_9/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_9/kernel"
    }
  }
}
node {
  name: "conv_9/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_9/kernel"
}
node {
  name: "conv_9/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_9/kernel"
  input: "conv_9/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_9/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_9/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_9/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_9/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_9/convolution"
  op: "Conv2D"
  input: "add_2/add"
  input: "conv_9/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_9/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_9/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_9/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_9/gamma"
    }
  }
}
node {
  name: "bnorm_9/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_9/gamma"
}
node {
  name: "bnorm_9/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_9/gamma"
  input: "bnorm_9/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_9/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_9/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_9/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_9/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_9/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_9/beta"
    }
  }
}
node {
  name: "bnorm_9/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_9/beta"
}
node {
  name: "bnorm_9/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_9/beta"
  input: "bnorm_9/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_9/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_9/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_9/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_9/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_9/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_9/moving_mean"
    }
  }
}
node {
  name: "bnorm_9/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_9/moving_mean"
}
node {
  name: "bnorm_9/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_9/moving_mean"
  input: "bnorm_9/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_9/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_9/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_9/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_9/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_9/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_9/moving_variance"
    }
  }
}
node {
  name: "bnorm_9/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_9/moving_variance"
}
node {
  name: "bnorm_9/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_9/moving_variance"
  input: "bnorm_9/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_9/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_9/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_9/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_9/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_9/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_9/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_9/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_9/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_9/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_9/convolution"
  input: "bnorm_9/ReadVariableOp"
  input: "bnorm_9/ReadVariableOp_1"
  input: "bnorm_9/Const_4"
  input: "bnorm_9/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_9/Shape"
  op: "Shape"
  input: "conv_9/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_9/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_9/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_9/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_9/strided_slice"
  op: "StridedSlice"
  input: "bnorm_9/Shape"
  input: "bnorm_9/strided_slice/stack"
  input: "bnorm_9/strided_slice/stack_1"
  input: "bnorm_9/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_9/Shape_1"
  op: "Shape"
  input: "conv_9/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_9/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_9/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_9/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_9/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_9/Shape_1"
  input: "bnorm_9/strided_slice_1/stack"
  input: "bnorm_9/strided_slice_1/stack_1"
  input: "bnorm_9/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_9/Shape_2"
  op: "Shape"
  input: "conv_9/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_9/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_9/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_9/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_9/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_9/Shape_2"
  input: "bnorm_9/strided_slice_2/stack"
  input: "bnorm_9/strided_slice_2/stack_1"
  input: "bnorm_9/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_9/Rank/packed"
  op: "Pack"
  input: "bnorm_9/strided_slice"
  input: "bnorm_9/strided_slice_1"
  input: "bnorm_9/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_9/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_9/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_9/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_9/range"
  op: "Range"
  input: "bnorm_9/range/start"
  input: "bnorm_9/Rank"
  input: "bnorm_9/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_9/Prod/input"
  op: "Pack"
  input: "bnorm_9/strided_slice"
  input: "bnorm_9/strided_slice_1"
  input: "bnorm_9/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_9/Prod"
  op: "Prod"
  input: "bnorm_9/Prod/input"
  input: "bnorm_9/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_9/Cast"
  op: "Cast"
  input: "bnorm_9/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_9/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_9/sub"
  op: "Sub"
  input: "bnorm_9/Cast"
  input: "bnorm_9/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_9/truediv"
  op: "RealDiv"
  input: "bnorm_9/Cast"
  input: "bnorm_9/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_9/mul"
  op: "Mul"
  input: "bnorm_9/FusedBatchNormV3:2"
  input: "bnorm_9/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_9/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_9/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_9/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_9/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_9/sub_1"
  op: "Sub"
  input: "bnorm_9/ReadVariableOp_2"
  input: "bnorm_9/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_9/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_9/mul_1"
  op: "Mul"
  input: "bnorm_9/sub_1"
  input: "bnorm_9/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_9/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_9/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_9/moving_mean"
  input: "bnorm_9/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_9/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_9/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_9/moving_mean"
  input: "^bnorm_9/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_9/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_9/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_9/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_9/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_9/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_9/sub_2"
  op: "Sub"
  input: "bnorm_9/ReadVariableOp_4"
  input: "bnorm_9/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_9/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_9/mul_2"
  op: "Mul"
  input: "bnorm_9/sub_2"
  input: "bnorm_9/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_9/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_9/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_9/moving_variance"
  input: "bnorm_9/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_9/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_9/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_9/moving_variance"
  input: "^bnorm_9/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_9/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_9/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_9/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_9/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_9/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_9/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_9/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_9/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_9/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_9/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_9/convolution"
  input: "bnorm_9/ReadVariableOp_6"
  input: "bnorm_9/ReadVariableOp_7"
  input: "bnorm_9/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_9/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_9/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_9/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_10/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv_10/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0589255653321743
      }
    }
  }
}
node {
  name: "conv_10/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "conv_10/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_10/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4371970
    }
  }
}
node {
  name: "conv_10/random_uniform/sub"
  op: "Sub"
  input: "conv_10/random_uniform/max"
  input: "conv_10/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_10/random_uniform/mul"
  op: "Mul"
  input: "conv_10/random_uniform/RandomUniform"
  input: "conv_10/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_10/random_uniform"
  op: "Add"
  input: "conv_10/random_uniform/mul"
  input: "conv_10/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_10/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_10/kernel"
    }
  }
}
node {
  name: "conv_10/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_10/kernel"
}
node {
  name: "conv_10/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_10/kernel"
  input: "conv_10/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_10/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_10/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_10/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_10/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_10/convolution"
  op: "Conv2D"
  input: "leaky_9/LeakyRelu"
  input: "conv_10/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_10/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_10/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_10/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_10/gamma"
    }
  }
}
node {
  name: "bnorm_10/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_10/gamma"
}
node {
  name: "bnorm_10/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_10/gamma"
  input: "bnorm_10/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_10/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_10/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_10/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_10/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_10/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_10/beta"
    }
  }
}
node {
  name: "bnorm_10/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_10/beta"
}
node {
  name: "bnorm_10/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_10/beta"
  input: "bnorm_10/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_10/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_10/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_10/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_10/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_10/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_10/moving_mean"
    }
  }
}
node {
  name: "bnorm_10/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_10/moving_mean"
}
node {
  name: "bnorm_10/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_10/moving_mean"
  input: "bnorm_10/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_10/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_10/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_10/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_10/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_10/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_10/moving_variance"
    }
  }
}
node {
  name: "bnorm_10/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_10/moving_variance"
}
node {
  name: "bnorm_10/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_10/moving_variance"
  input: "bnorm_10/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_10/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_10/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_10/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_10/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_10/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_10/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_10/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_10/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_10/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_10/convolution"
  input: "bnorm_10/ReadVariableOp"
  input: "bnorm_10/ReadVariableOp_1"
  input: "bnorm_10/Const_4"
  input: "bnorm_10/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_10/Shape"
  op: "Shape"
  input: "conv_10/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_10/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_10/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_10/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_10/strided_slice"
  op: "StridedSlice"
  input: "bnorm_10/Shape"
  input: "bnorm_10/strided_slice/stack"
  input: "bnorm_10/strided_slice/stack_1"
  input: "bnorm_10/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_10/Shape_1"
  op: "Shape"
  input: "conv_10/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_10/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_10/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_10/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_10/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_10/Shape_1"
  input: "bnorm_10/strided_slice_1/stack"
  input: "bnorm_10/strided_slice_1/stack_1"
  input: "bnorm_10/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_10/Shape_2"
  op: "Shape"
  input: "conv_10/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_10/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_10/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_10/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_10/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_10/Shape_2"
  input: "bnorm_10/strided_slice_2/stack"
  input: "bnorm_10/strided_slice_2/stack_1"
  input: "bnorm_10/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_10/Rank/packed"
  op: "Pack"
  input: "bnorm_10/strided_slice"
  input: "bnorm_10/strided_slice_1"
  input: "bnorm_10/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_10/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_10/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_10/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_10/range"
  op: "Range"
  input: "bnorm_10/range/start"
  input: "bnorm_10/Rank"
  input: "bnorm_10/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_10/Prod/input"
  op: "Pack"
  input: "bnorm_10/strided_slice"
  input: "bnorm_10/strided_slice_1"
  input: "bnorm_10/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_10/Prod"
  op: "Prod"
  input: "bnorm_10/Prod/input"
  input: "bnorm_10/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_10/Cast"
  op: "Cast"
  input: "bnorm_10/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_10/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_10/sub"
  op: "Sub"
  input: "bnorm_10/Cast"
  input: "bnorm_10/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_10/truediv"
  op: "RealDiv"
  input: "bnorm_10/Cast"
  input: "bnorm_10/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_10/mul"
  op: "Mul"
  input: "bnorm_10/FusedBatchNormV3:2"
  input: "bnorm_10/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_10/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_10/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_10/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_10/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_10/sub_1"
  op: "Sub"
  input: "bnorm_10/ReadVariableOp_2"
  input: "bnorm_10/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_10/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_10/mul_1"
  op: "Mul"
  input: "bnorm_10/sub_1"
  input: "bnorm_10/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_10/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_10/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_10/moving_mean"
  input: "bnorm_10/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_10/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_10/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_10/moving_mean"
  input: "^bnorm_10/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_10/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_10/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_10/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_10/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_10/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_10/sub_2"
  op: "Sub"
  input: "bnorm_10/ReadVariableOp_4"
  input: "bnorm_10/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_10/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_10/mul_2"
  op: "Mul"
  input: "bnorm_10/sub_2"
  input: "bnorm_10/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_10/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_10/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_10/moving_variance"
  input: "bnorm_10/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_10/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_10/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_10/moving_variance"
  input: "^bnorm_10/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_10/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_10/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_10/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_10/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_10/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_10/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_10/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_10/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_10/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_10/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_10/convolution"
  input: "bnorm_10/ReadVariableOp_6"
  input: "bnorm_10/ReadVariableOp_7"
  input: "bnorm_10/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_10/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_10/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_10/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "add_3/add"
  op: "AddV2"
  input: "add_2/add"
  input: "leaky_10/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_padding2d_3/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "zero_padding2d_3/Pad"
  op: "Pad"
  input: "add_3/add"
  input: "zero_padding2d_3/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_12/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv_12/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0416666679084301
      }
    }
  }
}
node {
  name: "conv_12/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084301
      }
    }
  }
}
node {
  name: "conv_12/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_12/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5287559
    }
  }
}
node {
  name: "conv_12/random_uniform/sub"
  op: "Sub"
  input: "conv_12/random_uniform/max"
  input: "conv_12/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_12/random_uniform/mul"
  op: "Mul"
  input: "conv_12/random_uniform/RandomUniform"
  input: "conv_12/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_12/random_uniform"
  op: "Add"
  input: "conv_12/random_uniform/mul"
  input: "conv_12/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_12/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_12/kernel"
    }
  }
}
node {
  name: "conv_12/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_12/kernel"
}
node {
  name: "conv_12/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_12/kernel"
  input: "conv_12/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_12/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_12/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_12/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_12/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_12/convolution"
  op: "Conv2D"
  input: "zero_padding2d_3/Pad"
  input: "conv_12/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_12/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_12/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_12/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_12/gamma"
    }
  }
}
node {
  name: "bnorm_12/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_12/gamma"
}
node {
  name: "bnorm_12/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_12/gamma"
  input: "bnorm_12/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_12/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_12/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_12/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_12/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_12/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_12/beta"
    }
  }
}
node {
  name: "bnorm_12/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_12/beta"
}
node {
  name: "bnorm_12/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_12/beta"
  input: "bnorm_12/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_12/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_12/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_12/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_12/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_12/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_12/moving_mean"
    }
  }
}
node {
  name: "bnorm_12/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_12/moving_mean"
}
node {
  name: "bnorm_12/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_12/moving_mean"
  input: "bnorm_12/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_12/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_12/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_12/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_12/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_12/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_12/moving_variance"
    }
  }
}
node {
  name: "bnorm_12/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_12/moving_variance"
}
node {
  name: "bnorm_12/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_12/moving_variance"
  input: "bnorm_12/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_12/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_12/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_12/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_12/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_12/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_12/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_12/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_12/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_12/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_12/convolution"
  input: "bnorm_12/ReadVariableOp"
  input: "bnorm_12/ReadVariableOp_1"
  input: "bnorm_12/Const_4"
  input: "bnorm_12/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_12/Shape"
  op: "Shape"
  input: "conv_12/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_12/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_12/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_12/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_12/strided_slice"
  op: "StridedSlice"
  input: "bnorm_12/Shape"
  input: "bnorm_12/strided_slice/stack"
  input: "bnorm_12/strided_slice/stack_1"
  input: "bnorm_12/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_12/Shape_1"
  op: "Shape"
  input: "conv_12/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_12/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_12/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_12/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_12/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_12/Shape_1"
  input: "bnorm_12/strided_slice_1/stack"
  input: "bnorm_12/strided_slice_1/stack_1"
  input: "bnorm_12/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_12/Shape_2"
  op: "Shape"
  input: "conv_12/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_12/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_12/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_12/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_12/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_12/Shape_2"
  input: "bnorm_12/strided_slice_2/stack"
  input: "bnorm_12/strided_slice_2/stack_1"
  input: "bnorm_12/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_12/Rank/packed"
  op: "Pack"
  input: "bnorm_12/strided_slice"
  input: "bnorm_12/strided_slice_1"
  input: "bnorm_12/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_12/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_12/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_12/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_12/range"
  op: "Range"
  input: "bnorm_12/range/start"
  input: "bnorm_12/Rank"
  input: "bnorm_12/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_12/Prod/input"
  op: "Pack"
  input: "bnorm_12/strided_slice"
  input: "bnorm_12/strided_slice_1"
  input: "bnorm_12/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_12/Prod"
  op: "Prod"
  input: "bnorm_12/Prod/input"
  input: "bnorm_12/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_12/Cast"
  op: "Cast"
  input: "bnorm_12/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_12/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_12/sub"
  op: "Sub"
  input: "bnorm_12/Cast"
  input: "bnorm_12/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_12/truediv"
  op: "RealDiv"
  input: "bnorm_12/Cast"
  input: "bnorm_12/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_12/mul"
  op: "Mul"
  input: "bnorm_12/FusedBatchNormV3:2"
  input: "bnorm_12/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_12/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_12/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_12/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_12/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_12/sub_1"
  op: "Sub"
  input: "bnorm_12/ReadVariableOp_2"
  input: "bnorm_12/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_12/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_12/mul_1"
  op: "Mul"
  input: "bnorm_12/sub_1"
  input: "bnorm_12/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_12/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_12/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_12/moving_mean"
  input: "bnorm_12/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_12/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_12/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_12/moving_mean"
  input: "^bnorm_12/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_12/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_12/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_12/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_12/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_12/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_12/sub_2"
  op: "Sub"
  input: "bnorm_12/ReadVariableOp_4"
  input: "bnorm_12/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_12/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_12/mul_2"
  op: "Mul"
  input: "bnorm_12/sub_2"
  input: "bnorm_12/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_12/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_12/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_12/moving_variance"
  input: "bnorm_12/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_12/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_12/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_12/moving_variance"
  input: "^bnorm_12/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_12/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_12/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_12/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_12/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_12/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_12/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_12/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_12/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_12/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_12/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_12/convolution"
  input: "bnorm_12/ReadVariableOp_6"
  input: "bnorm_12/ReadVariableOp_7"
  input: "bnorm_12/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_12/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_12/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_12/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_13/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv_13/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "conv_13/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "conv_13/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_13/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2926329
    }
  }
}
node {
  name: "conv_13/random_uniform/sub"
  op: "Sub"
  input: "conv_13/random_uniform/max"
  input: "conv_13/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_13/random_uniform/mul"
  op: "Mul"
  input: "conv_13/random_uniform/RandomUniform"
  input: "conv_13/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_13/random_uniform"
  op: "Add"
  input: "conv_13/random_uniform/mul"
  input: "conv_13/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_13/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_13/kernel"
    }
  }
}
node {
  name: "conv_13/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_13/kernel"
}
node {
  name: "conv_13/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_13/kernel"
  input: "conv_13/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_13/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_13/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_13/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_13/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_13/convolution"
  op: "Conv2D"
  input: "leaky_12/LeakyRelu"
  input: "conv_13/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_13/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_13/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_13/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_13/gamma"
    }
  }
}
node {
  name: "bnorm_13/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_13/gamma"
}
node {
  name: "bnorm_13/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_13/gamma"
  input: "bnorm_13/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_13/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_13/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_13/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_13/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_13/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_13/beta"
    }
  }
}
node {
  name: "bnorm_13/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_13/beta"
}
node {
  name: "bnorm_13/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_13/beta"
  input: "bnorm_13/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_13/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_13/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_13/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_13/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_13/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_13/moving_mean"
    }
  }
}
node {
  name: "bnorm_13/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_13/moving_mean"
}
node {
  name: "bnorm_13/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_13/moving_mean"
  input: "bnorm_13/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_13/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_13/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_13/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_13/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_13/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_13/moving_variance"
    }
  }
}
node {
  name: "bnorm_13/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_13/moving_variance"
}
node {
  name: "bnorm_13/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_13/moving_variance"
  input: "bnorm_13/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_13/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_13/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_13/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_13/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_13/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_13/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_13/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_13/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_13/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_13/convolution"
  input: "bnorm_13/ReadVariableOp"
  input: "bnorm_13/ReadVariableOp_1"
  input: "bnorm_13/Const_4"
  input: "bnorm_13/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_13/Shape"
  op: "Shape"
  input: "conv_13/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_13/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_13/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_13/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_13/strided_slice"
  op: "StridedSlice"
  input: "bnorm_13/Shape"
  input: "bnorm_13/strided_slice/stack"
  input: "bnorm_13/strided_slice/stack_1"
  input: "bnorm_13/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_13/Shape_1"
  op: "Shape"
  input: "conv_13/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_13/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_13/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_13/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_13/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_13/Shape_1"
  input: "bnorm_13/strided_slice_1/stack"
  input: "bnorm_13/strided_slice_1/stack_1"
  input: "bnorm_13/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_13/Shape_2"
  op: "Shape"
  input: "conv_13/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_13/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_13/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_13/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_13/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_13/Shape_2"
  input: "bnorm_13/strided_slice_2/stack"
  input: "bnorm_13/strided_slice_2/stack_1"
  input: "bnorm_13/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_13/Rank/packed"
  op: "Pack"
  input: "bnorm_13/strided_slice"
  input: "bnorm_13/strided_slice_1"
  input: "bnorm_13/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_13/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_13/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_13/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_13/range"
  op: "Range"
  input: "bnorm_13/range/start"
  input: "bnorm_13/Rank"
  input: "bnorm_13/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_13/Prod/input"
  op: "Pack"
  input: "bnorm_13/strided_slice"
  input: "bnorm_13/strided_slice_1"
  input: "bnorm_13/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_13/Prod"
  op: "Prod"
  input: "bnorm_13/Prod/input"
  input: "bnorm_13/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_13/Cast"
  op: "Cast"
  input: "bnorm_13/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_13/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_13/sub"
  op: "Sub"
  input: "bnorm_13/Cast"
  input: "bnorm_13/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_13/truediv"
  op: "RealDiv"
  input: "bnorm_13/Cast"
  input: "bnorm_13/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_13/mul"
  op: "Mul"
  input: "bnorm_13/FusedBatchNormV3:2"
  input: "bnorm_13/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_13/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_13/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_13/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_13/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_13/sub_1"
  op: "Sub"
  input: "bnorm_13/ReadVariableOp_2"
  input: "bnorm_13/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_13/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_13/mul_1"
  op: "Mul"
  input: "bnorm_13/sub_1"
  input: "bnorm_13/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_13/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_13/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_13/moving_mean"
  input: "bnorm_13/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_13/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_13/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_13/moving_mean"
  input: "^bnorm_13/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_13/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_13/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_13/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_13/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_13/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_13/sub_2"
  op: "Sub"
  input: "bnorm_13/ReadVariableOp_4"
  input: "bnorm_13/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_13/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_13/mul_2"
  op: "Mul"
  input: "bnorm_13/sub_2"
  input: "bnorm_13/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_13/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_13/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_13/moving_variance"
  input: "bnorm_13/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_13/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_13/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_13/moving_variance"
  input: "^bnorm_13/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_13/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_13/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_13/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_13/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_13/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_13/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_13/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_13/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_13/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_13/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_13/convolution"
  input: "bnorm_13/ReadVariableOp_6"
  input: "bnorm_13/ReadVariableOp_7"
  input: "bnorm_13/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_13/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_13/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_13/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_14/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv_14/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0416666679084301
      }
    }
  }
}
node {
  name: "conv_14/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084301
      }
    }
  }
}
node {
  name: "conv_14/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_14/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2924518
    }
  }
}
node {
  name: "conv_14/random_uniform/sub"
  op: "Sub"
  input: "conv_14/random_uniform/max"
  input: "conv_14/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_14/random_uniform/mul"
  op: "Mul"
  input: "conv_14/random_uniform/RandomUniform"
  input: "conv_14/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_14/random_uniform"
  op: "Add"
  input: "conv_14/random_uniform/mul"
  input: "conv_14/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_14/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_14/kernel"
    }
  }
}
node {
  name: "conv_14/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_14/kernel"
}
node {
  name: "conv_14/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_14/kernel"
  input: "conv_14/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_14/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_14/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_14/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_14/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_14/convolution"
  op: "Conv2D"
  input: "leaky_13/LeakyRelu"
  input: "conv_14/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_14/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_14/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_14/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_14/gamma"
    }
  }
}
node {
  name: "bnorm_14/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_14/gamma"
}
node {
  name: "bnorm_14/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_14/gamma"
  input: "bnorm_14/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_14/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_14/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_14/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_14/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_14/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_14/beta"
    }
  }
}
node {
  name: "bnorm_14/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_14/beta"
}
node {
  name: "bnorm_14/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_14/beta"
  input: "bnorm_14/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_14/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_14/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_14/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_14/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_14/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_14/moving_mean"
    }
  }
}
node {
  name: "bnorm_14/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_14/moving_mean"
}
node {
  name: "bnorm_14/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_14/moving_mean"
  input: "bnorm_14/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_14/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_14/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_14/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_14/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_14/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_14/moving_variance"
    }
  }
}
node {
  name: "bnorm_14/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_14/moving_variance"
}
node {
  name: "bnorm_14/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_14/moving_variance"
  input: "bnorm_14/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_14/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_14/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_14/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_14/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_14/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_14/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_14/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_14/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_14/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_14/convolution"
  input: "bnorm_14/ReadVariableOp"
  input: "bnorm_14/ReadVariableOp_1"
  input: "bnorm_14/Const_4"
  input: "bnorm_14/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_14/Shape"
  op: "Shape"
  input: "conv_14/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_14/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_14/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_14/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_14/strided_slice"
  op: "StridedSlice"
  input: "bnorm_14/Shape"
  input: "bnorm_14/strided_slice/stack"
  input: "bnorm_14/strided_slice/stack_1"
  input: "bnorm_14/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_14/Shape_1"
  op: "Shape"
  input: "conv_14/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_14/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_14/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_14/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_14/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_14/Shape_1"
  input: "bnorm_14/strided_slice_1/stack"
  input: "bnorm_14/strided_slice_1/stack_1"
  input: "bnorm_14/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_14/Shape_2"
  op: "Shape"
  input: "conv_14/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_14/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_14/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_14/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_14/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_14/Shape_2"
  input: "bnorm_14/strided_slice_2/stack"
  input: "bnorm_14/strided_slice_2/stack_1"
  input: "bnorm_14/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_14/Rank/packed"
  op: "Pack"
  input: "bnorm_14/strided_slice"
  input: "bnorm_14/strided_slice_1"
  input: "bnorm_14/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_14/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_14/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_14/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_14/range"
  op: "Range"
  input: "bnorm_14/range/start"
  input: "bnorm_14/Rank"
  input: "bnorm_14/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_14/Prod/input"
  op: "Pack"
  input: "bnorm_14/strided_slice"
  input: "bnorm_14/strided_slice_1"
  input: "bnorm_14/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_14/Prod"
  op: "Prod"
  input: "bnorm_14/Prod/input"
  input: "bnorm_14/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_14/Cast"
  op: "Cast"
  input: "bnorm_14/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_14/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_14/sub"
  op: "Sub"
  input: "bnorm_14/Cast"
  input: "bnorm_14/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_14/truediv"
  op: "RealDiv"
  input: "bnorm_14/Cast"
  input: "bnorm_14/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_14/mul"
  op: "Mul"
  input: "bnorm_14/FusedBatchNormV3:2"
  input: "bnorm_14/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_14/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_14/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_14/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_14/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_14/sub_1"
  op: "Sub"
  input: "bnorm_14/ReadVariableOp_2"
  input: "bnorm_14/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_14/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_14/mul_1"
  op: "Mul"
  input: "bnorm_14/sub_1"
  input: "bnorm_14/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_14/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_14/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_14/moving_mean"
  input: "bnorm_14/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_14/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_14/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_14/moving_mean"
  input: "^bnorm_14/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_14/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_14/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_14/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_14/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_14/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_14/sub_2"
  op: "Sub"
  input: "bnorm_14/ReadVariableOp_4"
  input: "bnorm_14/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_14/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_14/mul_2"
  op: "Mul"
  input: "bnorm_14/sub_2"
  input: "bnorm_14/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_14/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_14/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_14/moving_variance"
  input: "bnorm_14/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_14/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_14/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_14/moving_variance"
  input: "^bnorm_14/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_14/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_14/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_14/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_14/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_14/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_14/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_14/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_14/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_14/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_14/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_14/convolution"
  input: "bnorm_14/ReadVariableOp_6"
  input: "bnorm_14/ReadVariableOp_7"
  input: "bnorm_14/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_14/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_14/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_14/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "add_4/add"
  op: "AddV2"
  input: "leaky_12/LeakyRelu"
  input: "leaky_14/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_16/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv_16/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "conv_16/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "conv_16/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_16/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7253267
    }
  }
}
node {
  name: "conv_16/random_uniform/sub"
  op: "Sub"
  input: "conv_16/random_uniform/max"
  input: "conv_16/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_16/random_uniform/mul"
  op: "Mul"
  input: "conv_16/random_uniform/RandomUniform"
  input: "conv_16/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_16/random_uniform"
  op: "Add"
  input: "conv_16/random_uniform/mul"
  input: "conv_16/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_16/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_16/kernel"
    }
  }
}
node {
  name: "conv_16/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_16/kernel"
}
node {
  name: "conv_16/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_16/kernel"
  input: "conv_16/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_16/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_16/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_16/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_16/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_16/convolution"
  op: "Conv2D"
  input: "add_4/add"
  input: "conv_16/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_16/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_16/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_16/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_16/gamma"
    }
  }
}
node {
  name: "bnorm_16/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_16/gamma"
}
node {
  name: "bnorm_16/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_16/gamma"
  input: "bnorm_16/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_16/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_16/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_16/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_16/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_16/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_16/beta"
    }
  }
}
node {
  name: "bnorm_16/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_16/beta"
}
node {
  name: "bnorm_16/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_16/beta"
  input: "bnorm_16/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_16/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_16/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_16/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_16/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_16/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_16/moving_mean"
    }
  }
}
node {
  name: "bnorm_16/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_16/moving_mean"
}
node {
  name: "bnorm_16/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_16/moving_mean"
  input: "bnorm_16/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_16/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_16/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_16/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_16/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_16/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_16/moving_variance"
    }
  }
}
node {
  name: "bnorm_16/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_16/moving_variance"
}
node {
  name: "bnorm_16/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_16/moving_variance"
  input: "bnorm_16/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_16/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_16/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_16/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_16/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_16/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_16/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_16/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_16/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_16/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_16/convolution"
  input: "bnorm_16/ReadVariableOp"
  input: "bnorm_16/ReadVariableOp_1"
  input: "bnorm_16/Const_4"
  input: "bnorm_16/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_16/Shape"
  op: "Shape"
  input: "conv_16/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_16/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_16/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_16/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_16/strided_slice"
  op: "StridedSlice"
  input: "bnorm_16/Shape"
  input: "bnorm_16/strided_slice/stack"
  input: "bnorm_16/strided_slice/stack_1"
  input: "bnorm_16/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_16/Shape_1"
  op: "Shape"
  input: "conv_16/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_16/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_16/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_16/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_16/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_16/Shape_1"
  input: "bnorm_16/strided_slice_1/stack"
  input: "bnorm_16/strided_slice_1/stack_1"
  input: "bnorm_16/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_16/Shape_2"
  op: "Shape"
  input: "conv_16/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_16/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_16/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_16/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_16/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_16/Shape_2"
  input: "bnorm_16/strided_slice_2/stack"
  input: "bnorm_16/strided_slice_2/stack_1"
  input: "bnorm_16/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_16/Rank/packed"
  op: "Pack"
  input: "bnorm_16/strided_slice"
  input: "bnorm_16/strided_slice_1"
  input: "bnorm_16/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_16/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_16/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_16/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_16/range"
  op: "Range"
  input: "bnorm_16/range/start"
  input: "bnorm_16/Rank"
  input: "bnorm_16/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_16/Prod/input"
  op: "Pack"
  input: "bnorm_16/strided_slice"
  input: "bnorm_16/strided_slice_1"
  input: "bnorm_16/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_16/Prod"
  op: "Prod"
  input: "bnorm_16/Prod/input"
  input: "bnorm_16/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_16/Cast"
  op: "Cast"
  input: "bnorm_16/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_16/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_16/sub"
  op: "Sub"
  input: "bnorm_16/Cast"
  input: "bnorm_16/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_16/truediv"
  op: "RealDiv"
  input: "bnorm_16/Cast"
  input: "bnorm_16/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_16/mul"
  op: "Mul"
  input: "bnorm_16/FusedBatchNormV3:2"
  input: "bnorm_16/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_16/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_16/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_16/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_16/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_16/sub_1"
  op: "Sub"
  input: "bnorm_16/ReadVariableOp_2"
  input: "bnorm_16/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_16/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_16/mul_1"
  op: "Mul"
  input: "bnorm_16/sub_1"
  input: "bnorm_16/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_16/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_16/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_16/moving_mean"
  input: "bnorm_16/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_16/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_16/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_16/moving_mean"
  input: "^bnorm_16/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_16/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_16/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_16/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_16/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_16/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_16/sub_2"
  op: "Sub"
  input: "bnorm_16/ReadVariableOp_4"
  input: "bnorm_16/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_16/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_16/mul_2"
  op: "Mul"
  input: "bnorm_16/sub_2"
  input: "bnorm_16/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_16/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_16/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_16/moving_variance"
  input: "bnorm_16/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_16/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_16/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_16/moving_variance"
  input: "^bnorm_16/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_16/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_16/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_16/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_16/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_16/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_16/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_16/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_16/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_16/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_16/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_16/convolution"
  input: "bnorm_16/ReadVariableOp_6"
  input: "bnorm_16/ReadVariableOp_7"
  input: "bnorm_16/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_16/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_16/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_16/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_17/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv_17/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0416666679084301
      }
    }
  }
}
node {
  name: "conv_17/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084301
      }
    }
  }
}
node {
  name: "conv_17/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_17/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9669599
    }
  }
}
node {
  name: "conv_17/random_uniform/sub"
  op: "Sub"
  input: "conv_17/random_uniform/max"
  input: "conv_17/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_17/random_uniform/mul"
  op: "Mul"
  input: "conv_17/random_uniform/RandomUniform"
  input: "conv_17/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_17/random_uniform"
  op: "Add"
  input: "conv_17/random_uniform/mul"
  input: "conv_17/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_17/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_17/kernel"
    }
  }
}
node {
  name: "conv_17/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_17/kernel"
}
node {
  name: "conv_17/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_17/kernel"
  input: "conv_17/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_17/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_17/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_17/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_17/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_17/convolution"
  op: "Conv2D"
  input: "leaky_16/LeakyRelu"
  input: "conv_17/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_17/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_17/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_17/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_17/gamma"
    }
  }
}
node {
  name: "bnorm_17/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_17/gamma"
}
node {
  name: "bnorm_17/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_17/gamma"
  input: "bnorm_17/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_17/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_17/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_17/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_17/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_17/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_17/beta"
    }
  }
}
node {
  name: "bnorm_17/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_17/beta"
}
node {
  name: "bnorm_17/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_17/beta"
  input: "bnorm_17/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_17/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_17/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_17/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_17/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_17/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_17/moving_mean"
    }
  }
}
node {
  name: "bnorm_17/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_17/moving_mean"
}
node {
  name: "bnorm_17/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_17/moving_mean"
  input: "bnorm_17/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_17/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_17/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_17/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_17/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_17/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_17/moving_variance"
    }
  }
}
node {
  name: "bnorm_17/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_17/moving_variance"
}
node {
  name: "bnorm_17/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_17/moving_variance"
  input: "bnorm_17/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_17/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_17/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_17/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_17/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_17/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_17/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_17/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_17/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_17/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_17/convolution"
  input: "bnorm_17/ReadVariableOp"
  input: "bnorm_17/ReadVariableOp_1"
  input: "bnorm_17/Const_4"
  input: "bnorm_17/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_17/Shape"
  op: "Shape"
  input: "conv_17/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_17/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_17/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_17/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_17/strided_slice"
  op: "StridedSlice"
  input: "bnorm_17/Shape"
  input: "bnorm_17/strided_slice/stack"
  input: "bnorm_17/strided_slice/stack_1"
  input: "bnorm_17/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_17/Shape_1"
  op: "Shape"
  input: "conv_17/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_17/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_17/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_17/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_17/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_17/Shape_1"
  input: "bnorm_17/strided_slice_1/stack"
  input: "bnorm_17/strided_slice_1/stack_1"
  input: "bnorm_17/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_17/Shape_2"
  op: "Shape"
  input: "conv_17/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_17/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_17/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_17/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_17/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_17/Shape_2"
  input: "bnorm_17/strided_slice_2/stack"
  input: "bnorm_17/strided_slice_2/stack_1"
  input: "bnorm_17/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_17/Rank/packed"
  op: "Pack"
  input: "bnorm_17/strided_slice"
  input: "bnorm_17/strided_slice_1"
  input: "bnorm_17/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_17/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_17/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_17/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_17/range"
  op: "Range"
  input: "bnorm_17/range/start"
  input: "bnorm_17/Rank"
  input: "bnorm_17/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_17/Prod/input"
  op: "Pack"
  input: "bnorm_17/strided_slice"
  input: "bnorm_17/strided_slice_1"
  input: "bnorm_17/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_17/Prod"
  op: "Prod"
  input: "bnorm_17/Prod/input"
  input: "bnorm_17/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_17/Cast"
  op: "Cast"
  input: "bnorm_17/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_17/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_17/sub"
  op: "Sub"
  input: "bnorm_17/Cast"
  input: "bnorm_17/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_17/truediv"
  op: "RealDiv"
  input: "bnorm_17/Cast"
  input: "bnorm_17/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_17/mul"
  op: "Mul"
  input: "bnorm_17/FusedBatchNormV3:2"
  input: "bnorm_17/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_17/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_17/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_17/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_17/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_17/sub_1"
  op: "Sub"
  input: "bnorm_17/ReadVariableOp_2"
  input: "bnorm_17/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_17/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_17/mul_1"
  op: "Mul"
  input: "bnorm_17/sub_1"
  input: "bnorm_17/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_17/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_17/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_17/moving_mean"
  input: "bnorm_17/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_17/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_17/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_17/moving_mean"
  input: "^bnorm_17/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_17/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_17/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_17/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_17/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_17/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_17/sub_2"
  op: "Sub"
  input: "bnorm_17/ReadVariableOp_4"
  input: "bnorm_17/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_17/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_17/mul_2"
  op: "Mul"
  input: "bnorm_17/sub_2"
  input: "bnorm_17/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_17/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_17/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_17/moving_variance"
  input: "bnorm_17/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_17/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_17/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_17/moving_variance"
  input: "^bnorm_17/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_17/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_17/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_17/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_17/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_17/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_17/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_17/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_17/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_17/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_17/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_17/convolution"
  input: "bnorm_17/ReadVariableOp_6"
  input: "bnorm_17/ReadVariableOp_7"
  input: "bnorm_17/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_17/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_17/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_17/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "add_5/add"
  op: "AddV2"
  input: "add_4/add"
  input: "leaky_17/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_19/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv_19/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "conv_19/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "conv_19/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_19/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4585400
    }
  }
}
node {
  name: "conv_19/random_uniform/sub"
  op: "Sub"
  input: "conv_19/random_uniform/max"
  input: "conv_19/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_19/random_uniform/mul"
  op: "Mul"
  input: "conv_19/random_uniform/RandomUniform"
  input: "conv_19/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_19/random_uniform"
  op: "Add"
  input: "conv_19/random_uniform/mul"
  input: "conv_19/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_19/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_19/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_19/kernel"
    }
  }
}
node {
  name: "conv_19/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_19/kernel"
}
node {
  name: "conv_19/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_19/kernel"
  input: "conv_19/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_19/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_19/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_19/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_19/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_19/convolution"
  op: "Conv2D"
  input: "add_5/add"
  input: "conv_19/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_19/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_19/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_19/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_19/gamma"
    }
  }
}
node {
  name: "bnorm_19/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_19/gamma"
}
node {
  name: "bnorm_19/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_19/gamma"
  input: "bnorm_19/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_19/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_19/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_19/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_19/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_19/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_19/beta"
    }
  }
}
node {
  name: "bnorm_19/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_19/beta"
}
node {
  name: "bnorm_19/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_19/beta"
  input: "bnorm_19/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_19/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_19/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_19/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_19/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_19/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_19/moving_mean"
    }
  }
}
node {
  name: "bnorm_19/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_19/moving_mean"
}
node {
  name: "bnorm_19/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_19/moving_mean"
  input: "bnorm_19/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_19/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_19/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_19/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_19/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_19/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_19/moving_variance"
    }
  }
}
node {
  name: "bnorm_19/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_19/moving_variance"
}
node {
  name: "bnorm_19/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_19/moving_variance"
  input: "bnorm_19/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_19/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_19/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_19/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_19/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_19/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_19/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_19/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_19/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_19/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_19/convolution"
  input: "bnorm_19/ReadVariableOp"
  input: "bnorm_19/ReadVariableOp_1"
  input: "bnorm_19/Const_4"
  input: "bnorm_19/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_19/Shape"
  op: "Shape"
  input: "conv_19/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_19/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_19/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_19/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_19/strided_slice"
  op: "StridedSlice"
  input: "bnorm_19/Shape"
  input: "bnorm_19/strided_slice/stack"
  input: "bnorm_19/strided_slice/stack_1"
  input: "bnorm_19/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_19/Shape_1"
  op: "Shape"
  input: "conv_19/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_19/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_19/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_19/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_19/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_19/Shape_1"
  input: "bnorm_19/strided_slice_1/stack"
  input: "bnorm_19/strided_slice_1/stack_1"
  input: "bnorm_19/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_19/Shape_2"
  op: "Shape"
  input: "conv_19/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_19/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_19/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_19/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_19/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_19/Shape_2"
  input: "bnorm_19/strided_slice_2/stack"
  input: "bnorm_19/strided_slice_2/stack_1"
  input: "bnorm_19/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_19/Rank/packed"
  op: "Pack"
  input: "bnorm_19/strided_slice"
  input: "bnorm_19/strided_slice_1"
  input: "bnorm_19/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_19/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_19/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_19/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_19/range"
  op: "Range"
  input: "bnorm_19/range/start"
  input: "bnorm_19/Rank"
  input: "bnorm_19/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_19/Prod/input"
  op: "Pack"
  input: "bnorm_19/strided_slice"
  input: "bnorm_19/strided_slice_1"
  input: "bnorm_19/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_19/Prod"
  op: "Prod"
  input: "bnorm_19/Prod/input"
  input: "bnorm_19/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_19/Cast"
  op: "Cast"
  input: "bnorm_19/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_19/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_19/sub"
  op: "Sub"
  input: "bnorm_19/Cast"
  input: "bnorm_19/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_19/truediv"
  op: "RealDiv"
  input: "bnorm_19/Cast"
  input: "bnorm_19/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_19/mul"
  op: "Mul"
  input: "bnorm_19/FusedBatchNormV3:2"
  input: "bnorm_19/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_19/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_19/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_19/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_19/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_19/sub_1"
  op: "Sub"
  input: "bnorm_19/ReadVariableOp_2"
  input: "bnorm_19/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_19/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_19/mul_1"
  op: "Mul"
  input: "bnorm_19/sub_1"
  input: "bnorm_19/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_19/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_19/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_19/moving_mean"
  input: "bnorm_19/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_19/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_19/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_19/moving_mean"
  input: "^bnorm_19/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_19/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_19/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_19/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_19/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_19/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_19/sub_2"
  op: "Sub"
  input: "bnorm_19/ReadVariableOp_4"
  input: "bnorm_19/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_19/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_19/mul_2"
  op: "Mul"
  input: "bnorm_19/sub_2"
  input: "bnorm_19/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_19/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_19/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_19/moving_variance"
  input: "bnorm_19/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_19/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_19/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_19/moving_variance"
  input: "^bnorm_19/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_19/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_19/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_19/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_19/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_19/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_19/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_19/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_19/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_19/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_19/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_19/convolution"
  input: "bnorm_19/ReadVariableOp_6"
  input: "bnorm_19/ReadVariableOp_7"
  input: "bnorm_19/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_19/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_19/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_19/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_20/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv_20/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0416666679084301
      }
    }
  }
}
node {
  name: "conv_20/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084301
      }
    }
  }
}
node {
  name: "conv_20/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_20/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 610977
    }
  }
}
node {
  name: "conv_20/random_uniform/sub"
  op: "Sub"
  input: "conv_20/random_uniform/max"
  input: "conv_20/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_20/random_uniform/mul"
  op: "Mul"
  input: "conv_20/random_uniform/RandomUniform"
  input: "conv_20/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_20/random_uniform"
  op: "Add"
  input: "conv_20/random_uniform/mul"
  input: "conv_20/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_20/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_20/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_20/kernel"
    }
  }
}
node {
  name: "conv_20/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_20/kernel"
}
node {
  name: "conv_20/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_20/kernel"
  input: "conv_20/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_20/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_20/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_20/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_20/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_20/convolution"
  op: "Conv2D"
  input: "leaky_19/LeakyRelu"
  input: "conv_20/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_20/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_20/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_20/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_20/gamma"
    }
  }
}
node {
  name: "bnorm_20/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_20/gamma"
}
node {
  name: "bnorm_20/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_20/gamma"
  input: "bnorm_20/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_20/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_20/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_20/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_20/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_20/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_20/beta"
    }
  }
}
node {
  name: "bnorm_20/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_20/beta"
}
node {
  name: "bnorm_20/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_20/beta"
  input: "bnorm_20/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_20/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_20/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_20/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_20/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_20/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_20/moving_mean"
    }
  }
}
node {
  name: "bnorm_20/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_20/moving_mean"
}
node {
  name: "bnorm_20/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_20/moving_mean"
  input: "bnorm_20/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_20/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_20/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_20/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_20/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_20/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_20/moving_variance"
    }
  }
}
node {
  name: "bnorm_20/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_20/moving_variance"
}
node {
  name: "bnorm_20/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_20/moving_variance"
  input: "bnorm_20/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_20/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_20/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_20/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_20/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_20/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_20/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_20/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_20/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_20/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_20/convolution"
  input: "bnorm_20/ReadVariableOp"
  input: "bnorm_20/ReadVariableOp_1"
  input: "bnorm_20/Const_4"
  input: "bnorm_20/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_20/Shape"
  op: "Shape"
  input: "conv_20/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_20/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_20/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_20/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_20/strided_slice"
  op: "StridedSlice"
  input: "bnorm_20/Shape"
  input: "bnorm_20/strided_slice/stack"
  input: "bnorm_20/strided_slice/stack_1"
  input: "bnorm_20/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_20/Shape_1"
  op: "Shape"
  input: "conv_20/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_20/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_20/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_20/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_20/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_20/Shape_1"
  input: "bnorm_20/strided_slice_1/stack"
  input: "bnorm_20/strided_slice_1/stack_1"
  input: "bnorm_20/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_20/Shape_2"
  op: "Shape"
  input: "conv_20/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_20/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_20/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_20/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_20/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_20/Shape_2"
  input: "bnorm_20/strided_slice_2/stack"
  input: "bnorm_20/strided_slice_2/stack_1"
  input: "bnorm_20/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_20/Rank/packed"
  op: "Pack"
  input: "bnorm_20/strided_slice"
  input: "bnorm_20/strided_slice_1"
  input: "bnorm_20/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_20/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_20/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_20/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_20/range"
  op: "Range"
  input: "bnorm_20/range/start"
  input: "bnorm_20/Rank"
  input: "bnorm_20/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_20/Prod/input"
  op: "Pack"
  input: "bnorm_20/strided_slice"
  input: "bnorm_20/strided_slice_1"
  input: "bnorm_20/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_20/Prod"
  op: "Prod"
  input: "bnorm_20/Prod/input"
  input: "bnorm_20/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_20/Cast"
  op: "Cast"
  input: "bnorm_20/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_20/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_20/sub"
  op: "Sub"
  input: "bnorm_20/Cast"
  input: "bnorm_20/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_20/truediv"
  op: "RealDiv"
  input: "bnorm_20/Cast"
  input: "bnorm_20/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_20/mul"
  op: "Mul"
  input: "bnorm_20/FusedBatchNormV3:2"
  input: "bnorm_20/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_20/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_20/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_20/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_20/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_20/sub_1"
  op: "Sub"
  input: "bnorm_20/ReadVariableOp_2"
  input: "bnorm_20/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_20/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_20/mul_1"
  op: "Mul"
  input: "bnorm_20/sub_1"
  input: "bnorm_20/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_20/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_20/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_20/moving_mean"
  input: "bnorm_20/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_20/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_20/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_20/moving_mean"
  input: "^bnorm_20/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_20/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_20/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_20/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_20/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_20/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_20/sub_2"
  op: "Sub"
  input: "bnorm_20/ReadVariableOp_4"
  input: "bnorm_20/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_20/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_20/mul_2"
  op: "Mul"
  input: "bnorm_20/sub_2"
  input: "bnorm_20/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_20/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_20/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_20/moving_variance"
  input: "bnorm_20/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_20/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_20/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_20/moving_variance"
  input: "^bnorm_20/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_20/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_20/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_20/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_20/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_20/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_20/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_20/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_20/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_20/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_20/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_20/convolution"
  input: "bnorm_20/ReadVariableOp_6"
  input: "bnorm_20/ReadVariableOp_7"
  input: "bnorm_20/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_20/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_20/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_20/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "add_6/add"
  op: "AddV2"
  input: "add_5/add"
  input: "leaky_20/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_22/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv_22/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "conv_22/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "conv_22/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_22/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3538593
    }
  }
}
node {
  name: "conv_22/random_uniform/sub"
  op: "Sub"
  input: "conv_22/random_uniform/max"
  input: "conv_22/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_22/random_uniform/mul"
  op: "Mul"
  input: "conv_22/random_uniform/RandomUniform"
  input: "conv_22/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_22/random_uniform"
  op: "Add"
  input: "conv_22/random_uniform/mul"
  input: "conv_22/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_22/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_22/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_22/kernel"
    }
  }
}
node {
  name: "conv_22/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_22/kernel"
}
node {
  name: "conv_22/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_22/kernel"
  input: "conv_22/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_22/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_22/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_22/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_22/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_22/convolution"
  op: "Conv2D"
  input: "add_6/add"
  input: "conv_22/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_22/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_22/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_22/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_22/gamma"
    }
  }
}
node {
  name: "bnorm_22/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_22/gamma"
}
node {
  name: "bnorm_22/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_22/gamma"
  input: "bnorm_22/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_22/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_22/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_22/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_22/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_22/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_22/beta"
    }
  }
}
node {
  name: "bnorm_22/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_22/beta"
}
node {
  name: "bnorm_22/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_22/beta"
  input: "bnorm_22/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_22/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_22/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_22/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_22/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_22/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_22/moving_mean"
    }
  }
}
node {
  name: "bnorm_22/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_22/moving_mean"
}
node {
  name: "bnorm_22/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_22/moving_mean"
  input: "bnorm_22/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_22/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_22/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_22/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_22/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_22/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_22/moving_variance"
    }
  }
}
node {
  name: "bnorm_22/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_22/moving_variance"
}
node {
  name: "bnorm_22/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_22/moving_variance"
  input: "bnorm_22/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_22/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_22/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_22/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_22/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_22/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_22/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_22/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_22/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_22/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_22/convolution"
  input: "bnorm_22/ReadVariableOp"
  input: "bnorm_22/ReadVariableOp_1"
  input: "bnorm_22/Const_4"
  input: "bnorm_22/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_22/Shape"
  op: "Shape"
  input: "conv_22/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_22/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_22/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_22/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_22/strided_slice"
  op: "StridedSlice"
  input: "bnorm_22/Shape"
  input: "bnorm_22/strided_slice/stack"
  input: "bnorm_22/strided_slice/stack_1"
  input: "bnorm_22/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_22/Shape_1"
  op: "Shape"
  input: "conv_22/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_22/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_22/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_22/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_22/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_22/Shape_1"
  input: "bnorm_22/strided_slice_1/stack"
  input: "bnorm_22/strided_slice_1/stack_1"
  input: "bnorm_22/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_22/Shape_2"
  op: "Shape"
  input: "conv_22/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_22/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_22/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_22/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_22/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_22/Shape_2"
  input: "bnorm_22/strided_slice_2/stack"
  input: "bnorm_22/strided_slice_2/stack_1"
  input: "bnorm_22/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_22/Rank/packed"
  op: "Pack"
  input: "bnorm_22/strided_slice"
  input: "bnorm_22/strided_slice_1"
  input: "bnorm_22/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_22/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_22/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_22/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_22/range"
  op: "Range"
  input: "bnorm_22/range/start"
  input: "bnorm_22/Rank"
  input: "bnorm_22/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_22/Prod/input"
  op: "Pack"
  input: "bnorm_22/strided_slice"
  input: "bnorm_22/strided_slice_1"
  input: "bnorm_22/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_22/Prod"
  op: "Prod"
  input: "bnorm_22/Prod/input"
  input: "bnorm_22/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_22/Cast"
  op: "Cast"
  input: "bnorm_22/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_22/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_22/sub"
  op: "Sub"
  input: "bnorm_22/Cast"
  input: "bnorm_22/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_22/truediv"
  op: "RealDiv"
  input: "bnorm_22/Cast"
  input: "bnorm_22/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_22/mul"
  op: "Mul"
  input: "bnorm_22/FusedBatchNormV3:2"
  input: "bnorm_22/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_22/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_22/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_22/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_22/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_22/sub_1"
  op: "Sub"
  input: "bnorm_22/ReadVariableOp_2"
  input: "bnorm_22/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_22/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_22/mul_1"
  op: "Mul"
  input: "bnorm_22/sub_1"
  input: "bnorm_22/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_22/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_22/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_22/moving_mean"
  input: "bnorm_22/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_22/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_22/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_22/moving_mean"
  input: "^bnorm_22/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_22/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_22/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_22/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_22/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_22/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_22/sub_2"
  op: "Sub"
  input: "bnorm_22/ReadVariableOp_4"
  input: "bnorm_22/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_22/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_22/mul_2"
  op: "Mul"
  input: "bnorm_22/sub_2"
  input: "bnorm_22/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_22/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_22/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_22/moving_variance"
  input: "bnorm_22/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_22/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_22/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_22/moving_variance"
  input: "^bnorm_22/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_22/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_22/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_22/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_22/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_22/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_22/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_22/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_22/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_22/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_22/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_22/convolution"
  input: "bnorm_22/ReadVariableOp_6"
  input: "bnorm_22/ReadVariableOp_7"
  input: "bnorm_22/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_22/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_22/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_22/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_23/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv_23/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0416666679084301
      }
    }
  }
}
node {
  name: "conv_23/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084301
      }
    }
  }
}
node {
  name: "conv_23/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_23/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3638859
    }
  }
}
node {
  name: "conv_23/random_uniform/sub"
  op: "Sub"
  input: "conv_23/random_uniform/max"
  input: "conv_23/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_23/random_uniform/mul"
  op: "Mul"
  input: "conv_23/random_uniform/RandomUniform"
  input: "conv_23/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_23/random_uniform"
  op: "Add"
  input: "conv_23/random_uniform/mul"
  input: "conv_23/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_23/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_23/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_23/kernel"
    }
  }
}
node {
  name: "conv_23/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_23/kernel"
}
node {
  name: "conv_23/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_23/kernel"
  input: "conv_23/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_23/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_23/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_23/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_23/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_23/convolution"
  op: "Conv2D"
  input: "leaky_22/LeakyRelu"
  input: "conv_23/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_23/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_23/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_23/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_23/gamma"
    }
  }
}
node {
  name: "bnorm_23/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_23/gamma"
}
node {
  name: "bnorm_23/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_23/gamma"
  input: "bnorm_23/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_23/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_23/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_23/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_23/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_23/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_23/beta"
    }
  }
}
node {
  name: "bnorm_23/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_23/beta"
}
node {
  name: "bnorm_23/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_23/beta"
  input: "bnorm_23/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_23/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_23/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_23/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_23/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_23/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_23/moving_mean"
    }
  }
}
node {
  name: "bnorm_23/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_23/moving_mean"
}
node {
  name: "bnorm_23/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_23/moving_mean"
  input: "bnorm_23/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_23/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_23/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_23/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_23/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_23/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_23/moving_variance"
    }
  }
}
node {
  name: "bnorm_23/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_23/moving_variance"
}
node {
  name: "bnorm_23/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_23/moving_variance"
  input: "bnorm_23/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_23/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_23/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_23/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_23/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_23/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_23/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_23/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_23/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_23/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_23/convolution"
  input: "bnorm_23/ReadVariableOp"
  input: "bnorm_23/ReadVariableOp_1"
  input: "bnorm_23/Const_4"
  input: "bnorm_23/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_23/Shape"
  op: "Shape"
  input: "conv_23/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_23/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_23/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_23/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_23/strided_slice"
  op: "StridedSlice"
  input: "bnorm_23/Shape"
  input: "bnorm_23/strided_slice/stack"
  input: "bnorm_23/strided_slice/stack_1"
  input: "bnorm_23/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_23/Shape_1"
  op: "Shape"
  input: "conv_23/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_23/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_23/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_23/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_23/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_23/Shape_1"
  input: "bnorm_23/strided_slice_1/stack"
  input: "bnorm_23/strided_slice_1/stack_1"
  input: "bnorm_23/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_23/Shape_2"
  op: "Shape"
  input: "conv_23/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_23/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_23/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_23/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_23/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_23/Shape_2"
  input: "bnorm_23/strided_slice_2/stack"
  input: "bnorm_23/strided_slice_2/stack_1"
  input: "bnorm_23/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_23/Rank/packed"
  op: "Pack"
  input: "bnorm_23/strided_slice"
  input: "bnorm_23/strided_slice_1"
  input: "bnorm_23/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_23/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_23/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_23/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_23/range"
  op: "Range"
  input: "bnorm_23/range/start"
  input: "bnorm_23/Rank"
  input: "bnorm_23/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_23/Prod/input"
  op: "Pack"
  input: "bnorm_23/strided_slice"
  input: "bnorm_23/strided_slice_1"
  input: "bnorm_23/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_23/Prod"
  op: "Prod"
  input: "bnorm_23/Prod/input"
  input: "bnorm_23/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_23/Cast"
  op: "Cast"
  input: "bnorm_23/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_23/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_23/sub"
  op: "Sub"
  input: "bnorm_23/Cast"
  input: "bnorm_23/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_23/truediv"
  op: "RealDiv"
  input: "bnorm_23/Cast"
  input: "bnorm_23/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_23/mul"
  op: "Mul"
  input: "bnorm_23/FusedBatchNormV3:2"
  input: "bnorm_23/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_23/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_23/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_23/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_23/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_23/sub_1"
  op: "Sub"
  input: "bnorm_23/ReadVariableOp_2"
  input: "bnorm_23/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_23/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_23/mul_1"
  op: "Mul"
  input: "bnorm_23/sub_1"
  input: "bnorm_23/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_23/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_23/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_23/moving_mean"
  input: "bnorm_23/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_23/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_23/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_23/moving_mean"
  input: "^bnorm_23/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_23/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_23/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_23/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_23/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_23/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_23/sub_2"
  op: "Sub"
  input: "bnorm_23/ReadVariableOp_4"
  input: "bnorm_23/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_23/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_23/mul_2"
  op: "Mul"
  input: "bnorm_23/sub_2"
  input: "bnorm_23/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_23/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_23/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_23/moving_variance"
  input: "bnorm_23/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_23/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_23/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_23/moving_variance"
  input: "^bnorm_23/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_23/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_23/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_23/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_23/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_23/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_23/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_23/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_23/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_23/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_23/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_23/convolution"
  input: "bnorm_23/ReadVariableOp_6"
  input: "bnorm_23/ReadVariableOp_7"
  input: "bnorm_23/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_23/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_23/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_23/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "add_7/add"
  op: "AddV2"
  input: "add_6/add"
  input: "leaky_23/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_25/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv_25/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "conv_25/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "conv_25/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_25/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3842189
    }
  }
}
node {
  name: "conv_25/random_uniform/sub"
  op: "Sub"
  input: "conv_25/random_uniform/max"
  input: "conv_25/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_25/random_uniform/mul"
  op: "Mul"
  input: "conv_25/random_uniform/RandomUniform"
  input: "conv_25/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_25/random_uniform"
  op: "Add"
  input: "conv_25/random_uniform/mul"
  input: "conv_25/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_25/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_25/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_25/kernel"
    }
  }
}
node {
  name: "conv_25/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_25/kernel"
}
node {
  name: "conv_25/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_25/kernel"
  input: "conv_25/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_25/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_25/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_25/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_25/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_25/convolution"
  op: "Conv2D"
  input: "add_7/add"
  input: "conv_25/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_25/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_25/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_25/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_25/gamma"
    }
  }
}
node {
  name: "bnorm_25/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_25/gamma"
}
node {
  name: "bnorm_25/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_25/gamma"
  input: "bnorm_25/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_25/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_25/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_25/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_25/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_25/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_25/beta"
    }
  }
}
node {
  name: "bnorm_25/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_25/beta"
}
node {
  name: "bnorm_25/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_25/beta"
  input: "bnorm_25/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_25/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_25/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_25/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_25/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_25/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_25/moving_mean"
    }
  }
}
node {
  name: "bnorm_25/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_25/moving_mean"
}
node {
  name: "bnorm_25/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_25/moving_mean"
  input: "bnorm_25/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_25/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_25/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_25/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_25/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_25/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_25/moving_variance"
    }
  }
}
node {
  name: "bnorm_25/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_25/moving_variance"
}
node {
  name: "bnorm_25/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_25/moving_variance"
  input: "bnorm_25/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_25/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_25/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_25/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_25/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_25/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_25/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_25/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_25/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_25/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_25/convolution"
  input: "bnorm_25/ReadVariableOp"
  input: "bnorm_25/ReadVariableOp_1"
  input: "bnorm_25/Const_4"
  input: "bnorm_25/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_25/Shape"
  op: "Shape"
  input: "conv_25/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_25/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_25/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_25/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_25/strided_slice"
  op: "StridedSlice"
  input: "bnorm_25/Shape"
  input: "bnorm_25/strided_slice/stack"
  input: "bnorm_25/strided_slice/stack_1"
  input: "bnorm_25/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_25/Shape_1"
  op: "Shape"
  input: "conv_25/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_25/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_25/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_25/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_25/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_25/Shape_1"
  input: "bnorm_25/strided_slice_1/stack"
  input: "bnorm_25/strided_slice_1/stack_1"
  input: "bnorm_25/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_25/Shape_2"
  op: "Shape"
  input: "conv_25/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_25/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_25/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_25/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_25/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_25/Shape_2"
  input: "bnorm_25/strided_slice_2/stack"
  input: "bnorm_25/strided_slice_2/stack_1"
  input: "bnorm_25/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_25/Rank/packed"
  op: "Pack"
  input: "bnorm_25/strided_slice"
  input: "bnorm_25/strided_slice_1"
  input: "bnorm_25/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_25/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_25/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_25/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_25/range"
  op: "Range"
  input: "bnorm_25/range/start"
  input: "bnorm_25/Rank"
  input: "bnorm_25/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_25/Prod/input"
  op: "Pack"
  input: "bnorm_25/strided_slice"
  input: "bnorm_25/strided_slice_1"
  input: "bnorm_25/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_25/Prod"
  op: "Prod"
  input: "bnorm_25/Prod/input"
  input: "bnorm_25/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_25/Cast"
  op: "Cast"
  input: "bnorm_25/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_25/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_25/sub"
  op: "Sub"
  input: "bnorm_25/Cast"
  input: "bnorm_25/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_25/truediv"
  op: "RealDiv"
  input: "bnorm_25/Cast"
  input: "bnorm_25/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_25/mul"
  op: "Mul"
  input: "bnorm_25/FusedBatchNormV3:2"
  input: "bnorm_25/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_25/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_25/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_25/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_25/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_25/sub_1"
  op: "Sub"
  input: "bnorm_25/ReadVariableOp_2"
  input: "bnorm_25/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_25/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_25/mul_1"
  op: "Mul"
  input: "bnorm_25/sub_1"
  input: "bnorm_25/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_25/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_25/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_25/moving_mean"
  input: "bnorm_25/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_25/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_25/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_25/moving_mean"
  input: "^bnorm_25/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_25/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_25/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_25/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_25/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_25/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_25/sub_2"
  op: "Sub"
  input: "bnorm_25/ReadVariableOp_4"
  input: "bnorm_25/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_25/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_25/mul_2"
  op: "Mul"
  input: "bnorm_25/sub_2"
  input: "bnorm_25/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_25/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_25/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_25/moving_variance"
  input: "bnorm_25/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_25/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_25/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_25/moving_variance"
  input: "^bnorm_25/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_25/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_25/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_25/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_25/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_25/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_25/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_25/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_25/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_25/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_25/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_25/convolution"
  input: "bnorm_25/ReadVariableOp_6"
  input: "bnorm_25/ReadVariableOp_7"
  input: "bnorm_25/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_25/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_25/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_25/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_26/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv_26/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0416666679084301
      }
    }
  }
}
node {
  name: "conv_26/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084301
      }
    }
  }
}
node {
  name: "conv_26/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_26/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4759923
    }
  }
}
node {
  name: "conv_26/random_uniform/sub"
  op: "Sub"
  input: "conv_26/random_uniform/max"
  input: "conv_26/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_26/random_uniform/mul"
  op: "Mul"
  input: "conv_26/random_uniform/RandomUniform"
  input: "conv_26/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_26/random_uniform"
  op: "Add"
  input: "conv_26/random_uniform/mul"
  input: "conv_26/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_26/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_26/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_26/kernel"
    }
  }
}
node {
  name: "conv_26/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_26/kernel"
}
node {
  name: "conv_26/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_26/kernel"
  input: "conv_26/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_26/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_26/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_26/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_26/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_26/convolution"
  op: "Conv2D"
  input: "leaky_25/LeakyRelu"
  input: "conv_26/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_26/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_26/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_26/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_26/gamma"
    }
  }
}
node {
  name: "bnorm_26/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_26/gamma"
}
node {
  name: "bnorm_26/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_26/gamma"
  input: "bnorm_26/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_26/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_26/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_26/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_26/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_26/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_26/beta"
    }
  }
}
node {
  name: "bnorm_26/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_26/beta"
}
node {
  name: "bnorm_26/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_26/beta"
  input: "bnorm_26/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_26/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_26/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_26/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_26/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_26/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_26/moving_mean"
    }
  }
}
node {
  name: "bnorm_26/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_26/moving_mean"
}
node {
  name: "bnorm_26/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_26/moving_mean"
  input: "bnorm_26/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_26/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_26/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_26/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_26/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_26/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_26/moving_variance"
    }
  }
}
node {
  name: "bnorm_26/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_26/moving_variance"
}
node {
  name: "bnorm_26/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_26/moving_variance"
  input: "bnorm_26/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_26/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_26/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_26/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_26/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_26/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_26/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_26/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_26/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_26/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_26/convolution"
  input: "bnorm_26/ReadVariableOp"
  input: "bnorm_26/ReadVariableOp_1"
  input: "bnorm_26/Const_4"
  input: "bnorm_26/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_26/Shape"
  op: "Shape"
  input: "conv_26/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_26/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_26/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_26/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_26/strided_slice"
  op: "StridedSlice"
  input: "bnorm_26/Shape"
  input: "bnorm_26/strided_slice/stack"
  input: "bnorm_26/strided_slice/stack_1"
  input: "bnorm_26/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_26/Shape_1"
  op: "Shape"
  input: "conv_26/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_26/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_26/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_26/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_26/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_26/Shape_1"
  input: "bnorm_26/strided_slice_1/stack"
  input: "bnorm_26/strided_slice_1/stack_1"
  input: "bnorm_26/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_26/Shape_2"
  op: "Shape"
  input: "conv_26/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_26/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_26/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_26/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_26/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_26/Shape_2"
  input: "bnorm_26/strided_slice_2/stack"
  input: "bnorm_26/strided_slice_2/stack_1"
  input: "bnorm_26/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_26/Rank/packed"
  op: "Pack"
  input: "bnorm_26/strided_slice"
  input: "bnorm_26/strided_slice_1"
  input: "bnorm_26/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_26/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_26/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_26/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_26/range"
  op: "Range"
  input: "bnorm_26/range/start"
  input: "bnorm_26/Rank"
  input: "bnorm_26/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_26/Prod/input"
  op: "Pack"
  input: "bnorm_26/strided_slice"
  input: "bnorm_26/strided_slice_1"
  input: "bnorm_26/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_26/Prod"
  op: "Prod"
  input: "bnorm_26/Prod/input"
  input: "bnorm_26/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_26/Cast"
  op: "Cast"
  input: "bnorm_26/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_26/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_26/sub"
  op: "Sub"
  input: "bnorm_26/Cast"
  input: "bnorm_26/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_26/truediv"
  op: "RealDiv"
  input: "bnorm_26/Cast"
  input: "bnorm_26/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_26/mul"
  op: "Mul"
  input: "bnorm_26/FusedBatchNormV3:2"
  input: "bnorm_26/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_26/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_26/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_26/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_26/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_26/sub_1"
  op: "Sub"
  input: "bnorm_26/ReadVariableOp_2"
  input: "bnorm_26/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_26/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_26/mul_1"
  op: "Mul"
  input: "bnorm_26/sub_1"
  input: "bnorm_26/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_26/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_26/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_26/moving_mean"
  input: "bnorm_26/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_26/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_26/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_26/moving_mean"
  input: "^bnorm_26/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_26/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_26/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_26/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_26/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_26/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_26/sub_2"
  op: "Sub"
  input: "bnorm_26/ReadVariableOp_4"
  input: "bnorm_26/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_26/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_26/mul_2"
  op: "Mul"
  input: "bnorm_26/sub_2"
  input: "bnorm_26/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_26/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_26/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_26/moving_variance"
  input: "bnorm_26/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_26/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_26/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_26/moving_variance"
  input: "^bnorm_26/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_26/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_26/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_26/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_26/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_26/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_26/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_26/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_26/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_26/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_26/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_26/convolution"
  input: "bnorm_26/ReadVariableOp_6"
  input: "bnorm_26/ReadVariableOp_7"
  input: "bnorm_26/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_26/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_26/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_26/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "add_8/add"
  op: "AddV2"
  input: "add_7/add"
  input: "leaky_26/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_28/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv_28/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "conv_28/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "conv_28/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_28/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8610976
    }
  }
}
node {
  name: "conv_28/random_uniform/sub"
  op: "Sub"
  input: "conv_28/random_uniform/max"
  input: "conv_28/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_28/random_uniform/mul"
  op: "Mul"
  input: "conv_28/random_uniform/RandomUniform"
  input: "conv_28/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_28/random_uniform"
  op: "Add"
  input: "conv_28/random_uniform/mul"
  input: "conv_28/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_28/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_28/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_28/kernel"
    }
  }
}
node {
  name: "conv_28/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_28/kernel"
}
node {
  name: "conv_28/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_28/kernel"
  input: "conv_28/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_28/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_28/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_28/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_28/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_28/convolution"
  op: "Conv2D"
  input: "add_8/add"
  input: "conv_28/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_28/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_28/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_28/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_28/gamma"
    }
  }
}
node {
  name: "bnorm_28/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_28/gamma"
}
node {
  name: "bnorm_28/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_28/gamma"
  input: "bnorm_28/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_28/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_28/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_28/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_28/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_28/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_28/beta"
    }
  }
}
node {
  name: "bnorm_28/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_28/beta"
}
node {
  name: "bnorm_28/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_28/beta"
  input: "bnorm_28/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_28/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_28/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_28/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_28/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_28/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_28/moving_mean"
    }
  }
}
node {
  name: "bnorm_28/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_28/moving_mean"
}
node {
  name: "bnorm_28/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_28/moving_mean"
  input: "bnorm_28/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_28/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_28/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_28/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_28/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_28/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_28/moving_variance"
    }
  }
}
node {
  name: "bnorm_28/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_28/moving_variance"
}
node {
  name: "bnorm_28/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_28/moving_variance"
  input: "bnorm_28/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_28/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_28/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_28/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_28/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_28/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_28/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_28/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_28/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_28/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_28/convolution"
  input: "bnorm_28/ReadVariableOp"
  input: "bnorm_28/ReadVariableOp_1"
  input: "bnorm_28/Const_4"
  input: "bnorm_28/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_28/Shape"
  op: "Shape"
  input: "conv_28/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_28/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_28/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_28/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_28/strided_slice"
  op: "StridedSlice"
  input: "bnorm_28/Shape"
  input: "bnorm_28/strided_slice/stack"
  input: "bnorm_28/strided_slice/stack_1"
  input: "bnorm_28/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_28/Shape_1"
  op: "Shape"
  input: "conv_28/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_28/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_28/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_28/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_28/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_28/Shape_1"
  input: "bnorm_28/strided_slice_1/stack"
  input: "bnorm_28/strided_slice_1/stack_1"
  input: "bnorm_28/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_28/Shape_2"
  op: "Shape"
  input: "conv_28/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_28/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_28/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_28/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_28/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_28/Shape_2"
  input: "bnorm_28/strided_slice_2/stack"
  input: "bnorm_28/strided_slice_2/stack_1"
  input: "bnorm_28/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_28/Rank/packed"
  op: "Pack"
  input: "bnorm_28/strided_slice"
  input: "bnorm_28/strided_slice_1"
  input: "bnorm_28/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_28/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_28/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_28/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_28/range"
  op: "Range"
  input: "bnorm_28/range/start"
  input: "bnorm_28/Rank"
  input: "bnorm_28/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_28/Prod/input"
  op: "Pack"
  input: "bnorm_28/strided_slice"
  input: "bnorm_28/strided_slice_1"
  input: "bnorm_28/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_28/Prod"
  op: "Prod"
  input: "bnorm_28/Prod/input"
  input: "bnorm_28/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_28/Cast"
  op: "Cast"
  input: "bnorm_28/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_28/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_28/sub"
  op: "Sub"
  input: "bnorm_28/Cast"
  input: "bnorm_28/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_28/truediv"
  op: "RealDiv"
  input: "bnorm_28/Cast"
  input: "bnorm_28/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_28/mul"
  op: "Mul"
  input: "bnorm_28/FusedBatchNormV3:2"
  input: "bnorm_28/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_28/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_28/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_28/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_28/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_28/sub_1"
  op: "Sub"
  input: "bnorm_28/ReadVariableOp_2"
  input: "bnorm_28/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_28/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_28/mul_1"
  op: "Mul"
  input: "bnorm_28/sub_1"
  input: "bnorm_28/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_28/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_28/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_28/moving_mean"
  input: "bnorm_28/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_28/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_28/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_28/moving_mean"
  input: "^bnorm_28/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_28/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_28/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_28/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_28/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_28/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_28/sub_2"
  op: "Sub"
  input: "bnorm_28/ReadVariableOp_4"
  input: "bnorm_28/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_28/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_28/mul_2"
  op: "Mul"
  input: "bnorm_28/sub_2"
  input: "bnorm_28/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_28/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_28/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_28/moving_variance"
  input: "bnorm_28/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_28/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_28/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_28/moving_variance"
  input: "^bnorm_28/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_28/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_28/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_28/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_28/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_28/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_28/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_28/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_28/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_28/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_28/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_28/convolution"
  input: "bnorm_28/ReadVariableOp_6"
  input: "bnorm_28/ReadVariableOp_7"
  input: "bnorm_28/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_28/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_28/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_28/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_29/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv_29/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0416666679084301
      }
    }
  }
}
node {
  name: "conv_29/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084301
      }
    }
  }
}
node {
  name: "conv_29/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_29/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8697531
    }
  }
}
node {
  name: "conv_29/random_uniform/sub"
  op: "Sub"
  input: "conv_29/random_uniform/max"
  input: "conv_29/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_29/random_uniform/mul"
  op: "Mul"
  input: "conv_29/random_uniform/RandomUniform"
  input: "conv_29/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_29/random_uniform"
  op: "Add"
  input: "conv_29/random_uniform/mul"
  input: "conv_29/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_29/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_29/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_29/kernel"
    }
  }
}
node {
  name: "conv_29/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_29/kernel"
}
node {
  name: "conv_29/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_29/kernel"
  input: "conv_29/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_29/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_29/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_29/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_29/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_29/convolution"
  op: "Conv2D"
  input: "leaky_28/LeakyRelu"
  input: "conv_29/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_29/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_29/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_29/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_29/gamma"
    }
  }
}
node {
  name: "bnorm_29/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_29/gamma"
}
node {
  name: "bnorm_29/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_29/gamma"
  input: "bnorm_29/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_29/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_29/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_29/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_29/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_29/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_29/beta"
    }
  }
}
node {
  name: "bnorm_29/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_29/beta"
}
node {
  name: "bnorm_29/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_29/beta"
  input: "bnorm_29/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_29/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_29/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_29/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_29/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_29/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_29/moving_mean"
    }
  }
}
node {
  name: "bnorm_29/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_29/moving_mean"
}
node {
  name: "bnorm_29/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_29/moving_mean"
  input: "bnorm_29/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_29/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_29/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_29/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_29/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_29/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_29/moving_variance"
    }
  }
}
node {
  name: "bnorm_29/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_29/moving_variance"
}
node {
  name: "bnorm_29/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_29/moving_variance"
  input: "bnorm_29/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_29/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_29/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_29/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_29/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_29/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_29/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_29/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_29/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_29/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_29/convolution"
  input: "bnorm_29/ReadVariableOp"
  input: "bnorm_29/ReadVariableOp_1"
  input: "bnorm_29/Const_4"
  input: "bnorm_29/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_29/Shape"
  op: "Shape"
  input: "conv_29/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_29/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_29/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_29/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_29/strided_slice"
  op: "StridedSlice"
  input: "bnorm_29/Shape"
  input: "bnorm_29/strided_slice/stack"
  input: "bnorm_29/strided_slice/stack_1"
  input: "bnorm_29/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_29/Shape_1"
  op: "Shape"
  input: "conv_29/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_29/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_29/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_29/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_29/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_29/Shape_1"
  input: "bnorm_29/strided_slice_1/stack"
  input: "bnorm_29/strided_slice_1/stack_1"
  input: "bnorm_29/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_29/Shape_2"
  op: "Shape"
  input: "conv_29/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_29/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_29/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_29/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_29/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_29/Shape_2"
  input: "bnorm_29/strided_slice_2/stack"
  input: "bnorm_29/strided_slice_2/stack_1"
  input: "bnorm_29/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_29/Rank/packed"
  op: "Pack"
  input: "bnorm_29/strided_slice"
  input: "bnorm_29/strided_slice_1"
  input: "bnorm_29/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_29/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_29/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_29/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_29/range"
  op: "Range"
  input: "bnorm_29/range/start"
  input: "bnorm_29/Rank"
  input: "bnorm_29/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_29/Prod/input"
  op: "Pack"
  input: "bnorm_29/strided_slice"
  input: "bnorm_29/strided_slice_1"
  input: "bnorm_29/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_29/Prod"
  op: "Prod"
  input: "bnorm_29/Prod/input"
  input: "bnorm_29/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_29/Cast"
  op: "Cast"
  input: "bnorm_29/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_29/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_29/sub"
  op: "Sub"
  input: "bnorm_29/Cast"
  input: "bnorm_29/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_29/truediv"
  op: "RealDiv"
  input: "bnorm_29/Cast"
  input: "bnorm_29/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_29/mul"
  op: "Mul"
  input: "bnorm_29/FusedBatchNormV3:2"
  input: "bnorm_29/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_29/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_29/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_29/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_29/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_29/sub_1"
  op: "Sub"
  input: "bnorm_29/ReadVariableOp_2"
  input: "bnorm_29/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_29/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_29/mul_1"
  op: "Mul"
  input: "bnorm_29/sub_1"
  input: "bnorm_29/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_29/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_29/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_29/moving_mean"
  input: "bnorm_29/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_29/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_29/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_29/moving_mean"
  input: "^bnorm_29/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_29/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_29/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_29/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_29/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_29/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_29/sub_2"
  op: "Sub"
  input: "bnorm_29/ReadVariableOp_4"
  input: "bnorm_29/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_29/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_29/mul_2"
  op: "Mul"
  input: "bnorm_29/sub_2"
  input: "bnorm_29/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_29/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_29/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_29/moving_variance"
  input: "bnorm_29/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_29/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_29/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_29/moving_variance"
  input: "^bnorm_29/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_29/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_29/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_29/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_29/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_29/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_29/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_29/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_29/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_29/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_29/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_29/convolution"
  input: "bnorm_29/ReadVariableOp_6"
  input: "bnorm_29/ReadVariableOp_7"
  input: "bnorm_29/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_29/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_29/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_29/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "add_9/add"
  op: "AddV2"
  input: "add_8/add"
  input: "leaky_29/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_31/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv_31/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "conv_31/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "conv_31/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_31/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2729130
    }
  }
}
node {
  name: "conv_31/random_uniform/sub"
  op: "Sub"
  input: "conv_31/random_uniform/max"
  input: "conv_31/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_31/random_uniform/mul"
  op: "Mul"
  input: "conv_31/random_uniform/RandomUniform"
  input: "conv_31/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_31/random_uniform"
  op: "Add"
  input: "conv_31/random_uniform/mul"
  input: "conv_31/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_31/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_31/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_31/kernel"
    }
  }
}
node {
  name: "conv_31/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_31/kernel"
}
node {
  name: "conv_31/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_31/kernel"
  input: "conv_31/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_31/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_31/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_31/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_31/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_31/convolution"
  op: "Conv2D"
  input: "add_9/add"
  input: "conv_31/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_31/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_31/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_31/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_31/gamma"
    }
  }
}
node {
  name: "bnorm_31/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_31/gamma"
}
node {
  name: "bnorm_31/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_31/gamma"
  input: "bnorm_31/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_31/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_31/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_31/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_31/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_31/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_31/beta"
    }
  }
}
node {
  name: "bnorm_31/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_31/beta"
}
node {
  name: "bnorm_31/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_31/beta"
  input: "bnorm_31/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_31/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_31/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_31/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_31/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_31/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_31/moving_mean"
    }
  }
}
node {
  name: "bnorm_31/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_31/moving_mean"
}
node {
  name: "bnorm_31/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_31/moving_mean"
  input: "bnorm_31/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_31/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_31/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_31/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_31/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_31/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_31/moving_variance"
    }
  }
}
node {
  name: "bnorm_31/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_31/moving_variance"
}
node {
  name: "bnorm_31/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_31/moving_variance"
  input: "bnorm_31/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_31/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_31/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_31/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_31/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_31/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_31/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_31/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_31/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_31/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_31/convolution"
  input: "bnorm_31/ReadVariableOp"
  input: "bnorm_31/ReadVariableOp_1"
  input: "bnorm_31/Const_4"
  input: "bnorm_31/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_31/Shape"
  op: "Shape"
  input: "conv_31/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_31/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_31/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_31/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_31/strided_slice"
  op: "StridedSlice"
  input: "bnorm_31/Shape"
  input: "bnorm_31/strided_slice/stack"
  input: "bnorm_31/strided_slice/stack_1"
  input: "bnorm_31/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_31/Shape_1"
  op: "Shape"
  input: "conv_31/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_31/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_31/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_31/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_31/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_31/Shape_1"
  input: "bnorm_31/strided_slice_1/stack"
  input: "bnorm_31/strided_slice_1/stack_1"
  input: "bnorm_31/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_31/Shape_2"
  op: "Shape"
  input: "conv_31/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_31/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_31/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_31/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_31/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_31/Shape_2"
  input: "bnorm_31/strided_slice_2/stack"
  input: "bnorm_31/strided_slice_2/stack_1"
  input: "bnorm_31/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_31/Rank/packed"
  op: "Pack"
  input: "bnorm_31/strided_slice"
  input: "bnorm_31/strided_slice_1"
  input: "bnorm_31/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_31/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_31/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_31/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_31/range"
  op: "Range"
  input: "bnorm_31/range/start"
  input: "bnorm_31/Rank"
  input: "bnorm_31/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_31/Prod/input"
  op: "Pack"
  input: "bnorm_31/strided_slice"
  input: "bnorm_31/strided_slice_1"
  input: "bnorm_31/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_31/Prod"
  op: "Prod"
  input: "bnorm_31/Prod/input"
  input: "bnorm_31/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_31/Cast"
  op: "Cast"
  input: "bnorm_31/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_31/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_31/sub"
  op: "Sub"
  input: "bnorm_31/Cast"
  input: "bnorm_31/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_31/truediv"
  op: "RealDiv"
  input: "bnorm_31/Cast"
  input: "bnorm_31/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_31/mul"
  op: "Mul"
  input: "bnorm_31/FusedBatchNormV3:2"
  input: "bnorm_31/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_31/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_31/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_31/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_31/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_31/sub_1"
  op: "Sub"
  input: "bnorm_31/ReadVariableOp_2"
  input: "bnorm_31/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_31/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_31/mul_1"
  op: "Mul"
  input: "bnorm_31/sub_1"
  input: "bnorm_31/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_31/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_31/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_31/moving_mean"
  input: "bnorm_31/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_31/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_31/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_31/moving_mean"
  input: "^bnorm_31/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_31/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_31/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_31/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_31/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_31/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_31/sub_2"
  op: "Sub"
  input: "bnorm_31/ReadVariableOp_4"
  input: "bnorm_31/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_31/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_31/mul_2"
  op: "Mul"
  input: "bnorm_31/sub_2"
  input: "bnorm_31/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_31/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_31/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_31/moving_variance"
  input: "bnorm_31/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_31/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_31/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_31/moving_variance"
  input: "^bnorm_31/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_31/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_31/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_31/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_31/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_31/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_31/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_31/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_31/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_31/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_31/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_31/convolution"
  input: "bnorm_31/ReadVariableOp_6"
  input: "bnorm_31/ReadVariableOp_7"
  input: "bnorm_31/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_31/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_31/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_31/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_32/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv_32/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0416666679084301
      }
    }
  }
}
node {
  name: "conv_32/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084301
      }
    }
  }
}
node {
  name: "conv_32/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_32/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2487517
    }
  }
}
node {
  name: "conv_32/random_uniform/sub"
  op: "Sub"
  input: "conv_32/random_uniform/max"
  input: "conv_32/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_32/random_uniform/mul"
  op: "Mul"
  input: "conv_32/random_uniform/RandomUniform"
  input: "conv_32/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_32/random_uniform"
  op: "Add"
  input: "conv_32/random_uniform/mul"
  input: "conv_32/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_32/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_32/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_32/kernel"
    }
  }
}
node {
  name: "conv_32/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_32/kernel"
}
node {
  name: "conv_32/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_32/kernel"
  input: "conv_32/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_32/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_32/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_32/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_32/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_32/convolution"
  op: "Conv2D"
  input: "leaky_31/LeakyRelu"
  input: "conv_32/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_32/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_32/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_32/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_32/gamma"
    }
  }
}
node {
  name: "bnorm_32/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_32/gamma"
}
node {
  name: "bnorm_32/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_32/gamma"
  input: "bnorm_32/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_32/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_32/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_32/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_32/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_32/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_32/beta"
    }
  }
}
node {
  name: "bnorm_32/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_32/beta"
}
node {
  name: "bnorm_32/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_32/beta"
  input: "bnorm_32/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_32/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_32/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_32/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_32/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_32/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_32/moving_mean"
    }
  }
}
node {
  name: "bnorm_32/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_32/moving_mean"
}
node {
  name: "bnorm_32/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_32/moving_mean"
  input: "bnorm_32/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_32/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_32/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_32/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_32/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_32/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_32/moving_variance"
    }
  }
}
node {
  name: "bnorm_32/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_32/moving_variance"
}
node {
  name: "bnorm_32/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_32/moving_variance"
  input: "bnorm_32/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_32/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_32/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_32/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_32/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_32/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_32/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_32/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_32/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_32/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_32/convolution"
  input: "bnorm_32/ReadVariableOp"
  input: "bnorm_32/ReadVariableOp_1"
  input: "bnorm_32/Const_4"
  input: "bnorm_32/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_32/Shape"
  op: "Shape"
  input: "conv_32/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_32/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_32/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_32/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_32/strided_slice"
  op: "StridedSlice"
  input: "bnorm_32/Shape"
  input: "bnorm_32/strided_slice/stack"
  input: "bnorm_32/strided_slice/stack_1"
  input: "bnorm_32/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_32/Shape_1"
  op: "Shape"
  input: "conv_32/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_32/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_32/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_32/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_32/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_32/Shape_1"
  input: "bnorm_32/strided_slice_1/stack"
  input: "bnorm_32/strided_slice_1/stack_1"
  input: "bnorm_32/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_32/Shape_2"
  op: "Shape"
  input: "conv_32/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_32/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_32/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_32/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_32/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_32/Shape_2"
  input: "bnorm_32/strided_slice_2/stack"
  input: "bnorm_32/strided_slice_2/stack_1"
  input: "bnorm_32/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_32/Rank/packed"
  op: "Pack"
  input: "bnorm_32/strided_slice"
  input: "bnorm_32/strided_slice_1"
  input: "bnorm_32/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_32/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_32/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_32/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_32/range"
  op: "Range"
  input: "bnorm_32/range/start"
  input: "bnorm_32/Rank"
  input: "bnorm_32/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_32/Prod/input"
  op: "Pack"
  input: "bnorm_32/strided_slice"
  input: "bnorm_32/strided_slice_1"
  input: "bnorm_32/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_32/Prod"
  op: "Prod"
  input: "bnorm_32/Prod/input"
  input: "bnorm_32/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_32/Cast"
  op: "Cast"
  input: "bnorm_32/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_32/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_32/sub"
  op: "Sub"
  input: "bnorm_32/Cast"
  input: "bnorm_32/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_32/truediv"
  op: "RealDiv"
  input: "bnorm_32/Cast"
  input: "bnorm_32/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_32/mul"
  op: "Mul"
  input: "bnorm_32/FusedBatchNormV3:2"
  input: "bnorm_32/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_32/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_32/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_32/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_32/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_32/sub_1"
  op: "Sub"
  input: "bnorm_32/ReadVariableOp_2"
  input: "bnorm_32/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_32/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_32/mul_1"
  op: "Mul"
  input: "bnorm_32/sub_1"
  input: "bnorm_32/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_32/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_32/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_32/moving_mean"
  input: "bnorm_32/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_32/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_32/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_32/moving_mean"
  input: "^bnorm_32/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_32/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_32/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_32/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_32/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_32/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_32/sub_2"
  op: "Sub"
  input: "bnorm_32/ReadVariableOp_4"
  input: "bnorm_32/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_32/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_32/mul_2"
  op: "Mul"
  input: "bnorm_32/sub_2"
  input: "bnorm_32/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_32/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_32/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_32/moving_variance"
  input: "bnorm_32/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_32/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_32/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_32/moving_variance"
  input: "^bnorm_32/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_32/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_32/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_32/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_32/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_32/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_32/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_32/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_32/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_32/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_32/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_32/convolution"
  input: "bnorm_32/ReadVariableOp_6"
  input: "bnorm_32/ReadVariableOp_7"
  input: "bnorm_32/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_32/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_32/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_32/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "add_10/add"
  op: "AddV2"
  input: "add_9/add"
  input: "leaky_32/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_34/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv_34/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "conv_34/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "conv_34/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_34/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3103106
    }
  }
}
node {
  name: "conv_34/random_uniform/sub"
  op: "Sub"
  input: "conv_34/random_uniform/max"
  input: "conv_34/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_34/random_uniform/mul"
  op: "Mul"
  input: "conv_34/random_uniform/RandomUniform"
  input: "conv_34/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_34/random_uniform"
  op: "Add"
  input: "conv_34/random_uniform/mul"
  input: "conv_34/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_34/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_34/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_34/kernel"
    }
  }
}
node {
  name: "conv_34/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_34/kernel"
}
node {
  name: "conv_34/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_34/kernel"
  input: "conv_34/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_34/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_34/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_34/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_34/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_34/convolution"
  op: "Conv2D"
  input: "add_10/add"
  input: "conv_34/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_34/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_34/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_34/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_34/gamma"
    }
  }
}
node {
  name: "bnorm_34/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_34/gamma"
}
node {
  name: "bnorm_34/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_34/gamma"
  input: "bnorm_34/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_34/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_34/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_34/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_34/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_34/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_34/beta"
    }
  }
}
node {
  name: "bnorm_34/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_34/beta"
}
node {
  name: "bnorm_34/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_34/beta"
  input: "bnorm_34/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_34/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_34/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_34/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_34/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_34/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_34/moving_mean"
    }
  }
}
node {
  name: "bnorm_34/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_34/moving_mean"
}
node {
  name: "bnorm_34/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_34/moving_mean"
  input: "bnorm_34/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_34/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_34/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_34/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_34/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_34/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_34/moving_variance"
    }
  }
}
node {
  name: "bnorm_34/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_34/moving_variance"
}
node {
  name: "bnorm_34/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_34/moving_variance"
  input: "bnorm_34/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_34/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_34/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_34/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_34/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_34/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_34/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_34/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_34/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_34/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_34/convolution"
  input: "bnorm_34/ReadVariableOp"
  input: "bnorm_34/ReadVariableOp_1"
  input: "bnorm_34/Const_4"
  input: "bnorm_34/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_34/Shape"
  op: "Shape"
  input: "conv_34/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_34/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_34/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_34/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_34/strided_slice"
  op: "StridedSlice"
  input: "bnorm_34/Shape"
  input: "bnorm_34/strided_slice/stack"
  input: "bnorm_34/strided_slice/stack_1"
  input: "bnorm_34/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_34/Shape_1"
  op: "Shape"
  input: "conv_34/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_34/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_34/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_34/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_34/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_34/Shape_1"
  input: "bnorm_34/strided_slice_1/stack"
  input: "bnorm_34/strided_slice_1/stack_1"
  input: "bnorm_34/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_34/Shape_2"
  op: "Shape"
  input: "conv_34/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_34/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_34/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_34/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_34/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_34/Shape_2"
  input: "bnorm_34/strided_slice_2/stack"
  input: "bnorm_34/strided_slice_2/stack_1"
  input: "bnorm_34/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_34/Rank/packed"
  op: "Pack"
  input: "bnorm_34/strided_slice"
  input: "bnorm_34/strided_slice_1"
  input: "bnorm_34/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_34/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_34/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_34/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_34/range"
  op: "Range"
  input: "bnorm_34/range/start"
  input: "bnorm_34/Rank"
  input: "bnorm_34/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_34/Prod/input"
  op: "Pack"
  input: "bnorm_34/strided_slice"
  input: "bnorm_34/strided_slice_1"
  input: "bnorm_34/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_34/Prod"
  op: "Prod"
  input: "bnorm_34/Prod/input"
  input: "bnorm_34/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_34/Cast"
  op: "Cast"
  input: "bnorm_34/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_34/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_34/sub"
  op: "Sub"
  input: "bnorm_34/Cast"
  input: "bnorm_34/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_34/truediv"
  op: "RealDiv"
  input: "bnorm_34/Cast"
  input: "bnorm_34/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_34/mul"
  op: "Mul"
  input: "bnorm_34/FusedBatchNormV3:2"
  input: "bnorm_34/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_34/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_34/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_34/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_34/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_34/sub_1"
  op: "Sub"
  input: "bnorm_34/ReadVariableOp_2"
  input: "bnorm_34/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_34/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_34/mul_1"
  op: "Mul"
  input: "bnorm_34/sub_1"
  input: "bnorm_34/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_34/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_34/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_34/moving_mean"
  input: "bnorm_34/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_34/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_34/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_34/moving_mean"
  input: "^bnorm_34/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_34/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_34/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_34/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_34/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_34/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_34/sub_2"
  op: "Sub"
  input: "bnorm_34/ReadVariableOp_4"
  input: "bnorm_34/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_34/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_34/mul_2"
  op: "Mul"
  input: "bnorm_34/sub_2"
  input: "bnorm_34/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_34/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_34/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_34/moving_variance"
  input: "bnorm_34/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_34/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_34/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_34/moving_variance"
  input: "^bnorm_34/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_34/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_34/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_34/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_34/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_34/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_34/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_34/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_34/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_34/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_34/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_34/convolution"
  input: "bnorm_34/ReadVariableOp_6"
  input: "bnorm_34/ReadVariableOp_7"
  input: "bnorm_34/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_34/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_34/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_34/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_35/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv_35/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0416666679084301
      }
    }
  }
}
node {
  name: "conv_35/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084301
      }
    }
  }
}
node {
  name: "conv_35/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_35/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2931134
    }
  }
}
node {
  name: "conv_35/random_uniform/sub"
  op: "Sub"
  input: "conv_35/random_uniform/max"
  input: "conv_35/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_35/random_uniform/mul"
  op: "Mul"
  input: "conv_35/random_uniform/RandomUniform"
  input: "conv_35/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_35/random_uniform"
  op: "Add"
  input: "conv_35/random_uniform/mul"
  input: "conv_35/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_35/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_35/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_35/kernel"
    }
  }
}
node {
  name: "conv_35/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_35/kernel"
}
node {
  name: "conv_35/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_35/kernel"
  input: "conv_35/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_35/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_35/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_35/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_35/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_35/convolution"
  op: "Conv2D"
  input: "leaky_34/LeakyRelu"
  input: "conv_35/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_35/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_35/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_35/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_35/gamma"
    }
  }
}
node {
  name: "bnorm_35/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_35/gamma"
}
node {
  name: "bnorm_35/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_35/gamma"
  input: "bnorm_35/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_35/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_35/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_35/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_35/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_35/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_35/beta"
    }
  }
}
node {
  name: "bnorm_35/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_35/beta"
}
node {
  name: "bnorm_35/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_35/beta"
  input: "bnorm_35/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_35/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_35/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_35/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_35/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_35/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_35/moving_mean"
    }
  }
}
node {
  name: "bnorm_35/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_35/moving_mean"
}
node {
  name: "bnorm_35/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_35/moving_mean"
  input: "bnorm_35/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_35/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_35/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_35/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_35/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_35/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_35/moving_variance"
    }
  }
}
node {
  name: "bnorm_35/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_35/moving_variance"
}
node {
  name: "bnorm_35/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_35/moving_variance"
  input: "bnorm_35/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_35/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_35/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_35/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_35/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_35/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_35/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_35/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_35/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_35/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_35/convolution"
  input: "bnorm_35/ReadVariableOp"
  input: "bnorm_35/ReadVariableOp_1"
  input: "bnorm_35/Const_4"
  input: "bnorm_35/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_35/Shape"
  op: "Shape"
  input: "conv_35/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_35/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_35/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_35/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_35/strided_slice"
  op: "StridedSlice"
  input: "bnorm_35/Shape"
  input: "bnorm_35/strided_slice/stack"
  input: "bnorm_35/strided_slice/stack_1"
  input: "bnorm_35/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_35/Shape_1"
  op: "Shape"
  input: "conv_35/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_35/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_35/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_35/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_35/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_35/Shape_1"
  input: "bnorm_35/strided_slice_1/stack"
  input: "bnorm_35/strided_slice_1/stack_1"
  input: "bnorm_35/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_35/Shape_2"
  op: "Shape"
  input: "conv_35/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_35/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_35/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_35/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_35/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_35/Shape_2"
  input: "bnorm_35/strided_slice_2/stack"
  input: "bnorm_35/strided_slice_2/stack_1"
  input: "bnorm_35/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_35/Rank/packed"
  op: "Pack"
  input: "bnorm_35/strided_slice"
  input: "bnorm_35/strided_slice_1"
  input: "bnorm_35/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_35/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_35/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_35/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_35/range"
  op: "Range"
  input: "bnorm_35/range/start"
  input: "bnorm_35/Rank"
  input: "bnorm_35/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_35/Prod/input"
  op: "Pack"
  input: "bnorm_35/strided_slice"
  input: "bnorm_35/strided_slice_1"
  input: "bnorm_35/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_35/Prod"
  op: "Prod"
  input: "bnorm_35/Prod/input"
  input: "bnorm_35/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_35/Cast"
  op: "Cast"
  input: "bnorm_35/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_35/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_35/sub"
  op: "Sub"
  input: "bnorm_35/Cast"
  input: "bnorm_35/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_35/truediv"
  op: "RealDiv"
  input: "bnorm_35/Cast"
  input: "bnorm_35/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_35/mul"
  op: "Mul"
  input: "bnorm_35/FusedBatchNormV3:2"
  input: "bnorm_35/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_35/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_35/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_35/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_35/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_35/sub_1"
  op: "Sub"
  input: "bnorm_35/ReadVariableOp_2"
  input: "bnorm_35/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_35/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_35/mul_1"
  op: "Mul"
  input: "bnorm_35/sub_1"
  input: "bnorm_35/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_35/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_35/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_35/moving_mean"
  input: "bnorm_35/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_35/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_35/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_35/moving_mean"
  input: "^bnorm_35/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_35/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_35/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_35/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_35/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_35/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_35/sub_2"
  op: "Sub"
  input: "bnorm_35/ReadVariableOp_4"
  input: "bnorm_35/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_35/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_35/mul_2"
  op: "Mul"
  input: "bnorm_35/sub_2"
  input: "bnorm_35/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_35/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_35/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_35/moving_variance"
  input: "bnorm_35/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_35/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_35/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_35/moving_variance"
  input: "^bnorm_35/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_35/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_35/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_35/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_35/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_35/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_35/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_35/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_35/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_35/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_35/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_35/convolution"
  input: "bnorm_35/ReadVariableOp_6"
  input: "bnorm_35/ReadVariableOp_7"
  input: "bnorm_35/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_35/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_35/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_35/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "add_11/add"
  op: "AddV2"
  input: "add_10/add"
  input: "leaky_35/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_padding2d_4/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "zero_padding2d_4/Pad"
  op: "Pad"
  input: "add_11/add"
  input: "zero_padding2d_4/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_37/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv_37/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02946278266608715
      }
    }
  }
}
node {
  name: "conv_37/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02946278266608715
      }
    }
  }
}
node {
  name: "conv_37/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_37/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5069174
    }
  }
}
node {
  name: "conv_37/random_uniform/sub"
  op: "Sub"
  input: "conv_37/random_uniform/max"
  input: "conv_37/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_37/random_uniform/mul"
  op: "Mul"
  input: "conv_37/random_uniform/RandomUniform"
  input: "conv_37/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_37/random_uniform"
  op: "Add"
  input: "conv_37/random_uniform/mul"
  input: "conv_37/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_37/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_37/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_37/kernel"
    }
  }
}
node {
  name: "conv_37/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_37/kernel"
}
node {
  name: "conv_37/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_37/kernel"
  input: "conv_37/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_37/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_37/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_37/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_37/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_37/convolution"
  op: "Conv2D"
  input: "zero_padding2d_4/Pad"
  input: "conv_37/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_37/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_37/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_37/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_37/gamma"
    }
  }
}
node {
  name: "bnorm_37/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_37/gamma"
}
node {
  name: "bnorm_37/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_37/gamma"
  input: "bnorm_37/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_37/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_37/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_37/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_37/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_37/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_37/beta"
    }
  }
}
node {
  name: "bnorm_37/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_37/beta"
}
node {
  name: "bnorm_37/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_37/beta"
  input: "bnorm_37/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_37/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_37/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_37/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_37/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_37/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_37/moving_mean"
    }
  }
}
node {
  name: "bnorm_37/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_37/moving_mean"
}
node {
  name: "bnorm_37/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_37/moving_mean"
  input: "bnorm_37/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_37/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_37/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_37/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_37/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_37/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_37/moving_variance"
    }
  }
}
node {
  name: "bnorm_37/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_37/moving_variance"
}
node {
  name: "bnorm_37/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_37/moving_variance"
  input: "bnorm_37/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_37/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_37/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_37/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_37/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_37/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_37/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_37/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_37/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_37/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_37/convolution"
  input: "bnorm_37/ReadVariableOp"
  input: "bnorm_37/ReadVariableOp_1"
  input: "bnorm_37/Const_4"
  input: "bnorm_37/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_37/Shape"
  op: "Shape"
  input: "conv_37/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_37/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_37/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_37/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_37/strided_slice"
  op: "StridedSlice"
  input: "bnorm_37/Shape"
  input: "bnorm_37/strided_slice/stack"
  input: "bnorm_37/strided_slice/stack_1"
  input: "bnorm_37/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_37/Shape_1"
  op: "Shape"
  input: "conv_37/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_37/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_37/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_37/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_37/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_37/Shape_1"
  input: "bnorm_37/strided_slice_1/stack"
  input: "bnorm_37/strided_slice_1/stack_1"
  input: "bnorm_37/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_37/Shape_2"
  op: "Shape"
  input: "conv_37/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_37/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_37/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_37/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_37/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_37/Shape_2"
  input: "bnorm_37/strided_slice_2/stack"
  input: "bnorm_37/strided_slice_2/stack_1"
  input: "bnorm_37/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_37/Rank/packed"
  op: "Pack"
  input: "bnorm_37/strided_slice"
  input: "bnorm_37/strided_slice_1"
  input: "bnorm_37/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_37/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_37/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_37/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_37/range"
  op: "Range"
  input: "bnorm_37/range/start"
  input: "bnorm_37/Rank"
  input: "bnorm_37/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_37/Prod/input"
  op: "Pack"
  input: "bnorm_37/strided_slice"
  input: "bnorm_37/strided_slice_1"
  input: "bnorm_37/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_37/Prod"
  op: "Prod"
  input: "bnorm_37/Prod/input"
  input: "bnorm_37/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_37/Cast"
  op: "Cast"
  input: "bnorm_37/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_37/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_37/sub"
  op: "Sub"
  input: "bnorm_37/Cast"
  input: "bnorm_37/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_37/truediv"
  op: "RealDiv"
  input: "bnorm_37/Cast"
  input: "bnorm_37/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_37/mul"
  op: "Mul"
  input: "bnorm_37/FusedBatchNormV3:2"
  input: "bnorm_37/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_37/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_37/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_37/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_37/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_37/sub_1"
  op: "Sub"
  input: "bnorm_37/ReadVariableOp_2"
  input: "bnorm_37/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_37/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_37/mul_1"
  op: "Mul"
  input: "bnorm_37/sub_1"
  input: "bnorm_37/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_37/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_37/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_37/moving_mean"
  input: "bnorm_37/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_37/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_37/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_37/moving_mean"
  input: "^bnorm_37/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_37/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_37/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_37/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_37/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_37/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_37/sub_2"
  op: "Sub"
  input: "bnorm_37/ReadVariableOp_4"
  input: "bnorm_37/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_37/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_37/mul_2"
  op: "Mul"
  input: "bnorm_37/sub_2"
  input: "bnorm_37/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_37/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_37/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_37/moving_variance"
  input: "bnorm_37/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_37/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_37/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_37/moving_variance"
  input: "^bnorm_37/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_37/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_37/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_37/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_37/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_37/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_37/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_37/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_37/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_37/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_37/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_37/convolution"
  input: "bnorm_37/ReadVariableOp_6"
  input: "bnorm_37/ReadVariableOp_7"
  input: "bnorm_37/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_37/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_37/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_37/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_38/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv_38/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0883883461356163
      }
    }
  }
}
node {
  name: "conv_38/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "conv_38/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_38/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 161349
    }
  }
}
node {
  name: "conv_38/random_uniform/sub"
  op: "Sub"
  input: "conv_38/random_uniform/max"
  input: "conv_38/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_38/random_uniform/mul"
  op: "Mul"
  input: "conv_38/random_uniform/RandomUniform"
  input: "conv_38/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_38/random_uniform"
  op: "Add"
  input: "conv_38/random_uniform/mul"
  input: "conv_38/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_38/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_38/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_38/kernel"
    }
  }
}
node {
  name: "conv_38/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_38/kernel"
}
node {
  name: "conv_38/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_38/kernel"
  input: "conv_38/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_38/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_38/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_38/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_38/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_38/convolution"
  op: "Conv2D"
  input: "leaky_37/LeakyRelu"
  input: "conv_38/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_38/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_38/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_38/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_38/gamma"
    }
  }
}
node {
  name: "bnorm_38/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_38/gamma"
}
node {
  name: "bnorm_38/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_38/gamma"
  input: "bnorm_38/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_38/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_38/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_38/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_38/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_38/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_38/beta"
    }
  }
}
node {
  name: "bnorm_38/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_38/beta"
}
node {
  name: "bnorm_38/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_38/beta"
  input: "bnorm_38/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_38/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_38/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_38/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_38/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_38/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_38/moving_mean"
    }
  }
}
node {
  name: "bnorm_38/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_38/moving_mean"
}
node {
  name: "bnorm_38/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_38/moving_mean"
  input: "bnorm_38/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_38/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_38/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_38/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_38/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_38/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_38/moving_variance"
    }
  }
}
node {
  name: "bnorm_38/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_38/moving_variance"
}
node {
  name: "bnorm_38/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_38/moving_variance"
  input: "bnorm_38/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_38/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_38/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_38/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_38/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_38/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_38/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_38/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_38/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_38/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_38/convolution"
  input: "bnorm_38/ReadVariableOp"
  input: "bnorm_38/ReadVariableOp_1"
  input: "bnorm_38/Const_4"
  input: "bnorm_38/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_38/Shape"
  op: "Shape"
  input: "conv_38/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_38/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_38/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_38/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_38/strided_slice"
  op: "StridedSlice"
  input: "bnorm_38/Shape"
  input: "bnorm_38/strided_slice/stack"
  input: "bnorm_38/strided_slice/stack_1"
  input: "bnorm_38/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_38/Shape_1"
  op: "Shape"
  input: "conv_38/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_38/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_38/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_38/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_38/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_38/Shape_1"
  input: "bnorm_38/strided_slice_1/stack"
  input: "bnorm_38/strided_slice_1/stack_1"
  input: "bnorm_38/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_38/Shape_2"
  op: "Shape"
  input: "conv_38/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_38/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_38/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_38/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_38/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_38/Shape_2"
  input: "bnorm_38/strided_slice_2/stack"
  input: "bnorm_38/strided_slice_2/stack_1"
  input: "bnorm_38/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_38/Rank/packed"
  op: "Pack"
  input: "bnorm_38/strided_slice"
  input: "bnorm_38/strided_slice_1"
  input: "bnorm_38/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_38/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_38/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_38/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_38/range"
  op: "Range"
  input: "bnorm_38/range/start"
  input: "bnorm_38/Rank"
  input: "bnorm_38/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_38/Prod/input"
  op: "Pack"
  input: "bnorm_38/strided_slice"
  input: "bnorm_38/strided_slice_1"
  input: "bnorm_38/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_38/Prod"
  op: "Prod"
  input: "bnorm_38/Prod/input"
  input: "bnorm_38/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_38/Cast"
  op: "Cast"
  input: "bnorm_38/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_38/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_38/sub"
  op: "Sub"
  input: "bnorm_38/Cast"
  input: "bnorm_38/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_38/truediv"
  op: "RealDiv"
  input: "bnorm_38/Cast"
  input: "bnorm_38/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_38/mul"
  op: "Mul"
  input: "bnorm_38/FusedBatchNormV3:2"
  input: "bnorm_38/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_38/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_38/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_38/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_38/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_38/sub_1"
  op: "Sub"
  input: "bnorm_38/ReadVariableOp_2"
  input: "bnorm_38/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_38/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_38/mul_1"
  op: "Mul"
  input: "bnorm_38/sub_1"
  input: "bnorm_38/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_38/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_38/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_38/moving_mean"
  input: "bnorm_38/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_38/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_38/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_38/moving_mean"
  input: "^bnorm_38/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_38/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_38/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_38/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_38/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_38/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_38/sub_2"
  op: "Sub"
  input: "bnorm_38/ReadVariableOp_4"
  input: "bnorm_38/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_38/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_38/mul_2"
  op: "Mul"
  input: "bnorm_38/sub_2"
  input: "bnorm_38/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_38/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_38/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_38/moving_variance"
  input: "bnorm_38/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_38/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_38/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_38/moving_variance"
  input: "^bnorm_38/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_38/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_38/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_38/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_38/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_38/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_38/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_38/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_38/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_38/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_38/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_38/convolution"
  input: "bnorm_38/ReadVariableOp_6"
  input: "bnorm_38/ReadVariableOp_7"
  input: "bnorm_38/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_38/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_38/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_38/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_39/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv_39/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02946278266608715
      }
    }
  }
}
node {
  name: "conv_39/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02946278266608715
      }
    }
  }
}
node {
  name: "conv_39/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_39/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6671347
    }
  }
}
node {
  name: "conv_39/random_uniform/sub"
  op: "Sub"
  input: "conv_39/random_uniform/max"
  input: "conv_39/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_39/random_uniform/mul"
  op: "Mul"
  input: "conv_39/random_uniform/RandomUniform"
  input: "conv_39/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_39/random_uniform"
  op: "Add"
  input: "conv_39/random_uniform/mul"
  input: "conv_39/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_39/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_39/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_39/kernel"
    }
  }
}
node {
  name: "conv_39/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_39/kernel"
}
node {
  name: "conv_39/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_39/kernel"
  input: "conv_39/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_39/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_39/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_39/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_39/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_39/convolution"
  op: "Conv2D"
  input: "leaky_38/LeakyRelu"
  input: "conv_39/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_39/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_39/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_39/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_39/gamma"
    }
  }
}
node {
  name: "bnorm_39/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_39/gamma"
}
node {
  name: "bnorm_39/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_39/gamma"
  input: "bnorm_39/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_39/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_39/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_39/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_39/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_39/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_39/beta"
    }
  }
}
node {
  name: "bnorm_39/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_39/beta"
}
node {
  name: "bnorm_39/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_39/beta"
  input: "bnorm_39/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_39/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_39/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_39/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_39/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_39/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_39/moving_mean"
    }
  }
}
node {
  name: "bnorm_39/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_39/moving_mean"
}
node {
  name: "bnorm_39/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_39/moving_mean"
  input: "bnorm_39/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_39/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_39/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_39/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_39/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_39/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_39/moving_variance"
    }
  }
}
node {
  name: "bnorm_39/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_39/moving_variance"
}
node {
  name: "bnorm_39/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_39/moving_variance"
  input: "bnorm_39/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_39/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_39/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_39/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_39/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_39/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_39/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_39/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_39/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_39/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_39/convolution"
  input: "bnorm_39/ReadVariableOp"
  input: "bnorm_39/ReadVariableOp_1"
  input: "bnorm_39/Const_4"
  input: "bnorm_39/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_39/Shape"
  op: "Shape"
  input: "conv_39/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_39/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_39/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_39/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_39/strided_slice"
  op: "StridedSlice"
  input: "bnorm_39/Shape"
  input: "bnorm_39/strided_slice/stack"
  input: "bnorm_39/strided_slice/stack_1"
  input: "bnorm_39/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_39/Shape_1"
  op: "Shape"
  input: "conv_39/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_39/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_39/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_39/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_39/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_39/Shape_1"
  input: "bnorm_39/strided_slice_1/stack"
  input: "bnorm_39/strided_slice_1/stack_1"
  input: "bnorm_39/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_39/Shape_2"
  op: "Shape"
  input: "conv_39/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_39/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_39/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_39/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_39/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_39/Shape_2"
  input: "bnorm_39/strided_slice_2/stack"
  input: "bnorm_39/strided_slice_2/stack_1"
  input: "bnorm_39/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_39/Rank/packed"
  op: "Pack"
  input: "bnorm_39/strided_slice"
  input: "bnorm_39/strided_slice_1"
  input: "bnorm_39/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_39/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_39/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_39/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_39/range"
  op: "Range"
  input: "bnorm_39/range/start"
  input: "bnorm_39/Rank"
  input: "bnorm_39/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_39/Prod/input"
  op: "Pack"
  input: "bnorm_39/strided_slice"
  input: "bnorm_39/strided_slice_1"
  input: "bnorm_39/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_39/Prod"
  op: "Prod"
  input: "bnorm_39/Prod/input"
  input: "bnorm_39/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_39/Cast"
  op: "Cast"
  input: "bnorm_39/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_39/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_39/sub"
  op: "Sub"
  input: "bnorm_39/Cast"
  input: "bnorm_39/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_39/truediv"
  op: "RealDiv"
  input: "bnorm_39/Cast"
  input: "bnorm_39/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_39/mul"
  op: "Mul"
  input: "bnorm_39/FusedBatchNormV3:2"
  input: "bnorm_39/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_39/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_39/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_39/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_39/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_39/sub_1"
  op: "Sub"
  input: "bnorm_39/ReadVariableOp_2"
  input: "bnorm_39/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_39/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_39/mul_1"
  op: "Mul"
  input: "bnorm_39/sub_1"
  input: "bnorm_39/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_39/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_39/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_39/moving_mean"
  input: "bnorm_39/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_39/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_39/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_39/moving_mean"
  input: "^bnorm_39/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_39/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_39/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_39/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_39/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_39/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_39/sub_2"
  op: "Sub"
  input: "bnorm_39/ReadVariableOp_4"
  input: "bnorm_39/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_39/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_39/mul_2"
  op: "Mul"
  input: "bnorm_39/sub_2"
  input: "bnorm_39/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_39/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_39/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_39/moving_variance"
  input: "bnorm_39/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_39/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_39/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_39/moving_variance"
  input: "^bnorm_39/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_39/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_39/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_39/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_39/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_39/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_39/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_39/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_39/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_39/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_39/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_39/convolution"
  input: "bnorm_39/ReadVariableOp_6"
  input: "bnorm_39/ReadVariableOp_7"
  input: "bnorm_39/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_39/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_39/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_39/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "add_12/add"
  op: "AddV2"
  input: "leaky_37/LeakyRelu"
  input: "leaky_39/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_41/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv_41/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0883883461356163
      }
    }
  }
}
node {
  name: "conv_41/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "conv_41/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_41/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4549394
    }
  }
}
node {
  name: "conv_41/random_uniform/sub"
  op: "Sub"
  input: "conv_41/random_uniform/max"
  input: "conv_41/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_41/random_uniform/mul"
  op: "Mul"
  input: "conv_41/random_uniform/RandomUniform"
  input: "conv_41/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_41/random_uniform"
  op: "Add"
  input: "conv_41/random_uniform/mul"
  input: "conv_41/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_41/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_41/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_41/kernel"
    }
  }
}
node {
  name: "conv_41/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_41/kernel"
}
node {
  name: "conv_41/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_41/kernel"
  input: "conv_41/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_41/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_41/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_41/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_41/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_41/convolution"
  op: "Conv2D"
  input: "add_12/add"
  input: "conv_41/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_41/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_41/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_41/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_41/gamma"
    }
  }
}
node {
  name: "bnorm_41/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_41/gamma"
}
node {
  name: "bnorm_41/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_41/gamma"
  input: "bnorm_41/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_41/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_41/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_41/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_41/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_41/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_41/beta"
    }
  }
}
node {
  name: "bnorm_41/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_41/beta"
}
node {
  name: "bnorm_41/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_41/beta"
  input: "bnorm_41/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_41/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_41/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_41/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_41/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_41/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_41/moving_mean"
    }
  }
}
node {
  name: "bnorm_41/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_41/moving_mean"
}
node {
  name: "bnorm_41/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_41/moving_mean"
  input: "bnorm_41/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_41/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_41/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_41/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_41/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_41/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_41/moving_variance"
    }
  }
}
node {
  name: "bnorm_41/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_41/moving_variance"
}
node {
  name: "bnorm_41/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_41/moving_variance"
  input: "bnorm_41/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_41/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_41/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_41/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_41/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_41/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_41/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_41/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_41/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_41/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_41/convolution"
  input: "bnorm_41/ReadVariableOp"
  input: "bnorm_41/ReadVariableOp_1"
  input: "bnorm_41/Const_4"
  input: "bnorm_41/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_41/Shape"
  op: "Shape"
  input: "conv_41/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_41/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_41/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_41/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_41/strided_slice"
  op: "StridedSlice"
  input: "bnorm_41/Shape"
  input: "bnorm_41/strided_slice/stack"
  input: "bnorm_41/strided_slice/stack_1"
  input: "bnorm_41/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_41/Shape_1"
  op: "Shape"
  input: "conv_41/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_41/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_41/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_41/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_41/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_41/Shape_1"
  input: "bnorm_41/strided_slice_1/stack"
  input: "bnorm_41/strided_slice_1/stack_1"
  input: "bnorm_41/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_41/Shape_2"
  op: "Shape"
  input: "conv_41/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_41/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_41/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_41/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_41/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_41/Shape_2"
  input: "bnorm_41/strided_slice_2/stack"
  input: "bnorm_41/strided_slice_2/stack_1"
  input: "bnorm_41/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_41/Rank/packed"
  op: "Pack"
  input: "bnorm_41/strided_slice"
  input: "bnorm_41/strided_slice_1"
  input: "bnorm_41/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_41/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_41/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_41/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_41/range"
  op: "Range"
  input: "bnorm_41/range/start"
  input: "bnorm_41/Rank"
  input: "bnorm_41/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_41/Prod/input"
  op: "Pack"
  input: "bnorm_41/strided_slice"
  input: "bnorm_41/strided_slice_1"
  input: "bnorm_41/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_41/Prod"
  op: "Prod"
  input: "bnorm_41/Prod/input"
  input: "bnorm_41/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_41/Cast"
  op: "Cast"
  input: "bnorm_41/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_41/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_41/sub"
  op: "Sub"
  input: "bnorm_41/Cast"
  input: "bnorm_41/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_41/truediv"
  op: "RealDiv"
  input: "bnorm_41/Cast"
  input: "bnorm_41/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_41/mul"
  op: "Mul"
  input: "bnorm_41/FusedBatchNormV3:2"
  input: "bnorm_41/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_41/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_41/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_41/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_41/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_41/sub_1"
  op: "Sub"
  input: "bnorm_41/ReadVariableOp_2"
  input: "bnorm_41/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_41/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_41/mul_1"
  op: "Mul"
  input: "bnorm_41/sub_1"
  input: "bnorm_41/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_41/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_41/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_41/moving_mean"
  input: "bnorm_41/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_41/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_41/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_41/moving_mean"
  input: "^bnorm_41/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_41/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_41/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_41/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_41/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_41/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_41/sub_2"
  op: "Sub"
  input: "bnorm_41/ReadVariableOp_4"
  input: "bnorm_41/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_41/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_41/mul_2"
  op: "Mul"
  input: "bnorm_41/sub_2"
  input: "bnorm_41/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_41/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_41/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_41/moving_variance"
  input: "bnorm_41/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_41/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_41/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_41/moving_variance"
  input: "^bnorm_41/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_41/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_41/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_41/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_41/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_41/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_41/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_41/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_41/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_41/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_41/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_41/convolution"
  input: "bnorm_41/ReadVariableOp_6"
  input: "bnorm_41/ReadVariableOp_7"
  input: "bnorm_41/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_41/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_41/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_41/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_42/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv_42/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02946278266608715
      }
    }
  }
}
node {
  name: "conv_42/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02946278266608715
      }
    }
  }
}
node {
  name: "conv_42/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_42/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4767965
    }
  }
}
node {
  name: "conv_42/random_uniform/sub"
  op: "Sub"
  input: "conv_42/random_uniform/max"
  input: "conv_42/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_42/random_uniform/mul"
  op: "Mul"
  input: "conv_42/random_uniform/RandomUniform"
  input: "conv_42/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_42/random_uniform"
  op: "Add"
  input: "conv_42/random_uniform/mul"
  input: "conv_42/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_42/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_42/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_42/kernel"
    }
  }
}
node {
  name: "conv_42/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_42/kernel"
}
node {
  name: "conv_42/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_42/kernel"
  input: "conv_42/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_42/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_42/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_42/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_42/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_42/convolution"
  op: "Conv2D"
  input: "leaky_41/LeakyRelu"
  input: "conv_42/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_42/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_42/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_42/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_42/gamma"
    }
  }
}
node {
  name: "bnorm_42/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_42/gamma"
}
node {
  name: "bnorm_42/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_42/gamma"
  input: "bnorm_42/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_42/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_42/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_42/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_42/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_42/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_42/beta"
    }
  }
}
node {
  name: "bnorm_42/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_42/beta"
}
node {
  name: "bnorm_42/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_42/beta"
  input: "bnorm_42/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_42/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_42/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_42/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_42/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_42/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_42/moving_mean"
    }
  }
}
node {
  name: "bnorm_42/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_42/moving_mean"
}
node {
  name: "bnorm_42/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_42/moving_mean"
  input: "bnorm_42/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_42/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_42/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_42/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_42/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_42/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_42/moving_variance"
    }
  }
}
node {
  name: "bnorm_42/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_42/moving_variance"
}
node {
  name: "bnorm_42/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_42/moving_variance"
  input: "bnorm_42/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_42/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_42/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_42/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_42/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_42/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_42/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_42/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_42/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_42/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_42/convolution"
  input: "bnorm_42/ReadVariableOp"
  input: "bnorm_42/ReadVariableOp_1"
  input: "bnorm_42/Const_4"
  input: "bnorm_42/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_42/Shape"
  op: "Shape"
  input: "conv_42/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_42/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_42/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_42/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_42/strided_slice"
  op: "StridedSlice"
  input: "bnorm_42/Shape"
  input: "bnorm_42/strided_slice/stack"
  input: "bnorm_42/strided_slice/stack_1"
  input: "bnorm_42/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_42/Shape_1"
  op: "Shape"
  input: "conv_42/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_42/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_42/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_42/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_42/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_42/Shape_1"
  input: "bnorm_42/strided_slice_1/stack"
  input: "bnorm_42/strided_slice_1/stack_1"
  input: "bnorm_42/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_42/Shape_2"
  op: "Shape"
  input: "conv_42/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_42/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_42/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_42/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_42/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_42/Shape_2"
  input: "bnorm_42/strided_slice_2/stack"
  input: "bnorm_42/strided_slice_2/stack_1"
  input: "bnorm_42/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_42/Rank/packed"
  op: "Pack"
  input: "bnorm_42/strided_slice"
  input: "bnorm_42/strided_slice_1"
  input: "bnorm_42/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_42/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_42/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_42/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_42/range"
  op: "Range"
  input: "bnorm_42/range/start"
  input: "bnorm_42/Rank"
  input: "bnorm_42/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_42/Prod/input"
  op: "Pack"
  input: "bnorm_42/strided_slice"
  input: "bnorm_42/strided_slice_1"
  input: "bnorm_42/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_42/Prod"
  op: "Prod"
  input: "bnorm_42/Prod/input"
  input: "bnorm_42/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_42/Cast"
  op: "Cast"
  input: "bnorm_42/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_42/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_42/sub"
  op: "Sub"
  input: "bnorm_42/Cast"
  input: "bnorm_42/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_42/truediv"
  op: "RealDiv"
  input: "bnorm_42/Cast"
  input: "bnorm_42/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_42/mul"
  op: "Mul"
  input: "bnorm_42/FusedBatchNormV3:2"
  input: "bnorm_42/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_42/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_42/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_42/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_42/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_42/sub_1"
  op: "Sub"
  input: "bnorm_42/ReadVariableOp_2"
  input: "bnorm_42/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_42/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_42/mul_1"
  op: "Mul"
  input: "bnorm_42/sub_1"
  input: "bnorm_42/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_42/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_42/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_42/moving_mean"
  input: "bnorm_42/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_42/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_42/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_42/moving_mean"
  input: "^bnorm_42/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_42/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_42/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_42/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_42/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_42/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_42/sub_2"
  op: "Sub"
  input: "bnorm_42/ReadVariableOp_4"
  input: "bnorm_42/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_42/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_42/mul_2"
  op: "Mul"
  input: "bnorm_42/sub_2"
  input: "bnorm_42/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_42/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_42/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_42/moving_variance"
  input: "bnorm_42/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_42/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_42/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_42/moving_variance"
  input: "^bnorm_42/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_42/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_42/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_42/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_42/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_42/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_42/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_42/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_42/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_42/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_42/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_42/convolution"
  input: "bnorm_42/ReadVariableOp_6"
  input: "bnorm_42/ReadVariableOp_7"
  input: "bnorm_42/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_42/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_42/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_42/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "add_13/add"
  op: "AddV2"
  input: "add_12/add"
  input: "leaky_42/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_44/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv_44/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0883883461356163
      }
    }
  }
}
node {
  name: "conv_44/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "conv_44/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_44/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1957839
    }
  }
}
node {
  name: "conv_44/random_uniform/sub"
  op: "Sub"
  input: "conv_44/random_uniform/max"
  input: "conv_44/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_44/random_uniform/mul"
  op: "Mul"
  input: "conv_44/random_uniform/RandomUniform"
  input: "conv_44/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_44/random_uniform"
  op: "Add"
  input: "conv_44/random_uniform/mul"
  input: "conv_44/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_44/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_44/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_44/kernel"
    }
  }
}
node {
  name: "conv_44/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_44/kernel"
}
node {
  name: "conv_44/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_44/kernel"
  input: "conv_44/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_44/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_44/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_44/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_44/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_44/convolution"
  op: "Conv2D"
  input: "add_13/add"
  input: "conv_44/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_44/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_44/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_44/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_44/gamma"
    }
  }
}
node {
  name: "bnorm_44/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_44/gamma"
}
node {
  name: "bnorm_44/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_44/gamma"
  input: "bnorm_44/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_44/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_44/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_44/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_44/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_44/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_44/beta"
    }
  }
}
node {
  name: "bnorm_44/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_44/beta"
}
node {
  name: "bnorm_44/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_44/beta"
  input: "bnorm_44/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_44/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_44/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_44/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_44/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_44/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_44/moving_mean"
    }
  }
}
node {
  name: "bnorm_44/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_44/moving_mean"
}
node {
  name: "bnorm_44/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_44/moving_mean"
  input: "bnorm_44/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_44/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_44/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_44/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_44/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_44/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_44/moving_variance"
    }
  }
}
node {
  name: "bnorm_44/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_44/moving_variance"
}
node {
  name: "bnorm_44/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_44/moving_variance"
  input: "bnorm_44/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_44/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_44/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_44/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_44/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_44/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_44/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_44/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_44/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_44/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_44/convolution"
  input: "bnorm_44/ReadVariableOp"
  input: "bnorm_44/ReadVariableOp_1"
  input: "bnorm_44/Const_4"
  input: "bnorm_44/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_44/Shape"
  op: "Shape"
  input: "conv_44/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_44/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_44/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_44/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_44/strided_slice"
  op: "StridedSlice"
  input: "bnorm_44/Shape"
  input: "bnorm_44/strided_slice/stack"
  input: "bnorm_44/strided_slice/stack_1"
  input: "bnorm_44/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_44/Shape_1"
  op: "Shape"
  input: "conv_44/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_44/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_44/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_44/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_44/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_44/Shape_1"
  input: "bnorm_44/strided_slice_1/stack"
  input: "bnorm_44/strided_slice_1/stack_1"
  input: "bnorm_44/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_44/Shape_2"
  op: "Shape"
  input: "conv_44/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_44/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_44/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_44/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_44/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_44/Shape_2"
  input: "bnorm_44/strided_slice_2/stack"
  input: "bnorm_44/strided_slice_2/stack_1"
  input: "bnorm_44/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_44/Rank/packed"
  op: "Pack"
  input: "bnorm_44/strided_slice"
  input: "bnorm_44/strided_slice_1"
  input: "bnorm_44/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_44/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_44/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_44/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_44/range"
  op: "Range"
  input: "bnorm_44/range/start"
  input: "bnorm_44/Rank"
  input: "bnorm_44/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_44/Prod/input"
  op: "Pack"
  input: "bnorm_44/strided_slice"
  input: "bnorm_44/strided_slice_1"
  input: "bnorm_44/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_44/Prod"
  op: "Prod"
  input: "bnorm_44/Prod/input"
  input: "bnorm_44/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_44/Cast"
  op: "Cast"
  input: "bnorm_44/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_44/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_44/sub"
  op: "Sub"
  input: "bnorm_44/Cast"
  input: "bnorm_44/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_44/truediv"
  op: "RealDiv"
  input: "bnorm_44/Cast"
  input: "bnorm_44/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_44/mul"
  op: "Mul"
  input: "bnorm_44/FusedBatchNormV3:2"
  input: "bnorm_44/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_44/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_44/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_44/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_44/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_44/sub_1"
  op: "Sub"
  input: "bnorm_44/ReadVariableOp_2"
  input: "bnorm_44/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_44/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_44/mul_1"
  op: "Mul"
  input: "bnorm_44/sub_1"
  input: "bnorm_44/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_44/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_44/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_44/moving_mean"
  input: "bnorm_44/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_44/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_44/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_44/moving_mean"
  input: "^bnorm_44/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_44/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_44/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_44/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_44/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_44/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_44/sub_2"
  op: "Sub"
  input: "bnorm_44/ReadVariableOp_4"
  input: "bnorm_44/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_44/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_44/mul_2"
  op: "Mul"
  input: "bnorm_44/sub_2"
  input: "bnorm_44/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_44/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_44/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_44/moving_variance"
  input: "bnorm_44/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_44/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_44/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_44/moving_variance"
  input: "^bnorm_44/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_44/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_44/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_44/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_44/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_44/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_44/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_44/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_44/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_44/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_44/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_44/convolution"
  input: "bnorm_44/ReadVariableOp_6"
  input: "bnorm_44/ReadVariableOp_7"
  input: "bnorm_44/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_44/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_44/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_44/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_45/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv_45/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02946278266608715
      }
    }
  }
}
node {
  name: "conv_45/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02946278266608715
      }
    }
  }
}
node {
  name: "conv_45/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_45/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3371293
    }
  }
}
node {
  name: "conv_45/random_uniform/sub"
  op: "Sub"
  input: "conv_45/random_uniform/max"
  input: "conv_45/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_45/random_uniform/mul"
  op: "Mul"
  input: "conv_45/random_uniform/RandomUniform"
  input: "conv_45/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_45/random_uniform"
  op: "Add"
  input: "conv_45/random_uniform/mul"
  input: "conv_45/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_45/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_45/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_45/kernel"
    }
  }
}
node {
  name: "conv_45/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_45/kernel"
}
node {
  name: "conv_45/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_45/kernel"
  input: "conv_45/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_45/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_45/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_45/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_45/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_45/convolution"
  op: "Conv2D"
  input: "leaky_44/LeakyRelu"
  input: "conv_45/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_45/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_45/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_45/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_45/gamma"
    }
  }
}
node {
  name: "bnorm_45/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_45/gamma"
}
node {
  name: "bnorm_45/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_45/gamma"
  input: "bnorm_45/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_45/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_45/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_45/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_45/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_45/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_45/beta"
    }
  }
}
node {
  name: "bnorm_45/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_45/beta"
}
node {
  name: "bnorm_45/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_45/beta"
  input: "bnorm_45/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_45/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_45/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_45/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_45/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_45/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_45/moving_mean"
    }
  }
}
node {
  name: "bnorm_45/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_45/moving_mean"
}
node {
  name: "bnorm_45/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_45/moving_mean"
  input: "bnorm_45/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_45/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_45/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_45/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_45/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_45/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_45/moving_variance"
    }
  }
}
node {
  name: "bnorm_45/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_45/moving_variance"
}
node {
  name: "bnorm_45/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_45/moving_variance"
  input: "bnorm_45/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_45/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_45/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_45/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_45/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_45/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_45/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_45/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_45/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_45/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_45/convolution"
  input: "bnorm_45/ReadVariableOp"
  input: "bnorm_45/ReadVariableOp_1"
  input: "bnorm_45/Const_4"
  input: "bnorm_45/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_45/Shape"
  op: "Shape"
  input: "conv_45/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_45/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_45/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_45/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_45/strided_slice"
  op: "StridedSlice"
  input: "bnorm_45/Shape"
  input: "bnorm_45/strided_slice/stack"
  input: "bnorm_45/strided_slice/stack_1"
  input: "bnorm_45/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_45/Shape_1"
  op: "Shape"
  input: "conv_45/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_45/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_45/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_45/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_45/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_45/Shape_1"
  input: "bnorm_45/strided_slice_1/stack"
  input: "bnorm_45/strided_slice_1/stack_1"
  input: "bnorm_45/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_45/Shape_2"
  op: "Shape"
  input: "conv_45/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_45/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_45/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_45/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_45/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_45/Shape_2"
  input: "bnorm_45/strided_slice_2/stack"
  input: "bnorm_45/strided_slice_2/stack_1"
  input: "bnorm_45/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_45/Rank/packed"
  op: "Pack"
  input: "bnorm_45/strided_slice"
  input: "bnorm_45/strided_slice_1"
  input: "bnorm_45/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_45/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_45/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_45/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_45/range"
  op: "Range"
  input: "bnorm_45/range/start"
  input: "bnorm_45/Rank"
  input: "bnorm_45/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_45/Prod/input"
  op: "Pack"
  input: "bnorm_45/strided_slice"
  input: "bnorm_45/strided_slice_1"
  input: "bnorm_45/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_45/Prod"
  op: "Prod"
  input: "bnorm_45/Prod/input"
  input: "bnorm_45/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_45/Cast"
  op: "Cast"
  input: "bnorm_45/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_45/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_45/sub"
  op: "Sub"
  input: "bnorm_45/Cast"
  input: "bnorm_45/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_45/truediv"
  op: "RealDiv"
  input: "bnorm_45/Cast"
  input: "bnorm_45/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_45/mul"
  op: "Mul"
  input: "bnorm_45/FusedBatchNormV3:2"
  input: "bnorm_45/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_45/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_45/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_45/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_45/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_45/sub_1"
  op: "Sub"
  input: "bnorm_45/ReadVariableOp_2"
  input: "bnorm_45/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_45/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_45/mul_1"
  op: "Mul"
  input: "bnorm_45/sub_1"
  input: "bnorm_45/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_45/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_45/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_45/moving_mean"
  input: "bnorm_45/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_45/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_45/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_45/moving_mean"
  input: "^bnorm_45/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_45/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_45/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_45/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_45/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_45/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_45/sub_2"
  op: "Sub"
  input: "bnorm_45/ReadVariableOp_4"
  input: "bnorm_45/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_45/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_45/mul_2"
  op: "Mul"
  input: "bnorm_45/sub_2"
  input: "bnorm_45/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_45/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_45/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_45/moving_variance"
  input: "bnorm_45/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_45/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_45/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_45/moving_variance"
  input: "^bnorm_45/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_45/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_45/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_45/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_45/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_45/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_45/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_45/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_45/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_45/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_45/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_45/convolution"
  input: "bnorm_45/ReadVariableOp_6"
  input: "bnorm_45/ReadVariableOp_7"
  input: "bnorm_45/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_45/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_45/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_45/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "add_14/add"
  op: "AddV2"
  input: "add_13/add"
  input: "leaky_45/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_47/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv_47/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0883883461356163
      }
    }
  }
}
node {
  name: "conv_47/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "conv_47/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_47/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6759330
    }
  }
}
node {
  name: "conv_47/random_uniform/sub"
  op: "Sub"
  input: "conv_47/random_uniform/max"
  input: "conv_47/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_47/random_uniform/mul"
  op: "Mul"
  input: "conv_47/random_uniform/RandomUniform"
  input: "conv_47/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_47/random_uniform"
  op: "Add"
  input: "conv_47/random_uniform/mul"
  input: "conv_47/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_47/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_47/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_47/kernel"
    }
  }
}
node {
  name: "conv_47/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_47/kernel"
}
node {
  name: "conv_47/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_47/kernel"
  input: "conv_47/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_47/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_47/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_47/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_47/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_47/convolution"
  op: "Conv2D"
  input: "add_14/add"
  input: "conv_47/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_47/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_47/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_47/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_47/gamma"
    }
  }
}
node {
  name: "bnorm_47/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_47/gamma"
}
node {
  name: "bnorm_47/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_47/gamma"
  input: "bnorm_47/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_47/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_47/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_47/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_47/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_47/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_47/beta"
    }
  }
}
node {
  name: "bnorm_47/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_47/beta"
}
node {
  name: "bnorm_47/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_47/beta"
  input: "bnorm_47/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_47/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_47/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_47/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_47/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_47/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_47/moving_mean"
    }
  }
}
node {
  name: "bnorm_47/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_47/moving_mean"
}
node {
  name: "bnorm_47/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_47/moving_mean"
  input: "bnorm_47/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_47/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_47/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_47/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_47/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_47/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_47/moving_variance"
    }
  }
}
node {
  name: "bnorm_47/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_47/moving_variance"
}
node {
  name: "bnorm_47/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_47/moving_variance"
  input: "bnorm_47/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_47/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_47/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_47/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_47/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_47/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_47/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_47/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_47/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_47/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_47/convolution"
  input: "bnorm_47/ReadVariableOp"
  input: "bnorm_47/ReadVariableOp_1"
  input: "bnorm_47/Const_4"
  input: "bnorm_47/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_47/Shape"
  op: "Shape"
  input: "conv_47/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_47/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_47/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_47/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_47/strided_slice"
  op: "StridedSlice"
  input: "bnorm_47/Shape"
  input: "bnorm_47/strided_slice/stack"
  input: "bnorm_47/strided_slice/stack_1"
  input: "bnorm_47/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_47/Shape_1"
  op: "Shape"
  input: "conv_47/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_47/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_47/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_47/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_47/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_47/Shape_1"
  input: "bnorm_47/strided_slice_1/stack"
  input: "bnorm_47/strided_slice_1/stack_1"
  input: "bnorm_47/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_47/Shape_2"
  op: "Shape"
  input: "conv_47/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_47/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_47/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_47/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_47/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_47/Shape_2"
  input: "bnorm_47/strided_slice_2/stack"
  input: "bnorm_47/strided_slice_2/stack_1"
  input: "bnorm_47/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_47/Rank/packed"
  op: "Pack"
  input: "bnorm_47/strided_slice"
  input: "bnorm_47/strided_slice_1"
  input: "bnorm_47/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_47/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_47/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_47/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_47/range"
  op: "Range"
  input: "bnorm_47/range/start"
  input: "bnorm_47/Rank"
  input: "bnorm_47/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_47/Prod/input"
  op: "Pack"
  input: "bnorm_47/strided_slice"
  input: "bnorm_47/strided_slice_1"
  input: "bnorm_47/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_47/Prod"
  op: "Prod"
  input: "bnorm_47/Prod/input"
  input: "bnorm_47/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_47/Cast"
  op: "Cast"
  input: "bnorm_47/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_47/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_47/sub"
  op: "Sub"
  input: "bnorm_47/Cast"
  input: "bnorm_47/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_47/truediv"
  op: "RealDiv"
  input: "bnorm_47/Cast"
  input: "bnorm_47/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_47/mul"
  op: "Mul"
  input: "bnorm_47/FusedBatchNormV3:2"
  input: "bnorm_47/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_47/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_47/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_47/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_47/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_47/sub_1"
  op: "Sub"
  input: "bnorm_47/ReadVariableOp_2"
  input: "bnorm_47/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_47/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_47/mul_1"
  op: "Mul"
  input: "bnorm_47/sub_1"
  input: "bnorm_47/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_47/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_47/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_47/moving_mean"
  input: "bnorm_47/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_47/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_47/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_47/moving_mean"
  input: "^bnorm_47/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_47/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_47/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_47/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_47/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_47/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_47/sub_2"
  op: "Sub"
  input: "bnorm_47/ReadVariableOp_4"
  input: "bnorm_47/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_47/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_47/mul_2"
  op: "Mul"
  input: "bnorm_47/sub_2"
  input: "bnorm_47/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_47/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_47/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_47/moving_variance"
  input: "bnorm_47/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_47/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_47/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_47/moving_variance"
  input: "^bnorm_47/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_47/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_47/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_47/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_47/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_47/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_47/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_47/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_47/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_47/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_47/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_47/convolution"
  input: "bnorm_47/ReadVariableOp_6"
  input: "bnorm_47/ReadVariableOp_7"
  input: "bnorm_47/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_47/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_47/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_47/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_48/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv_48/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02946278266608715
      }
    }
  }
}
node {
  name: "conv_48/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02946278266608715
      }
    }
  }
}
node {
  name: "conv_48/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_48/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6521075
    }
  }
}
node {
  name: "conv_48/random_uniform/sub"
  op: "Sub"
  input: "conv_48/random_uniform/max"
  input: "conv_48/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_48/random_uniform/mul"
  op: "Mul"
  input: "conv_48/random_uniform/RandomUniform"
  input: "conv_48/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_48/random_uniform"
  op: "Add"
  input: "conv_48/random_uniform/mul"
  input: "conv_48/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_48/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_48/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_48/kernel"
    }
  }
}
node {
  name: "conv_48/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_48/kernel"
}
node {
  name: "conv_48/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_48/kernel"
  input: "conv_48/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_48/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_48/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_48/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_48/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_48/convolution"
  op: "Conv2D"
  input: "leaky_47/LeakyRelu"
  input: "conv_48/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_48/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_48/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_48/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_48/gamma"
    }
  }
}
node {
  name: "bnorm_48/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_48/gamma"
}
node {
  name: "bnorm_48/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_48/gamma"
  input: "bnorm_48/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_48/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_48/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_48/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_48/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_48/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_48/beta"
    }
  }
}
node {
  name: "bnorm_48/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_48/beta"
}
node {
  name: "bnorm_48/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_48/beta"
  input: "bnorm_48/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_48/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_48/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_48/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_48/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_48/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_48/moving_mean"
    }
  }
}
node {
  name: "bnorm_48/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_48/moving_mean"
}
node {
  name: "bnorm_48/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_48/moving_mean"
  input: "bnorm_48/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_48/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_48/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_48/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_48/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_48/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_48/moving_variance"
    }
  }
}
node {
  name: "bnorm_48/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_48/moving_variance"
}
node {
  name: "bnorm_48/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_48/moving_variance"
  input: "bnorm_48/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_48/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_48/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_48/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_48/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_48/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_48/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_48/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_48/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_48/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_48/convolution"
  input: "bnorm_48/ReadVariableOp"
  input: "bnorm_48/ReadVariableOp_1"
  input: "bnorm_48/Const_4"
  input: "bnorm_48/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_48/Shape"
  op: "Shape"
  input: "conv_48/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_48/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_48/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_48/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_48/strided_slice"
  op: "StridedSlice"
  input: "bnorm_48/Shape"
  input: "bnorm_48/strided_slice/stack"
  input: "bnorm_48/strided_slice/stack_1"
  input: "bnorm_48/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_48/Shape_1"
  op: "Shape"
  input: "conv_48/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_48/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_48/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_48/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_48/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_48/Shape_1"
  input: "bnorm_48/strided_slice_1/stack"
  input: "bnorm_48/strided_slice_1/stack_1"
  input: "bnorm_48/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_48/Shape_2"
  op: "Shape"
  input: "conv_48/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_48/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_48/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_48/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_48/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_48/Shape_2"
  input: "bnorm_48/strided_slice_2/stack"
  input: "bnorm_48/strided_slice_2/stack_1"
  input: "bnorm_48/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_48/Rank/packed"
  op: "Pack"
  input: "bnorm_48/strided_slice"
  input: "bnorm_48/strided_slice_1"
  input: "bnorm_48/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_48/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_48/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_48/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_48/range"
  op: "Range"
  input: "bnorm_48/range/start"
  input: "bnorm_48/Rank"
  input: "bnorm_48/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_48/Prod/input"
  op: "Pack"
  input: "bnorm_48/strided_slice"
  input: "bnorm_48/strided_slice_1"
  input: "bnorm_48/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_48/Prod"
  op: "Prod"
  input: "bnorm_48/Prod/input"
  input: "bnorm_48/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_48/Cast"
  op: "Cast"
  input: "bnorm_48/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_48/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_48/sub"
  op: "Sub"
  input: "bnorm_48/Cast"
  input: "bnorm_48/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_48/truediv"
  op: "RealDiv"
  input: "bnorm_48/Cast"
  input: "bnorm_48/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_48/mul"
  op: "Mul"
  input: "bnorm_48/FusedBatchNormV3:2"
  input: "bnorm_48/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_48/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_48/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_48/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_48/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_48/sub_1"
  op: "Sub"
  input: "bnorm_48/ReadVariableOp_2"
  input: "bnorm_48/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_48/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_48/mul_1"
  op: "Mul"
  input: "bnorm_48/sub_1"
  input: "bnorm_48/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_48/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_48/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_48/moving_mean"
  input: "bnorm_48/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_48/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_48/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_48/moving_mean"
  input: "^bnorm_48/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_48/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_48/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_48/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_48/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_48/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_48/sub_2"
  op: "Sub"
  input: "bnorm_48/ReadVariableOp_4"
  input: "bnorm_48/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_48/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_48/mul_2"
  op: "Mul"
  input: "bnorm_48/sub_2"
  input: "bnorm_48/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_48/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_48/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_48/moving_variance"
  input: "bnorm_48/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_48/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_48/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_48/moving_variance"
  input: "^bnorm_48/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_48/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_48/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_48/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_48/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_48/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_48/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_48/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_48/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_48/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_48/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_48/convolution"
  input: "bnorm_48/ReadVariableOp_6"
  input: "bnorm_48/ReadVariableOp_7"
  input: "bnorm_48/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_48/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_48/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_48/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "add_15/add"
  op: "AddV2"
  input: "add_14/add"
  input: "leaky_48/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_50/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv_50/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0883883461356163
      }
    }
  }
}
node {
  name: "conv_50/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "conv_50/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_50/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8013456
    }
  }
}
node {
  name: "conv_50/random_uniform/sub"
  op: "Sub"
  input: "conv_50/random_uniform/max"
  input: "conv_50/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_50/random_uniform/mul"
  op: "Mul"
  input: "conv_50/random_uniform/RandomUniform"
  input: "conv_50/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_50/random_uniform"
  op: "Add"
  input: "conv_50/random_uniform/mul"
  input: "conv_50/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_50/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_50/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_50/kernel"
    }
  }
}
node {
  name: "conv_50/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_50/kernel"
}
node {
  name: "conv_50/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_50/kernel"
  input: "conv_50/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_50/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_50/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_50/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_50/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_50/convolution"
  op: "Conv2D"
  input: "add_15/add"
  input: "conv_50/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_50/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_50/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_50/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_50/gamma"
    }
  }
}
node {
  name: "bnorm_50/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_50/gamma"
}
node {
  name: "bnorm_50/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_50/gamma"
  input: "bnorm_50/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_50/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_50/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_50/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_50/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_50/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_50/beta"
    }
  }
}
node {
  name: "bnorm_50/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_50/beta"
}
node {
  name: "bnorm_50/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_50/beta"
  input: "bnorm_50/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_50/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_50/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_50/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_50/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_50/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_50/moving_mean"
    }
  }
}
node {
  name: "bnorm_50/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_50/moving_mean"
}
node {
  name: "bnorm_50/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_50/moving_mean"
  input: "bnorm_50/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_50/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_50/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_50/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_50/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_50/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_50/moving_variance"
    }
  }
}
node {
  name: "bnorm_50/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_50/moving_variance"
}
node {
  name: "bnorm_50/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_50/moving_variance"
  input: "bnorm_50/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_50/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_50/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_50/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_50/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_50/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_50/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_50/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_50/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_50/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_50/convolution"
  input: "bnorm_50/ReadVariableOp"
  input: "bnorm_50/ReadVariableOp_1"
  input: "bnorm_50/Const_4"
  input: "bnorm_50/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_50/Shape"
  op: "Shape"
  input: "conv_50/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_50/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_50/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_50/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_50/strided_slice"
  op: "StridedSlice"
  input: "bnorm_50/Shape"
  input: "bnorm_50/strided_slice/stack"
  input: "bnorm_50/strided_slice/stack_1"
  input: "bnorm_50/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_50/Shape_1"
  op: "Shape"
  input: "conv_50/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_50/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_50/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_50/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_50/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_50/Shape_1"
  input: "bnorm_50/strided_slice_1/stack"
  input: "bnorm_50/strided_slice_1/stack_1"
  input: "bnorm_50/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_50/Shape_2"
  op: "Shape"
  input: "conv_50/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_50/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_50/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_50/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_50/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_50/Shape_2"
  input: "bnorm_50/strided_slice_2/stack"
  input: "bnorm_50/strided_slice_2/stack_1"
  input: "bnorm_50/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_50/Rank/packed"
  op: "Pack"
  input: "bnorm_50/strided_slice"
  input: "bnorm_50/strided_slice_1"
  input: "bnorm_50/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_50/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_50/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_50/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_50/range"
  op: "Range"
  input: "bnorm_50/range/start"
  input: "bnorm_50/Rank"
  input: "bnorm_50/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_50/Prod/input"
  op: "Pack"
  input: "bnorm_50/strided_slice"
  input: "bnorm_50/strided_slice_1"
  input: "bnorm_50/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_50/Prod"
  op: "Prod"
  input: "bnorm_50/Prod/input"
  input: "bnorm_50/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_50/Cast"
  op: "Cast"
  input: "bnorm_50/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_50/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_50/sub"
  op: "Sub"
  input: "bnorm_50/Cast"
  input: "bnorm_50/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_50/truediv"
  op: "RealDiv"
  input: "bnorm_50/Cast"
  input: "bnorm_50/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_50/mul"
  op: "Mul"
  input: "bnorm_50/FusedBatchNormV3:2"
  input: "bnorm_50/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_50/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_50/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_50/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_50/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_50/sub_1"
  op: "Sub"
  input: "bnorm_50/ReadVariableOp_2"
  input: "bnorm_50/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_50/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_50/mul_1"
  op: "Mul"
  input: "bnorm_50/sub_1"
  input: "bnorm_50/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_50/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_50/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_50/moving_mean"
  input: "bnorm_50/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_50/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_50/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_50/moving_mean"
  input: "^bnorm_50/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_50/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_50/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_50/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_50/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_50/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_50/sub_2"
  op: "Sub"
  input: "bnorm_50/ReadVariableOp_4"
  input: "bnorm_50/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_50/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_50/mul_2"
  op: "Mul"
  input: "bnorm_50/sub_2"
  input: "bnorm_50/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_50/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_50/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_50/moving_variance"
  input: "bnorm_50/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_50/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_50/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_50/moving_variance"
  input: "^bnorm_50/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_50/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_50/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_50/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_50/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_50/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_50/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_50/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_50/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_50/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_50/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_50/convolution"
  input: "bnorm_50/ReadVariableOp_6"
  input: "bnorm_50/ReadVariableOp_7"
  input: "bnorm_50/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_50/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_50/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_50/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_51/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv_51/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02946278266608715
      }
    }
  }
}
node {
  name: "conv_51/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02946278266608715
      }
    }
  }
}
node {
  name: "conv_51/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_51/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6312670
    }
  }
}
node {
  name: "conv_51/random_uniform/sub"
  op: "Sub"
  input: "conv_51/random_uniform/max"
  input: "conv_51/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_51/random_uniform/mul"
  op: "Mul"
  input: "conv_51/random_uniform/RandomUniform"
  input: "conv_51/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_51/random_uniform"
  op: "Add"
  input: "conv_51/random_uniform/mul"
  input: "conv_51/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_51/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_51/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_51/kernel"
    }
  }
}
node {
  name: "conv_51/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_51/kernel"
}
node {
  name: "conv_51/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_51/kernel"
  input: "conv_51/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_51/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_51/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_51/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_51/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_51/convolution"
  op: "Conv2D"
  input: "leaky_50/LeakyRelu"
  input: "conv_51/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_51/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_51/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_51/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_51/gamma"
    }
  }
}
node {
  name: "bnorm_51/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_51/gamma"
}
node {
  name: "bnorm_51/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_51/gamma"
  input: "bnorm_51/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_51/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_51/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_51/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_51/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_51/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_51/beta"
    }
  }
}
node {
  name: "bnorm_51/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_51/beta"
}
node {
  name: "bnorm_51/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_51/beta"
  input: "bnorm_51/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_51/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_51/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_51/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_51/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_51/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_51/moving_mean"
    }
  }
}
node {
  name: "bnorm_51/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_51/moving_mean"
}
node {
  name: "bnorm_51/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_51/moving_mean"
  input: "bnorm_51/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_51/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_51/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_51/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_51/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_51/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_51/moving_variance"
    }
  }
}
node {
  name: "bnorm_51/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_51/moving_variance"
}
node {
  name: "bnorm_51/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_51/moving_variance"
  input: "bnorm_51/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_51/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_51/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_51/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_51/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_51/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_51/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_51/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_51/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_51/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_51/convolution"
  input: "bnorm_51/ReadVariableOp"
  input: "bnorm_51/ReadVariableOp_1"
  input: "bnorm_51/Const_4"
  input: "bnorm_51/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_51/Shape"
  op: "Shape"
  input: "conv_51/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_51/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_51/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_51/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_51/strided_slice"
  op: "StridedSlice"
  input: "bnorm_51/Shape"
  input: "bnorm_51/strided_slice/stack"
  input: "bnorm_51/strided_slice/stack_1"
  input: "bnorm_51/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_51/Shape_1"
  op: "Shape"
  input: "conv_51/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_51/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_51/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_51/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_51/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_51/Shape_1"
  input: "bnorm_51/strided_slice_1/stack"
  input: "bnorm_51/strided_slice_1/stack_1"
  input: "bnorm_51/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_51/Shape_2"
  op: "Shape"
  input: "conv_51/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_51/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_51/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_51/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_51/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_51/Shape_2"
  input: "bnorm_51/strided_slice_2/stack"
  input: "bnorm_51/strided_slice_2/stack_1"
  input: "bnorm_51/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_51/Rank/packed"
  op: "Pack"
  input: "bnorm_51/strided_slice"
  input: "bnorm_51/strided_slice_1"
  input: "bnorm_51/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_51/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_51/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_51/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_51/range"
  op: "Range"
  input: "bnorm_51/range/start"
  input: "bnorm_51/Rank"
  input: "bnorm_51/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_51/Prod/input"
  op: "Pack"
  input: "bnorm_51/strided_slice"
  input: "bnorm_51/strided_slice_1"
  input: "bnorm_51/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_51/Prod"
  op: "Prod"
  input: "bnorm_51/Prod/input"
  input: "bnorm_51/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_51/Cast"
  op: "Cast"
  input: "bnorm_51/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_51/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_51/sub"
  op: "Sub"
  input: "bnorm_51/Cast"
  input: "bnorm_51/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_51/truediv"
  op: "RealDiv"
  input: "bnorm_51/Cast"
  input: "bnorm_51/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_51/mul"
  op: "Mul"
  input: "bnorm_51/FusedBatchNormV3:2"
  input: "bnorm_51/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_51/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_51/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_51/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_51/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_51/sub_1"
  op: "Sub"
  input: "bnorm_51/ReadVariableOp_2"
  input: "bnorm_51/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_51/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_51/mul_1"
  op: "Mul"
  input: "bnorm_51/sub_1"
  input: "bnorm_51/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_51/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_51/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_51/moving_mean"
  input: "bnorm_51/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_51/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_51/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_51/moving_mean"
  input: "^bnorm_51/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_51/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_51/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_51/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_51/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_51/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_51/sub_2"
  op: "Sub"
  input: "bnorm_51/ReadVariableOp_4"
  input: "bnorm_51/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_51/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_51/mul_2"
  op: "Mul"
  input: "bnorm_51/sub_2"
  input: "bnorm_51/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_51/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_51/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_51/moving_variance"
  input: "bnorm_51/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_51/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_51/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_51/moving_variance"
  input: "^bnorm_51/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_51/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_51/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_51/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_51/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_51/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_51/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_51/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_51/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_51/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_51/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_51/convolution"
  input: "bnorm_51/ReadVariableOp_6"
  input: "bnorm_51/ReadVariableOp_7"
  input: "bnorm_51/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_51/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_51/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_51/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "add_16/add"
  op: "AddV2"
  input: "add_15/add"
  input: "leaky_51/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_53/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv_53/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0883883461356163
      }
    }
  }
}
node {
  name: "conv_53/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "conv_53/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_53/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1415261
    }
  }
}
node {
  name: "conv_53/random_uniform/sub"
  op: "Sub"
  input: "conv_53/random_uniform/max"
  input: "conv_53/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_53/random_uniform/mul"
  op: "Mul"
  input: "conv_53/random_uniform/RandomUniform"
  input: "conv_53/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_53/random_uniform"
  op: "Add"
  input: "conv_53/random_uniform/mul"
  input: "conv_53/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_53/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_53/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_53/kernel"
    }
  }
}
node {
  name: "conv_53/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_53/kernel"
}
node {
  name: "conv_53/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_53/kernel"
  input: "conv_53/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_53/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_53/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_53/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_53/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_53/convolution"
  op: "Conv2D"
  input: "add_16/add"
  input: "conv_53/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_53/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_53/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_53/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_53/gamma"
    }
  }
}
node {
  name: "bnorm_53/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_53/gamma"
}
node {
  name: "bnorm_53/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_53/gamma"
  input: "bnorm_53/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_53/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_53/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_53/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_53/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_53/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_53/beta"
    }
  }
}
node {
  name: "bnorm_53/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_53/beta"
}
node {
  name: "bnorm_53/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_53/beta"
  input: "bnorm_53/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_53/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_53/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_53/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_53/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_53/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_53/moving_mean"
    }
  }
}
node {
  name: "bnorm_53/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_53/moving_mean"
}
node {
  name: "bnorm_53/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_53/moving_mean"
  input: "bnorm_53/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_53/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_53/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_53/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_53/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_53/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_53/moving_variance"
    }
  }
}
node {
  name: "bnorm_53/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_53/moving_variance"
}
node {
  name: "bnorm_53/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_53/moving_variance"
  input: "bnorm_53/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_53/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_53/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_53/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_53/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_53/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_53/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_53/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_53/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_53/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_53/convolution"
  input: "bnorm_53/ReadVariableOp"
  input: "bnorm_53/ReadVariableOp_1"
  input: "bnorm_53/Const_4"
  input: "bnorm_53/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_53/Shape"
  op: "Shape"
  input: "conv_53/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_53/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_53/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_53/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_53/strided_slice"
  op: "StridedSlice"
  input: "bnorm_53/Shape"
  input: "bnorm_53/strided_slice/stack"
  input: "bnorm_53/strided_slice/stack_1"
  input: "bnorm_53/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_53/Shape_1"
  op: "Shape"
  input: "conv_53/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_53/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_53/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_53/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_53/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_53/Shape_1"
  input: "bnorm_53/strided_slice_1/stack"
  input: "bnorm_53/strided_slice_1/stack_1"
  input: "bnorm_53/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_53/Shape_2"
  op: "Shape"
  input: "conv_53/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_53/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_53/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_53/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_53/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_53/Shape_2"
  input: "bnorm_53/strided_slice_2/stack"
  input: "bnorm_53/strided_slice_2/stack_1"
  input: "bnorm_53/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_53/Rank/packed"
  op: "Pack"
  input: "bnorm_53/strided_slice"
  input: "bnorm_53/strided_slice_1"
  input: "bnorm_53/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_53/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_53/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_53/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_53/range"
  op: "Range"
  input: "bnorm_53/range/start"
  input: "bnorm_53/Rank"
  input: "bnorm_53/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_53/Prod/input"
  op: "Pack"
  input: "bnorm_53/strided_slice"
  input: "bnorm_53/strided_slice_1"
  input: "bnorm_53/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_53/Prod"
  op: "Prod"
  input: "bnorm_53/Prod/input"
  input: "bnorm_53/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_53/Cast"
  op: "Cast"
  input: "bnorm_53/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_53/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_53/sub"
  op: "Sub"
  input: "bnorm_53/Cast"
  input: "bnorm_53/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_53/truediv"
  op: "RealDiv"
  input: "bnorm_53/Cast"
  input: "bnorm_53/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_53/mul"
  op: "Mul"
  input: "bnorm_53/FusedBatchNormV3:2"
  input: "bnorm_53/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_53/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_53/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_53/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_53/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_53/sub_1"
  op: "Sub"
  input: "bnorm_53/ReadVariableOp_2"
  input: "bnorm_53/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_53/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_53/mul_1"
  op: "Mul"
  input: "bnorm_53/sub_1"
  input: "bnorm_53/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_53/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_53/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_53/moving_mean"
  input: "bnorm_53/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_53/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_53/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_53/moving_mean"
  input: "^bnorm_53/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_53/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_53/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_53/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_53/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_53/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_53/sub_2"
  op: "Sub"
  input: "bnorm_53/ReadVariableOp_4"
  input: "bnorm_53/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_53/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_53/mul_2"
  op: "Mul"
  input: "bnorm_53/sub_2"
  input: "bnorm_53/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_53/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_53/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_53/moving_variance"
  input: "bnorm_53/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_53/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_53/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_53/moving_variance"
  input: "^bnorm_53/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_53/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_53/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_53/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_53/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_53/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_53/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_53/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_53/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_53/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_53/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_53/convolution"
  input: "bnorm_53/ReadVariableOp_6"
  input: "bnorm_53/ReadVariableOp_7"
  input: "bnorm_53/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_53/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_53/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_53/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_54/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv_54/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02946278266608715
      }
    }
  }
}
node {
  name: "conv_54/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02946278266608715
      }
    }
  }
}
node {
  name: "conv_54/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_54/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3778142
    }
  }
}
node {
  name: "conv_54/random_uniform/sub"
  op: "Sub"
  input: "conv_54/random_uniform/max"
  input: "conv_54/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_54/random_uniform/mul"
  op: "Mul"
  input: "conv_54/random_uniform/RandomUniform"
  input: "conv_54/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_54/random_uniform"
  op: "Add"
  input: "conv_54/random_uniform/mul"
  input: "conv_54/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_54/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_54/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_54/kernel"
    }
  }
}
node {
  name: "conv_54/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_54/kernel"
}
node {
  name: "conv_54/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_54/kernel"
  input: "conv_54/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_54/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_54/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_54/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_54/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_54/convolution"
  op: "Conv2D"
  input: "leaky_53/LeakyRelu"
  input: "conv_54/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_54/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_54/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_54/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_54/gamma"
    }
  }
}
node {
  name: "bnorm_54/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_54/gamma"
}
node {
  name: "bnorm_54/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_54/gamma"
  input: "bnorm_54/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_54/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_54/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_54/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_54/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_54/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_54/beta"
    }
  }
}
node {
  name: "bnorm_54/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_54/beta"
}
node {
  name: "bnorm_54/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_54/beta"
  input: "bnorm_54/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_54/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_54/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_54/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_54/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_54/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_54/moving_mean"
    }
  }
}
node {
  name: "bnorm_54/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_54/moving_mean"
}
node {
  name: "bnorm_54/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_54/moving_mean"
  input: "bnorm_54/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_54/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_54/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_54/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_54/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_54/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_54/moving_variance"
    }
  }
}
node {
  name: "bnorm_54/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_54/moving_variance"
}
node {
  name: "bnorm_54/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_54/moving_variance"
  input: "bnorm_54/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_54/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_54/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_54/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_54/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_54/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_54/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_54/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_54/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_54/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_54/convolution"
  input: "bnorm_54/ReadVariableOp"
  input: "bnorm_54/ReadVariableOp_1"
  input: "bnorm_54/Const_4"
  input: "bnorm_54/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_54/Shape"
  op: "Shape"
  input: "conv_54/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_54/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_54/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_54/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_54/strided_slice"
  op: "StridedSlice"
  input: "bnorm_54/Shape"
  input: "bnorm_54/strided_slice/stack"
  input: "bnorm_54/strided_slice/stack_1"
  input: "bnorm_54/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_54/Shape_1"
  op: "Shape"
  input: "conv_54/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_54/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_54/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_54/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_54/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_54/Shape_1"
  input: "bnorm_54/strided_slice_1/stack"
  input: "bnorm_54/strided_slice_1/stack_1"
  input: "bnorm_54/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_54/Shape_2"
  op: "Shape"
  input: "conv_54/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_54/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_54/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_54/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_54/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_54/Shape_2"
  input: "bnorm_54/strided_slice_2/stack"
  input: "bnorm_54/strided_slice_2/stack_1"
  input: "bnorm_54/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_54/Rank/packed"
  op: "Pack"
  input: "bnorm_54/strided_slice"
  input: "bnorm_54/strided_slice_1"
  input: "bnorm_54/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_54/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_54/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_54/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_54/range"
  op: "Range"
  input: "bnorm_54/range/start"
  input: "bnorm_54/Rank"
  input: "bnorm_54/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_54/Prod/input"
  op: "Pack"
  input: "bnorm_54/strided_slice"
  input: "bnorm_54/strided_slice_1"
  input: "bnorm_54/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_54/Prod"
  op: "Prod"
  input: "bnorm_54/Prod/input"
  input: "bnorm_54/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_54/Cast"
  op: "Cast"
  input: "bnorm_54/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_54/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_54/sub"
  op: "Sub"
  input: "bnorm_54/Cast"
  input: "bnorm_54/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_54/truediv"
  op: "RealDiv"
  input: "bnorm_54/Cast"
  input: "bnorm_54/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_54/mul"
  op: "Mul"
  input: "bnorm_54/FusedBatchNormV3:2"
  input: "bnorm_54/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_54/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_54/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_54/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_54/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_54/sub_1"
  op: "Sub"
  input: "bnorm_54/ReadVariableOp_2"
  input: "bnorm_54/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_54/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_54/mul_1"
  op: "Mul"
  input: "bnorm_54/sub_1"
  input: "bnorm_54/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_54/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_54/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_54/moving_mean"
  input: "bnorm_54/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_54/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_54/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_54/moving_mean"
  input: "^bnorm_54/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_54/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_54/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_54/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_54/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_54/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_54/sub_2"
  op: "Sub"
  input: "bnorm_54/ReadVariableOp_4"
  input: "bnorm_54/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_54/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_54/mul_2"
  op: "Mul"
  input: "bnorm_54/sub_2"
  input: "bnorm_54/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_54/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_54/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_54/moving_variance"
  input: "bnorm_54/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_54/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_54/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_54/moving_variance"
  input: "^bnorm_54/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_54/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_54/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_54/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_54/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_54/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_54/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_54/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_54/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_54/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_54/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_54/convolution"
  input: "bnorm_54/ReadVariableOp_6"
  input: "bnorm_54/ReadVariableOp_7"
  input: "bnorm_54/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_54/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_54/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_54/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "add_17/add"
  op: "AddV2"
  input: "add_16/add"
  input: "leaky_54/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_56/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv_56/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0883883461356163
      }
    }
  }
}
node {
  name: "conv_56/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "conv_56/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_56/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1400641
    }
  }
}
node {
  name: "conv_56/random_uniform/sub"
  op: "Sub"
  input: "conv_56/random_uniform/max"
  input: "conv_56/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_56/random_uniform/mul"
  op: "Mul"
  input: "conv_56/random_uniform/RandomUniform"
  input: "conv_56/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_56/random_uniform"
  op: "Add"
  input: "conv_56/random_uniform/mul"
  input: "conv_56/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_56/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_56/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_56/kernel"
    }
  }
}
node {
  name: "conv_56/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_56/kernel"
}
node {
  name: "conv_56/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_56/kernel"
  input: "conv_56/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_56/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_56/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_56/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_56/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_56/convolution"
  op: "Conv2D"
  input: "add_17/add"
  input: "conv_56/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_56/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_56/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_56/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_56/gamma"
    }
  }
}
node {
  name: "bnorm_56/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_56/gamma"
}
node {
  name: "bnorm_56/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_56/gamma"
  input: "bnorm_56/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_56/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_56/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_56/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_56/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_56/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_56/beta"
    }
  }
}
node {
  name: "bnorm_56/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_56/beta"
}
node {
  name: "bnorm_56/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_56/beta"
  input: "bnorm_56/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_56/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_56/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_56/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_56/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_56/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_56/moving_mean"
    }
  }
}
node {
  name: "bnorm_56/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_56/moving_mean"
}
node {
  name: "bnorm_56/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_56/moving_mean"
  input: "bnorm_56/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_56/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_56/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_56/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_56/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_56/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_56/moving_variance"
    }
  }
}
node {
  name: "bnorm_56/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_56/moving_variance"
}
node {
  name: "bnorm_56/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_56/moving_variance"
  input: "bnorm_56/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_56/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_56/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_56/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_56/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_56/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_56/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_56/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_56/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_56/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_56/convolution"
  input: "bnorm_56/ReadVariableOp"
  input: "bnorm_56/ReadVariableOp_1"
  input: "bnorm_56/Const_4"
  input: "bnorm_56/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_56/Shape"
  op: "Shape"
  input: "conv_56/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_56/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_56/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_56/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_56/strided_slice"
  op: "StridedSlice"
  input: "bnorm_56/Shape"
  input: "bnorm_56/strided_slice/stack"
  input: "bnorm_56/strided_slice/stack_1"
  input: "bnorm_56/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_56/Shape_1"
  op: "Shape"
  input: "conv_56/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_56/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_56/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_56/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_56/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_56/Shape_1"
  input: "bnorm_56/strided_slice_1/stack"
  input: "bnorm_56/strided_slice_1/stack_1"
  input: "bnorm_56/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_56/Shape_2"
  op: "Shape"
  input: "conv_56/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_56/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_56/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_56/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_56/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_56/Shape_2"
  input: "bnorm_56/strided_slice_2/stack"
  input: "bnorm_56/strided_slice_2/stack_1"
  input: "bnorm_56/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_56/Rank/packed"
  op: "Pack"
  input: "bnorm_56/strided_slice"
  input: "bnorm_56/strided_slice_1"
  input: "bnorm_56/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_56/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_56/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_56/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_56/range"
  op: "Range"
  input: "bnorm_56/range/start"
  input: "bnorm_56/Rank"
  input: "bnorm_56/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_56/Prod/input"
  op: "Pack"
  input: "bnorm_56/strided_slice"
  input: "bnorm_56/strided_slice_1"
  input: "bnorm_56/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_56/Prod"
  op: "Prod"
  input: "bnorm_56/Prod/input"
  input: "bnorm_56/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_56/Cast"
  op: "Cast"
  input: "bnorm_56/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_56/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_56/sub"
  op: "Sub"
  input: "bnorm_56/Cast"
  input: "bnorm_56/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_56/truediv"
  op: "RealDiv"
  input: "bnorm_56/Cast"
  input: "bnorm_56/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_56/mul"
  op: "Mul"
  input: "bnorm_56/FusedBatchNormV3:2"
  input: "bnorm_56/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_56/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_56/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_56/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_56/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_56/sub_1"
  op: "Sub"
  input: "bnorm_56/ReadVariableOp_2"
  input: "bnorm_56/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_56/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_56/mul_1"
  op: "Mul"
  input: "bnorm_56/sub_1"
  input: "bnorm_56/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_56/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_56/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_56/moving_mean"
  input: "bnorm_56/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_56/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_56/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_56/moving_mean"
  input: "^bnorm_56/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_56/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_56/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_56/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_56/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_56/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_56/sub_2"
  op: "Sub"
  input: "bnorm_56/ReadVariableOp_4"
  input: "bnorm_56/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_56/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_56/mul_2"
  op: "Mul"
  input: "bnorm_56/sub_2"
  input: "bnorm_56/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_56/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_56/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_56/moving_variance"
  input: "bnorm_56/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_56/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_56/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_56/moving_variance"
  input: "^bnorm_56/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_56/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_56/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_56/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_56/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_56/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_56/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_56/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_56/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_56/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_56/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_56/convolution"
  input: "bnorm_56/ReadVariableOp_6"
  input: "bnorm_56/ReadVariableOp_7"
  input: "bnorm_56/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_56/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_56/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_56/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_57/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv_57/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02946278266608715
      }
    }
  }
}
node {
  name: "conv_57/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02946278266608715
      }
    }
  }
}
node {
  name: "conv_57/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_57/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5775968
    }
  }
}
node {
  name: "conv_57/random_uniform/sub"
  op: "Sub"
  input: "conv_57/random_uniform/max"
  input: "conv_57/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_57/random_uniform/mul"
  op: "Mul"
  input: "conv_57/random_uniform/RandomUniform"
  input: "conv_57/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_57/random_uniform"
  op: "Add"
  input: "conv_57/random_uniform/mul"
  input: "conv_57/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_57/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_57/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_57/kernel"
    }
  }
}
node {
  name: "conv_57/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_57/kernel"
}
node {
  name: "conv_57/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_57/kernel"
  input: "conv_57/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_57/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_57/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_57/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_57/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_57/convolution"
  op: "Conv2D"
  input: "leaky_56/LeakyRelu"
  input: "conv_57/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_57/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_57/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_57/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_57/gamma"
    }
  }
}
node {
  name: "bnorm_57/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_57/gamma"
}
node {
  name: "bnorm_57/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_57/gamma"
  input: "bnorm_57/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_57/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_57/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_57/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_57/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_57/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_57/beta"
    }
  }
}
node {
  name: "bnorm_57/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_57/beta"
}
node {
  name: "bnorm_57/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_57/beta"
  input: "bnorm_57/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_57/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_57/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_57/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_57/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_57/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_57/moving_mean"
    }
  }
}
node {
  name: "bnorm_57/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_57/moving_mean"
}
node {
  name: "bnorm_57/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_57/moving_mean"
  input: "bnorm_57/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_57/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_57/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_57/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_57/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_57/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_57/moving_variance"
    }
  }
}
node {
  name: "bnorm_57/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_57/moving_variance"
}
node {
  name: "bnorm_57/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_57/moving_variance"
  input: "bnorm_57/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_57/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_57/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_57/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_57/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_57/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_57/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_57/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_57/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_57/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_57/convolution"
  input: "bnorm_57/ReadVariableOp"
  input: "bnorm_57/ReadVariableOp_1"
  input: "bnorm_57/Const_4"
  input: "bnorm_57/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_57/Shape"
  op: "Shape"
  input: "conv_57/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_57/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_57/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_57/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_57/strided_slice"
  op: "StridedSlice"
  input: "bnorm_57/Shape"
  input: "bnorm_57/strided_slice/stack"
  input: "bnorm_57/strided_slice/stack_1"
  input: "bnorm_57/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_57/Shape_1"
  op: "Shape"
  input: "conv_57/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_57/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_57/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_57/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_57/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_57/Shape_1"
  input: "bnorm_57/strided_slice_1/stack"
  input: "bnorm_57/strided_slice_1/stack_1"
  input: "bnorm_57/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_57/Shape_2"
  op: "Shape"
  input: "conv_57/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_57/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_57/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_57/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_57/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_57/Shape_2"
  input: "bnorm_57/strided_slice_2/stack"
  input: "bnorm_57/strided_slice_2/stack_1"
  input: "bnorm_57/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_57/Rank/packed"
  op: "Pack"
  input: "bnorm_57/strided_slice"
  input: "bnorm_57/strided_slice_1"
  input: "bnorm_57/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_57/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_57/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_57/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_57/range"
  op: "Range"
  input: "bnorm_57/range/start"
  input: "bnorm_57/Rank"
  input: "bnorm_57/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_57/Prod/input"
  op: "Pack"
  input: "bnorm_57/strided_slice"
  input: "bnorm_57/strided_slice_1"
  input: "bnorm_57/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_57/Prod"
  op: "Prod"
  input: "bnorm_57/Prod/input"
  input: "bnorm_57/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_57/Cast"
  op: "Cast"
  input: "bnorm_57/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_57/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_57/sub"
  op: "Sub"
  input: "bnorm_57/Cast"
  input: "bnorm_57/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_57/truediv"
  op: "RealDiv"
  input: "bnorm_57/Cast"
  input: "bnorm_57/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_57/mul"
  op: "Mul"
  input: "bnorm_57/FusedBatchNormV3:2"
  input: "bnorm_57/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_57/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_57/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_57/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_57/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_57/sub_1"
  op: "Sub"
  input: "bnorm_57/ReadVariableOp_2"
  input: "bnorm_57/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_57/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_57/mul_1"
  op: "Mul"
  input: "bnorm_57/sub_1"
  input: "bnorm_57/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_57/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_57/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_57/moving_mean"
  input: "bnorm_57/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_57/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_57/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_57/moving_mean"
  input: "^bnorm_57/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_57/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_57/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_57/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_57/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_57/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_57/sub_2"
  op: "Sub"
  input: "bnorm_57/ReadVariableOp_4"
  input: "bnorm_57/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_57/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_57/mul_2"
  op: "Mul"
  input: "bnorm_57/sub_2"
  input: "bnorm_57/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_57/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_57/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_57/moving_variance"
  input: "bnorm_57/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_57/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_57/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_57/moving_variance"
  input: "^bnorm_57/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_57/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_57/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_57/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_57/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_57/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_57/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_57/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_57/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_57/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_57/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_57/convolution"
  input: "bnorm_57/ReadVariableOp_6"
  input: "bnorm_57/ReadVariableOp_7"
  input: "bnorm_57/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_57/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_57/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_57/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "add_18/add"
  op: "AddV2"
  input: "add_17/add"
  input: "leaky_57/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_59/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv_59/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0883883461356163
      }
    }
  }
}
node {
  name: "conv_59/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "conv_59/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_59/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2071857
    }
  }
}
node {
  name: "conv_59/random_uniform/sub"
  op: "Sub"
  input: "conv_59/random_uniform/max"
  input: "conv_59/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_59/random_uniform/mul"
  op: "Mul"
  input: "conv_59/random_uniform/RandomUniform"
  input: "conv_59/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_59/random_uniform"
  op: "Add"
  input: "conv_59/random_uniform/mul"
  input: "conv_59/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_59/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_59/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_59/kernel"
    }
  }
}
node {
  name: "conv_59/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_59/kernel"
}
node {
  name: "conv_59/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_59/kernel"
  input: "conv_59/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_59/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_59/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_59/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_59/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_59/convolution"
  op: "Conv2D"
  input: "add_18/add"
  input: "conv_59/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_59/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_59/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_59/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_59/gamma"
    }
  }
}
node {
  name: "bnorm_59/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_59/gamma"
}
node {
  name: "bnorm_59/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_59/gamma"
  input: "bnorm_59/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_59/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_59/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_59/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_59/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_59/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_59/beta"
    }
  }
}
node {
  name: "bnorm_59/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_59/beta"
}
node {
  name: "bnorm_59/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_59/beta"
  input: "bnorm_59/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_59/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_59/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_59/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_59/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_59/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_59/moving_mean"
    }
  }
}
node {
  name: "bnorm_59/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_59/moving_mean"
}
node {
  name: "bnorm_59/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_59/moving_mean"
  input: "bnorm_59/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_59/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_59/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_59/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_59/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_59/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_59/moving_variance"
    }
  }
}
node {
  name: "bnorm_59/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_59/moving_variance"
}
node {
  name: "bnorm_59/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_59/moving_variance"
  input: "bnorm_59/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_59/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_59/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_59/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_59/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_59/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_59/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_59/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_59/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_59/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_59/convolution"
  input: "bnorm_59/ReadVariableOp"
  input: "bnorm_59/ReadVariableOp_1"
  input: "bnorm_59/Const_4"
  input: "bnorm_59/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_59/Shape"
  op: "Shape"
  input: "conv_59/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_59/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_59/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_59/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_59/strided_slice"
  op: "StridedSlice"
  input: "bnorm_59/Shape"
  input: "bnorm_59/strided_slice/stack"
  input: "bnorm_59/strided_slice/stack_1"
  input: "bnorm_59/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_59/Shape_1"
  op: "Shape"
  input: "conv_59/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_59/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_59/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_59/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_59/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_59/Shape_1"
  input: "bnorm_59/strided_slice_1/stack"
  input: "bnorm_59/strided_slice_1/stack_1"
  input: "bnorm_59/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_59/Shape_2"
  op: "Shape"
  input: "conv_59/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_59/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_59/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_59/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_59/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_59/Shape_2"
  input: "bnorm_59/strided_slice_2/stack"
  input: "bnorm_59/strided_slice_2/stack_1"
  input: "bnorm_59/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_59/Rank/packed"
  op: "Pack"
  input: "bnorm_59/strided_slice"
  input: "bnorm_59/strided_slice_1"
  input: "bnorm_59/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_59/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_59/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_59/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_59/range"
  op: "Range"
  input: "bnorm_59/range/start"
  input: "bnorm_59/Rank"
  input: "bnorm_59/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_59/Prod/input"
  op: "Pack"
  input: "bnorm_59/strided_slice"
  input: "bnorm_59/strided_slice_1"
  input: "bnorm_59/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_59/Prod"
  op: "Prod"
  input: "bnorm_59/Prod/input"
  input: "bnorm_59/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_59/Cast"
  op: "Cast"
  input: "bnorm_59/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_59/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_59/sub"
  op: "Sub"
  input: "bnorm_59/Cast"
  input: "bnorm_59/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_59/truediv"
  op: "RealDiv"
  input: "bnorm_59/Cast"
  input: "bnorm_59/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_59/mul"
  op: "Mul"
  input: "bnorm_59/FusedBatchNormV3:2"
  input: "bnorm_59/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_59/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_59/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_59/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_59/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_59/sub_1"
  op: "Sub"
  input: "bnorm_59/ReadVariableOp_2"
  input: "bnorm_59/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_59/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_59/mul_1"
  op: "Mul"
  input: "bnorm_59/sub_1"
  input: "bnorm_59/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_59/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_59/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_59/moving_mean"
  input: "bnorm_59/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_59/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_59/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_59/moving_mean"
  input: "^bnorm_59/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_59/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_59/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_59/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_59/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_59/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_59/sub_2"
  op: "Sub"
  input: "bnorm_59/ReadVariableOp_4"
  input: "bnorm_59/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_59/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_59/mul_2"
  op: "Mul"
  input: "bnorm_59/sub_2"
  input: "bnorm_59/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_59/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_59/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_59/moving_variance"
  input: "bnorm_59/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_59/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_59/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_59/moving_variance"
  input: "^bnorm_59/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_59/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_59/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_59/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_59/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_59/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_59/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_59/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_59/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_59/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_59/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_59/convolution"
  input: "bnorm_59/ReadVariableOp_6"
  input: "bnorm_59/ReadVariableOp_7"
  input: "bnorm_59/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_59/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_59/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_59/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_60/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv_60/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02946278266608715
      }
    }
  }
}
node {
  name: "conv_60/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02946278266608715
      }
    }
  }
}
node {
  name: "conv_60/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_60/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 428723
    }
  }
}
node {
  name: "conv_60/random_uniform/sub"
  op: "Sub"
  input: "conv_60/random_uniform/max"
  input: "conv_60/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_60/random_uniform/mul"
  op: "Mul"
  input: "conv_60/random_uniform/RandomUniform"
  input: "conv_60/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_60/random_uniform"
  op: "Add"
  input: "conv_60/random_uniform/mul"
  input: "conv_60/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_60/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_60/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_60/kernel"
    }
  }
}
node {
  name: "conv_60/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_60/kernel"
}
node {
  name: "conv_60/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_60/kernel"
  input: "conv_60/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_60/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_60/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_60/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_60/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_60/convolution"
  op: "Conv2D"
  input: "leaky_59/LeakyRelu"
  input: "conv_60/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_60/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_60/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_60/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_60/gamma"
    }
  }
}
node {
  name: "bnorm_60/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_60/gamma"
}
node {
  name: "bnorm_60/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_60/gamma"
  input: "bnorm_60/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_60/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_60/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_60/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_60/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_60/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_60/beta"
    }
  }
}
node {
  name: "bnorm_60/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_60/beta"
}
node {
  name: "bnorm_60/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_60/beta"
  input: "bnorm_60/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_60/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_60/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_60/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_60/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_60/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_60/moving_mean"
    }
  }
}
node {
  name: "bnorm_60/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_60/moving_mean"
}
node {
  name: "bnorm_60/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_60/moving_mean"
  input: "bnorm_60/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_60/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_60/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_60/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_60/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_60/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_60/moving_variance"
    }
  }
}
node {
  name: "bnorm_60/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_60/moving_variance"
}
node {
  name: "bnorm_60/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_60/moving_variance"
  input: "bnorm_60/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_60/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_60/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_60/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_60/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_60/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_60/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_60/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_60/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_60/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_60/convolution"
  input: "bnorm_60/ReadVariableOp"
  input: "bnorm_60/ReadVariableOp_1"
  input: "bnorm_60/Const_4"
  input: "bnorm_60/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_60/Shape"
  op: "Shape"
  input: "conv_60/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_60/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_60/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_60/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_60/strided_slice"
  op: "StridedSlice"
  input: "bnorm_60/Shape"
  input: "bnorm_60/strided_slice/stack"
  input: "bnorm_60/strided_slice/stack_1"
  input: "bnorm_60/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_60/Shape_1"
  op: "Shape"
  input: "conv_60/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_60/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_60/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_60/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_60/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_60/Shape_1"
  input: "bnorm_60/strided_slice_1/stack"
  input: "bnorm_60/strided_slice_1/stack_1"
  input: "bnorm_60/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_60/Shape_2"
  op: "Shape"
  input: "conv_60/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_60/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_60/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_60/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_60/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_60/Shape_2"
  input: "bnorm_60/strided_slice_2/stack"
  input: "bnorm_60/strided_slice_2/stack_1"
  input: "bnorm_60/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_60/Rank/packed"
  op: "Pack"
  input: "bnorm_60/strided_slice"
  input: "bnorm_60/strided_slice_1"
  input: "bnorm_60/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_60/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_60/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_60/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_60/range"
  op: "Range"
  input: "bnorm_60/range/start"
  input: "bnorm_60/Rank"
  input: "bnorm_60/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_60/Prod/input"
  op: "Pack"
  input: "bnorm_60/strided_slice"
  input: "bnorm_60/strided_slice_1"
  input: "bnorm_60/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_60/Prod"
  op: "Prod"
  input: "bnorm_60/Prod/input"
  input: "bnorm_60/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_60/Cast"
  op: "Cast"
  input: "bnorm_60/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_60/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_60/sub"
  op: "Sub"
  input: "bnorm_60/Cast"
  input: "bnorm_60/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_60/truediv"
  op: "RealDiv"
  input: "bnorm_60/Cast"
  input: "bnorm_60/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_60/mul"
  op: "Mul"
  input: "bnorm_60/FusedBatchNormV3:2"
  input: "bnorm_60/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_60/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_60/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_60/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_60/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_60/sub_1"
  op: "Sub"
  input: "bnorm_60/ReadVariableOp_2"
  input: "bnorm_60/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_60/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_60/mul_1"
  op: "Mul"
  input: "bnorm_60/sub_1"
  input: "bnorm_60/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_60/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_60/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_60/moving_mean"
  input: "bnorm_60/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_60/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_60/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_60/moving_mean"
  input: "^bnorm_60/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_60/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_60/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_60/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_60/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_60/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_60/sub_2"
  op: "Sub"
  input: "bnorm_60/ReadVariableOp_4"
  input: "bnorm_60/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_60/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_60/mul_2"
  op: "Mul"
  input: "bnorm_60/sub_2"
  input: "bnorm_60/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_60/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_60/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_60/moving_variance"
  input: "bnorm_60/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_60/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_60/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_60/moving_variance"
  input: "^bnorm_60/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_60/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_60/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_60/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_60/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_60/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_60/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_60/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_60/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_60/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_60/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_60/convolution"
  input: "bnorm_60/ReadVariableOp_6"
  input: "bnorm_60/ReadVariableOp_7"
  input: "bnorm_60/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_60/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_60/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_60/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "add_19/add"
  op: "AddV2"
  input: "add_18/add"
  input: "leaky_60/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_padding2d_5/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "zero_padding2d_5/Pad"
  op: "Pad"
  input: "add_19/add"
  input: "zero_padding2d_5/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_62/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "conv_62/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02083333395421505
      }
    }
  }
}
node {
  name: "conv_62/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02083333395421505
      }
    }
  }
}
node {
  name: "conv_62/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_62/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9251108
    }
  }
}
node {
  name: "conv_62/random_uniform/sub"
  op: "Sub"
  input: "conv_62/random_uniform/max"
  input: "conv_62/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_62/random_uniform/mul"
  op: "Mul"
  input: "conv_62/random_uniform/RandomUniform"
  input: "conv_62/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_62/random_uniform"
  op: "Add"
  input: "conv_62/random_uniform/mul"
  input: "conv_62/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_62/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_62/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_62/kernel"
    }
  }
}
node {
  name: "conv_62/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_62/kernel"
}
node {
  name: "conv_62/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_62/kernel"
  input: "conv_62/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_62/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_62/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_62/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_62/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_62/convolution"
  op: "Conv2D"
  input: "zero_padding2d_5/Pad"
  input: "conv_62/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_62/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_62/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_62/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_62/gamma"
    }
  }
}
node {
  name: "bnorm_62/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_62/gamma"
}
node {
  name: "bnorm_62/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_62/gamma"
  input: "bnorm_62/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_62/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_62/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_62/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_62/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_62/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_62/beta"
    }
  }
}
node {
  name: "bnorm_62/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_62/beta"
}
node {
  name: "bnorm_62/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_62/beta"
  input: "bnorm_62/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_62/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_62/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_62/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_62/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_62/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_62/moving_mean"
    }
  }
}
node {
  name: "bnorm_62/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_62/moving_mean"
}
node {
  name: "bnorm_62/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_62/moving_mean"
  input: "bnorm_62/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_62/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_62/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_62/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_62/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_62/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_62/moving_variance"
    }
  }
}
node {
  name: "bnorm_62/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_62/moving_variance"
}
node {
  name: "bnorm_62/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_62/moving_variance"
  input: "bnorm_62/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_62/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_62/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_62/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_62/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_62/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_62/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_62/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_62/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_62/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_62/convolution"
  input: "bnorm_62/ReadVariableOp"
  input: "bnorm_62/ReadVariableOp_1"
  input: "bnorm_62/Const_4"
  input: "bnorm_62/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_62/Shape"
  op: "Shape"
  input: "conv_62/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_62/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_62/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_62/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_62/strided_slice"
  op: "StridedSlice"
  input: "bnorm_62/Shape"
  input: "bnorm_62/strided_slice/stack"
  input: "bnorm_62/strided_slice/stack_1"
  input: "bnorm_62/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_62/Shape_1"
  op: "Shape"
  input: "conv_62/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_62/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_62/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_62/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_62/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_62/Shape_1"
  input: "bnorm_62/strided_slice_1/stack"
  input: "bnorm_62/strided_slice_1/stack_1"
  input: "bnorm_62/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_62/Shape_2"
  op: "Shape"
  input: "conv_62/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_62/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_62/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_62/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_62/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_62/Shape_2"
  input: "bnorm_62/strided_slice_2/stack"
  input: "bnorm_62/strided_slice_2/stack_1"
  input: "bnorm_62/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_62/Rank/packed"
  op: "Pack"
  input: "bnorm_62/strided_slice"
  input: "bnorm_62/strided_slice_1"
  input: "bnorm_62/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_62/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_62/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_62/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_62/range"
  op: "Range"
  input: "bnorm_62/range/start"
  input: "bnorm_62/Rank"
  input: "bnorm_62/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_62/Prod/input"
  op: "Pack"
  input: "bnorm_62/strided_slice"
  input: "bnorm_62/strided_slice_1"
  input: "bnorm_62/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_62/Prod"
  op: "Prod"
  input: "bnorm_62/Prod/input"
  input: "bnorm_62/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_62/Cast"
  op: "Cast"
  input: "bnorm_62/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_62/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_62/sub"
  op: "Sub"
  input: "bnorm_62/Cast"
  input: "bnorm_62/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_62/truediv"
  op: "RealDiv"
  input: "bnorm_62/Cast"
  input: "bnorm_62/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_62/mul"
  op: "Mul"
  input: "bnorm_62/FusedBatchNormV3:2"
  input: "bnorm_62/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_62/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_62/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_62/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_62/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_62/sub_1"
  op: "Sub"
  input: "bnorm_62/ReadVariableOp_2"
  input: "bnorm_62/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_62/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_62/mul_1"
  op: "Mul"
  input: "bnorm_62/sub_1"
  input: "bnorm_62/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_62/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_62/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_62/moving_mean"
  input: "bnorm_62/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_62/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_62/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_62/moving_mean"
  input: "^bnorm_62/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_62/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_62/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_62/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_62/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_62/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_62/sub_2"
  op: "Sub"
  input: "bnorm_62/ReadVariableOp_4"
  input: "bnorm_62/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_62/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_62/mul_2"
  op: "Mul"
  input: "bnorm_62/sub_2"
  input: "bnorm_62/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_62/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_62/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_62/moving_variance"
  input: "bnorm_62/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_62/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_62/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_62/moving_variance"
  input: "^bnorm_62/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_62/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_62/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_62/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_62/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_62/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_62/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_62/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_62/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_62/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_62/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_62/convolution"
  input: "bnorm_62/ReadVariableOp_6"
  input: "bnorm_62/ReadVariableOp_7"
  input: "bnorm_62/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_62/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_62/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_62/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_63/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv_63/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0625
      }
    }
  }
}
node {
  name: "conv_63/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0625
      }
    }
  }
}
node {
  name: "conv_63/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_63/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8091174
    }
  }
}
node {
  name: "conv_63/random_uniform/sub"
  op: "Sub"
  input: "conv_63/random_uniform/max"
  input: "conv_63/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_63/random_uniform/mul"
  op: "Mul"
  input: "conv_63/random_uniform/RandomUniform"
  input: "conv_63/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_63/random_uniform"
  op: "Add"
  input: "conv_63/random_uniform/mul"
  input: "conv_63/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_63/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_63/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_63/kernel"
    }
  }
}
node {
  name: "conv_63/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_63/kernel"
}
node {
  name: "conv_63/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_63/kernel"
  input: "conv_63/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_63/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_63/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_63/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_63/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_63/convolution"
  op: "Conv2D"
  input: "leaky_62/LeakyRelu"
  input: "conv_63/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_63/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_63/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_63/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_63/gamma"
    }
  }
}
node {
  name: "bnorm_63/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_63/gamma"
}
node {
  name: "bnorm_63/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_63/gamma"
  input: "bnorm_63/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_63/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_63/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_63/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_63/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_63/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_63/beta"
    }
  }
}
node {
  name: "bnorm_63/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_63/beta"
}
node {
  name: "bnorm_63/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_63/beta"
  input: "bnorm_63/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_63/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_63/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_63/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_63/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_63/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_63/moving_mean"
    }
  }
}
node {
  name: "bnorm_63/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_63/moving_mean"
}
node {
  name: "bnorm_63/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_63/moving_mean"
  input: "bnorm_63/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_63/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_63/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_63/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_63/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_63/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_63/moving_variance"
    }
  }
}
node {
  name: "bnorm_63/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_63/moving_variance"
}
node {
  name: "bnorm_63/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_63/moving_variance"
  input: "bnorm_63/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_63/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_63/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_63/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_63/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_63/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_63/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_63/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_63/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_63/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_63/convolution"
  input: "bnorm_63/ReadVariableOp"
  input: "bnorm_63/ReadVariableOp_1"
  input: "bnorm_63/Const_4"
  input: "bnorm_63/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_63/Shape"
  op: "Shape"
  input: "conv_63/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_63/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_63/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_63/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_63/strided_slice"
  op: "StridedSlice"
  input: "bnorm_63/Shape"
  input: "bnorm_63/strided_slice/stack"
  input: "bnorm_63/strided_slice/stack_1"
  input: "bnorm_63/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_63/Shape_1"
  op: "Shape"
  input: "conv_63/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_63/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_63/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_63/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_63/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_63/Shape_1"
  input: "bnorm_63/strided_slice_1/stack"
  input: "bnorm_63/strided_slice_1/stack_1"
  input: "bnorm_63/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_63/Shape_2"
  op: "Shape"
  input: "conv_63/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_63/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_63/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_63/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_63/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_63/Shape_2"
  input: "bnorm_63/strided_slice_2/stack"
  input: "bnorm_63/strided_slice_2/stack_1"
  input: "bnorm_63/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_63/Rank/packed"
  op: "Pack"
  input: "bnorm_63/strided_slice"
  input: "bnorm_63/strided_slice_1"
  input: "bnorm_63/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_63/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_63/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_63/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_63/range"
  op: "Range"
  input: "bnorm_63/range/start"
  input: "bnorm_63/Rank"
  input: "bnorm_63/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_63/Prod/input"
  op: "Pack"
  input: "bnorm_63/strided_slice"
  input: "bnorm_63/strided_slice_1"
  input: "bnorm_63/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_63/Prod"
  op: "Prod"
  input: "bnorm_63/Prod/input"
  input: "bnorm_63/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_63/Cast"
  op: "Cast"
  input: "bnorm_63/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_63/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_63/sub"
  op: "Sub"
  input: "bnorm_63/Cast"
  input: "bnorm_63/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_63/truediv"
  op: "RealDiv"
  input: "bnorm_63/Cast"
  input: "bnorm_63/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_63/mul"
  op: "Mul"
  input: "bnorm_63/FusedBatchNormV3:2"
  input: "bnorm_63/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_63/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_63/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_63/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_63/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_63/sub_1"
  op: "Sub"
  input: "bnorm_63/ReadVariableOp_2"
  input: "bnorm_63/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_63/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_63/mul_1"
  op: "Mul"
  input: "bnorm_63/sub_1"
  input: "bnorm_63/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_63/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_63/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_63/moving_mean"
  input: "bnorm_63/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_63/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_63/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_63/moving_mean"
  input: "^bnorm_63/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_63/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_63/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_63/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_63/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_63/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_63/sub_2"
  op: "Sub"
  input: "bnorm_63/ReadVariableOp_4"
  input: "bnorm_63/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_63/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_63/mul_2"
  op: "Mul"
  input: "bnorm_63/sub_2"
  input: "bnorm_63/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_63/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_63/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_63/moving_variance"
  input: "bnorm_63/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_63/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_63/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_63/moving_variance"
  input: "^bnorm_63/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_63/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_63/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_63/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_63/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_63/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_63/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_63/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_63/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_63/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_63/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_63/convolution"
  input: "bnorm_63/ReadVariableOp_6"
  input: "bnorm_63/ReadVariableOp_7"
  input: "bnorm_63/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_63/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_63/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_63/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_64/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "conv_64/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02083333395421505
      }
    }
  }
}
node {
  name: "conv_64/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02083333395421505
      }
    }
  }
}
node {
  name: "conv_64/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_64/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4451246
    }
  }
}
node {
  name: "conv_64/random_uniform/sub"
  op: "Sub"
  input: "conv_64/random_uniform/max"
  input: "conv_64/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_64/random_uniform/mul"
  op: "Mul"
  input: "conv_64/random_uniform/RandomUniform"
  input: "conv_64/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_64/random_uniform"
  op: "Add"
  input: "conv_64/random_uniform/mul"
  input: "conv_64/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_64/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_64/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_64/kernel"
    }
  }
}
node {
  name: "conv_64/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_64/kernel"
}
node {
  name: "conv_64/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_64/kernel"
  input: "conv_64/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_64/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_64/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_64/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_64/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_64/convolution"
  op: "Conv2D"
  input: "leaky_63/LeakyRelu"
  input: "conv_64/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_64/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_64/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_64/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_64/gamma"
    }
  }
}
node {
  name: "bnorm_64/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_64/gamma"
}
node {
  name: "bnorm_64/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_64/gamma"
  input: "bnorm_64/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_64/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_64/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_64/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_64/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_64/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_64/beta"
    }
  }
}
node {
  name: "bnorm_64/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_64/beta"
}
node {
  name: "bnorm_64/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_64/beta"
  input: "bnorm_64/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_64/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_64/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_64/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_64/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_64/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_64/moving_mean"
    }
  }
}
node {
  name: "bnorm_64/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_64/moving_mean"
}
node {
  name: "bnorm_64/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_64/moving_mean"
  input: "bnorm_64/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_64/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_64/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_64/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_64/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_64/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_64/moving_variance"
    }
  }
}
node {
  name: "bnorm_64/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_64/moving_variance"
}
node {
  name: "bnorm_64/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_64/moving_variance"
  input: "bnorm_64/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_64/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_64/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_64/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_64/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_64/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_64/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_64/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_64/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_64/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_64/convolution"
  input: "bnorm_64/ReadVariableOp"
  input: "bnorm_64/ReadVariableOp_1"
  input: "bnorm_64/Const_4"
  input: "bnorm_64/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_64/Shape"
  op: "Shape"
  input: "conv_64/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_64/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_64/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_64/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_64/strided_slice"
  op: "StridedSlice"
  input: "bnorm_64/Shape"
  input: "bnorm_64/strided_slice/stack"
  input: "bnorm_64/strided_slice/stack_1"
  input: "bnorm_64/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_64/Shape_1"
  op: "Shape"
  input: "conv_64/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_64/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_64/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_64/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_64/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_64/Shape_1"
  input: "bnorm_64/strided_slice_1/stack"
  input: "bnorm_64/strided_slice_1/stack_1"
  input: "bnorm_64/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_64/Shape_2"
  op: "Shape"
  input: "conv_64/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_64/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_64/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_64/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_64/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_64/Shape_2"
  input: "bnorm_64/strided_slice_2/stack"
  input: "bnorm_64/strided_slice_2/stack_1"
  input: "bnorm_64/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_64/Rank/packed"
  op: "Pack"
  input: "bnorm_64/strided_slice"
  input: "bnorm_64/strided_slice_1"
  input: "bnorm_64/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_64/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_64/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_64/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_64/range"
  op: "Range"
  input: "bnorm_64/range/start"
  input: "bnorm_64/Rank"
  input: "bnorm_64/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_64/Prod/input"
  op: "Pack"
  input: "bnorm_64/strided_slice"
  input: "bnorm_64/strided_slice_1"
  input: "bnorm_64/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_64/Prod"
  op: "Prod"
  input: "bnorm_64/Prod/input"
  input: "bnorm_64/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_64/Cast"
  op: "Cast"
  input: "bnorm_64/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_64/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_64/sub"
  op: "Sub"
  input: "bnorm_64/Cast"
  input: "bnorm_64/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_64/truediv"
  op: "RealDiv"
  input: "bnorm_64/Cast"
  input: "bnorm_64/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_64/mul"
  op: "Mul"
  input: "bnorm_64/FusedBatchNormV3:2"
  input: "bnorm_64/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_64/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_64/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_64/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_64/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_64/sub_1"
  op: "Sub"
  input: "bnorm_64/ReadVariableOp_2"
  input: "bnorm_64/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_64/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_64/mul_1"
  op: "Mul"
  input: "bnorm_64/sub_1"
  input: "bnorm_64/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_64/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_64/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_64/moving_mean"
  input: "bnorm_64/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_64/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_64/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_64/moving_mean"
  input: "^bnorm_64/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_64/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_64/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_64/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_64/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_64/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_64/sub_2"
  op: "Sub"
  input: "bnorm_64/ReadVariableOp_4"
  input: "bnorm_64/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_64/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_64/mul_2"
  op: "Mul"
  input: "bnorm_64/sub_2"
  input: "bnorm_64/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_64/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_64/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_64/moving_variance"
  input: "bnorm_64/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_64/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_64/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_64/moving_variance"
  input: "^bnorm_64/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_64/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_64/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_64/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_64/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_64/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_64/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_64/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_64/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_64/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_64/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_64/convolution"
  input: "bnorm_64/ReadVariableOp_6"
  input: "bnorm_64/ReadVariableOp_7"
  input: "bnorm_64/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_64/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_64/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_64/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "add_20/add"
  op: "AddV2"
  input: "leaky_62/LeakyRelu"
  input: "leaky_64/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_66/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv_66/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0625
      }
    }
  }
}
node {
  name: "conv_66/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0625
      }
    }
  }
}
node {
  name: "conv_66/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_66/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5334856
    }
  }
}
node {
  name: "conv_66/random_uniform/sub"
  op: "Sub"
  input: "conv_66/random_uniform/max"
  input: "conv_66/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_66/random_uniform/mul"
  op: "Mul"
  input: "conv_66/random_uniform/RandomUniform"
  input: "conv_66/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_66/random_uniform"
  op: "Add"
  input: "conv_66/random_uniform/mul"
  input: "conv_66/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_66/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_66/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_66/kernel"
    }
  }
}
node {
  name: "conv_66/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_66/kernel"
}
node {
  name: "conv_66/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_66/kernel"
  input: "conv_66/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_66/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_66/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_66/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_66/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_66/convolution"
  op: "Conv2D"
  input: "add_20/add"
  input: "conv_66/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_66/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_66/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_66/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_66/gamma"
    }
  }
}
node {
  name: "bnorm_66/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_66/gamma"
}
node {
  name: "bnorm_66/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_66/gamma"
  input: "bnorm_66/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_66/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_66/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_66/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_66/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_66/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_66/beta"
    }
  }
}
node {
  name: "bnorm_66/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_66/beta"
}
node {
  name: "bnorm_66/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_66/beta"
  input: "bnorm_66/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_66/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_66/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_66/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_66/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_66/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_66/moving_mean"
    }
  }
}
node {
  name: "bnorm_66/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_66/moving_mean"
}
node {
  name: "bnorm_66/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_66/moving_mean"
  input: "bnorm_66/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_66/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_66/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_66/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_66/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_66/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_66/moving_variance"
    }
  }
}
node {
  name: "bnorm_66/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_66/moving_variance"
}
node {
  name: "bnorm_66/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_66/moving_variance"
  input: "bnorm_66/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_66/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_66/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_66/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_66/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_66/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_66/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_66/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_66/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_66/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_66/convolution"
  input: "bnorm_66/ReadVariableOp"
  input: "bnorm_66/ReadVariableOp_1"
  input: "bnorm_66/Const_4"
  input: "bnorm_66/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_66/Shape"
  op: "Shape"
  input: "conv_66/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_66/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_66/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_66/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_66/strided_slice"
  op: "StridedSlice"
  input: "bnorm_66/Shape"
  input: "bnorm_66/strided_slice/stack"
  input: "bnorm_66/strided_slice/stack_1"
  input: "bnorm_66/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_66/Shape_1"
  op: "Shape"
  input: "conv_66/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_66/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_66/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_66/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_66/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_66/Shape_1"
  input: "bnorm_66/strided_slice_1/stack"
  input: "bnorm_66/strided_slice_1/stack_1"
  input: "bnorm_66/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_66/Shape_2"
  op: "Shape"
  input: "conv_66/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_66/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_66/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_66/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_66/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_66/Shape_2"
  input: "bnorm_66/strided_slice_2/stack"
  input: "bnorm_66/strided_slice_2/stack_1"
  input: "bnorm_66/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_66/Rank/packed"
  op: "Pack"
  input: "bnorm_66/strided_slice"
  input: "bnorm_66/strided_slice_1"
  input: "bnorm_66/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_66/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_66/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_66/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_66/range"
  op: "Range"
  input: "bnorm_66/range/start"
  input: "bnorm_66/Rank"
  input: "bnorm_66/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_66/Prod/input"
  op: "Pack"
  input: "bnorm_66/strided_slice"
  input: "bnorm_66/strided_slice_1"
  input: "bnorm_66/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_66/Prod"
  op: "Prod"
  input: "bnorm_66/Prod/input"
  input: "bnorm_66/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_66/Cast"
  op: "Cast"
  input: "bnorm_66/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_66/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_66/sub"
  op: "Sub"
  input: "bnorm_66/Cast"
  input: "bnorm_66/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_66/truediv"
  op: "RealDiv"
  input: "bnorm_66/Cast"
  input: "bnorm_66/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_66/mul"
  op: "Mul"
  input: "bnorm_66/FusedBatchNormV3:2"
  input: "bnorm_66/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_66/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_66/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_66/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_66/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_66/sub_1"
  op: "Sub"
  input: "bnorm_66/ReadVariableOp_2"
  input: "bnorm_66/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_66/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_66/mul_1"
  op: "Mul"
  input: "bnorm_66/sub_1"
  input: "bnorm_66/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_66/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_66/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_66/moving_mean"
  input: "bnorm_66/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_66/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_66/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_66/moving_mean"
  input: "^bnorm_66/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_66/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_66/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_66/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_66/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_66/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_66/sub_2"
  op: "Sub"
  input: "bnorm_66/ReadVariableOp_4"
  input: "bnorm_66/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_66/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_66/mul_2"
  op: "Mul"
  input: "bnorm_66/sub_2"
  input: "bnorm_66/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_66/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_66/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_66/moving_variance"
  input: "bnorm_66/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_66/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_66/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_66/moving_variance"
  input: "^bnorm_66/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_66/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_66/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_66/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_66/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_66/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_66/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_66/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_66/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_66/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_66/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_66/convolution"
  input: "bnorm_66/ReadVariableOp_6"
  input: "bnorm_66/ReadVariableOp_7"
  input: "bnorm_66/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_66/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_66/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_66/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_67/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "conv_67/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02083333395421505
      }
    }
  }
}
node {
  name: "conv_67/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02083333395421505
      }
    }
  }
}
node {
  name: "conv_67/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_67/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7504192
    }
  }
}
node {
  name: "conv_67/random_uniform/sub"
  op: "Sub"
  input: "conv_67/random_uniform/max"
  input: "conv_67/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_67/random_uniform/mul"
  op: "Mul"
  input: "conv_67/random_uniform/RandomUniform"
  input: "conv_67/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_67/random_uniform"
  op: "Add"
  input: "conv_67/random_uniform/mul"
  input: "conv_67/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_67/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_67/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_67/kernel"
    }
  }
}
node {
  name: "conv_67/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_67/kernel"
}
node {
  name: "conv_67/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_67/kernel"
  input: "conv_67/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_67/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_67/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_67/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_67/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_67/convolution"
  op: "Conv2D"
  input: "leaky_66/LeakyRelu"
  input: "conv_67/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_67/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_67/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_67/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_67/gamma"
    }
  }
}
node {
  name: "bnorm_67/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_67/gamma"
}
node {
  name: "bnorm_67/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_67/gamma"
  input: "bnorm_67/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_67/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_67/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_67/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_67/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_67/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_67/beta"
    }
  }
}
node {
  name: "bnorm_67/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_67/beta"
}
node {
  name: "bnorm_67/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_67/beta"
  input: "bnorm_67/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_67/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_67/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_67/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_67/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_67/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_67/moving_mean"
    }
  }
}
node {
  name: "bnorm_67/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_67/moving_mean"
}
node {
  name: "bnorm_67/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_67/moving_mean"
  input: "bnorm_67/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_67/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_67/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_67/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_67/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_67/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_67/moving_variance"
    }
  }
}
node {
  name: "bnorm_67/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_67/moving_variance"
}
node {
  name: "bnorm_67/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_67/moving_variance"
  input: "bnorm_67/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_67/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_67/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_67/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_67/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_67/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_67/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_67/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_67/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_67/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_67/convolution"
  input: "bnorm_67/ReadVariableOp"
  input: "bnorm_67/ReadVariableOp_1"
  input: "bnorm_67/Const_4"
  input: "bnorm_67/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_67/Shape"
  op: "Shape"
  input: "conv_67/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_67/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_67/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_67/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_67/strided_slice"
  op: "StridedSlice"
  input: "bnorm_67/Shape"
  input: "bnorm_67/strided_slice/stack"
  input: "bnorm_67/strided_slice/stack_1"
  input: "bnorm_67/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_67/Shape_1"
  op: "Shape"
  input: "conv_67/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_67/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_67/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_67/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_67/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_67/Shape_1"
  input: "bnorm_67/strided_slice_1/stack"
  input: "bnorm_67/strided_slice_1/stack_1"
  input: "bnorm_67/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_67/Shape_2"
  op: "Shape"
  input: "conv_67/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_67/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_67/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_67/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_67/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_67/Shape_2"
  input: "bnorm_67/strided_slice_2/stack"
  input: "bnorm_67/strided_slice_2/stack_1"
  input: "bnorm_67/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_67/Rank/packed"
  op: "Pack"
  input: "bnorm_67/strided_slice"
  input: "bnorm_67/strided_slice_1"
  input: "bnorm_67/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_67/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_67/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_67/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_67/range"
  op: "Range"
  input: "bnorm_67/range/start"
  input: "bnorm_67/Rank"
  input: "bnorm_67/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_67/Prod/input"
  op: "Pack"
  input: "bnorm_67/strided_slice"
  input: "bnorm_67/strided_slice_1"
  input: "bnorm_67/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_67/Prod"
  op: "Prod"
  input: "bnorm_67/Prod/input"
  input: "bnorm_67/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_67/Cast"
  op: "Cast"
  input: "bnorm_67/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_67/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_67/sub"
  op: "Sub"
  input: "bnorm_67/Cast"
  input: "bnorm_67/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_67/truediv"
  op: "RealDiv"
  input: "bnorm_67/Cast"
  input: "bnorm_67/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_67/mul"
  op: "Mul"
  input: "bnorm_67/FusedBatchNormV3:2"
  input: "bnorm_67/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_67/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_67/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_67/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_67/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_67/sub_1"
  op: "Sub"
  input: "bnorm_67/ReadVariableOp_2"
  input: "bnorm_67/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_67/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_67/mul_1"
  op: "Mul"
  input: "bnorm_67/sub_1"
  input: "bnorm_67/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_67/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_67/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_67/moving_mean"
  input: "bnorm_67/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_67/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_67/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_67/moving_mean"
  input: "^bnorm_67/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_67/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_67/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_67/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_67/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_67/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_67/sub_2"
  op: "Sub"
  input: "bnorm_67/ReadVariableOp_4"
  input: "bnorm_67/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_67/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_67/mul_2"
  op: "Mul"
  input: "bnorm_67/sub_2"
  input: "bnorm_67/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_67/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_67/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_67/moving_variance"
  input: "bnorm_67/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_67/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_67/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_67/moving_variance"
  input: "^bnorm_67/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_67/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_67/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_67/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_67/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_67/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_67/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_67/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_67/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_67/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_67/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_67/convolution"
  input: "bnorm_67/ReadVariableOp_6"
  input: "bnorm_67/ReadVariableOp_7"
  input: "bnorm_67/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_67/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_67/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_67/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "add_21/add"
  op: "AddV2"
  input: "add_20/add"
  input: "leaky_67/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_69/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv_69/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0625
      }
    }
  }
}
node {
  name: "conv_69/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0625
      }
    }
  }
}
node {
  name: "conv_69/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_69/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8719897
    }
  }
}
node {
  name: "conv_69/random_uniform/sub"
  op: "Sub"
  input: "conv_69/random_uniform/max"
  input: "conv_69/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_69/random_uniform/mul"
  op: "Mul"
  input: "conv_69/random_uniform/RandomUniform"
  input: "conv_69/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_69/random_uniform"
  op: "Add"
  input: "conv_69/random_uniform/mul"
  input: "conv_69/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_69/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_69/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_69/kernel"
    }
  }
}
node {
  name: "conv_69/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_69/kernel"
}
node {
  name: "conv_69/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_69/kernel"
  input: "conv_69/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_69/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_69/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_69/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_69/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_69/convolution"
  op: "Conv2D"
  input: "add_21/add"
  input: "conv_69/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_69/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_69/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_69/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_69/gamma"
    }
  }
}
node {
  name: "bnorm_69/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_69/gamma"
}
node {
  name: "bnorm_69/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_69/gamma"
  input: "bnorm_69/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_69/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_69/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_69/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_69/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_69/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_69/beta"
    }
  }
}
node {
  name: "bnorm_69/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_69/beta"
}
node {
  name: "bnorm_69/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_69/beta"
  input: "bnorm_69/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_69/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_69/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_69/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_69/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_69/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_69/moving_mean"
    }
  }
}
node {
  name: "bnorm_69/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_69/moving_mean"
}
node {
  name: "bnorm_69/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_69/moving_mean"
  input: "bnorm_69/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_69/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_69/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_69/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_69/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_69/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_69/moving_variance"
    }
  }
}
node {
  name: "bnorm_69/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_69/moving_variance"
}
node {
  name: "bnorm_69/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_69/moving_variance"
  input: "bnorm_69/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_69/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_69/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_69/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_69/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_69/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_69/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_69/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_69/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_69/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_69/convolution"
  input: "bnorm_69/ReadVariableOp"
  input: "bnorm_69/ReadVariableOp_1"
  input: "bnorm_69/Const_4"
  input: "bnorm_69/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_69/Shape"
  op: "Shape"
  input: "conv_69/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_69/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_69/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_69/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_69/strided_slice"
  op: "StridedSlice"
  input: "bnorm_69/Shape"
  input: "bnorm_69/strided_slice/stack"
  input: "bnorm_69/strided_slice/stack_1"
  input: "bnorm_69/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_69/Shape_1"
  op: "Shape"
  input: "conv_69/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_69/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_69/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_69/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_69/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_69/Shape_1"
  input: "bnorm_69/strided_slice_1/stack"
  input: "bnorm_69/strided_slice_1/stack_1"
  input: "bnorm_69/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_69/Shape_2"
  op: "Shape"
  input: "conv_69/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_69/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_69/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_69/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_69/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_69/Shape_2"
  input: "bnorm_69/strided_slice_2/stack"
  input: "bnorm_69/strided_slice_2/stack_1"
  input: "bnorm_69/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_69/Rank/packed"
  op: "Pack"
  input: "bnorm_69/strided_slice"
  input: "bnorm_69/strided_slice_1"
  input: "bnorm_69/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_69/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_69/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_69/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_69/range"
  op: "Range"
  input: "bnorm_69/range/start"
  input: "bnorm_69/Rank"
  input: "bnorm_69/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_69/Prod/input"
  op: "Pack"
  input: "bnorm_69/strided_slice"
  input: "bnorm_69/strided_slice_1"
  input: "bnorm_69/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_69/Prod"
  op: "Prod"
  input: "bnorm_69/Prod/input"
  input: "bnorm_69/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_69/Cast"
  op: "Cast"
  input: "bnorm_69/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_69/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_69/sub"
  op: "Sub"
  input: "bnorm_69/Cast"
  input: "bnorm_69/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_69/truediv"
  op: "RealDiv"
  input: "bnorm_69/Cast"
  input: "bnorm_69/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_69/mul"
  op: "Mul"
  input: "bnorm_69/FusedBatchNormV3:2"
  input: "bnorm_69/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_69/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_69/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_69/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_69/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_69/sub_1"
  op: "Sub"
  input: "bnorm_69/ReadVariableOp_2"
  input: "bnorm_69/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_69/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_69/mul_1"
  op: "Mul"
  input: "bnorm_69/sub_1"
  input: "bnorm_69/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_69/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_69/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_69/moving_mean"
  input: "bnorm_69/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_69/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_69/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_69/moving_mean"
  input: "^bnorm_69/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_69/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_69/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_69/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_69/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_69/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_69/sub_2"
  op: "Sub"
  input: "bnorm_69/ReadVariableOp_4"
  input: "bnorm_69/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_69/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_69/mul_2"
  op: "Mul"
  input: "bnorm_69/sub_2"
  input: "bnorm_69/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_69/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_69/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_69/moving_variance"
  input: "bnorm_69/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_69/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_69/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_69/moving_variance"
  input: "^bnorm_69/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_69/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_69/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_69/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_69/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_69/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_69/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_69/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_69/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_69/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_69/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_69/convolution"
  input: "bnorm_69/ReadVariableOp_6"
  input: "bnorm_69/ReadVariableOp_7"
  input: "bnorm_69/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_69/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_69/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_69/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_70/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "conv_70/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02083333395421505
      }
    }
  }
}
node {
  name: "conv_70/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02083333395421505
      }
    }
  }
}
node {
  name: "conv_70/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_70/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3384887
    }
  }
}
node {
  name: "conv_70/random_uniform/sub"
  op: "Sub"
  input: "conv_70/random_uniform/max"
  input: "conv_70/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_70/random_uniform/mul"
  op: "Mul"
  input: "conv_70/random_uniform/RandomUniform"
  input: "conv_70/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_70/random_uniform"
  op: "Add"
  input: "conv_70/random_uniform/mul"
  input: "conv_70/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_70/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_70/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_70/kernel"
    }
  }
}
node {
  name: "conv_70/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_70/kernel"
}
node {
  name: "conv_70/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_70/kernel"
  input: "conv_70/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_70/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_70/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_70/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_70/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_70/convolution"
  op: "Conv2D"
  input: "leaky_69/LeakyRelu"
  input: "conv_70/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_70/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_70/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_70/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_70/gamma"
    }
  }
}
node {
  name: "bnorm_70/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_70/gamma"
}
node {
  name: "bnorm_70/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_70/gamma"
  input: "bnorm_70/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_70/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_70/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_70/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_70/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_70/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_70/beta"
    }
  }
}
node {
  name: "bnorm_70/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_70/beta"
}
node {
  name: "bnorm_70/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_70/beta"
  input: "bnorm_70/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_70/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_70/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_70/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_70/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_70/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_70/moving_mean"
    }
  }
}
node {
  name: "bnorm_70/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_70/moving_mean"
}
node {
  name: "bnorm_70/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_70/moving_mean"
  input: "bnorm_70/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_70/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_70/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_70/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_70/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_70/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_70/moving_variance"
    }
  }
}
node {
  name: "bnorm_70/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_70/moving_variance"
}
node {
  name: "bnorm_70/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_70/moving_variance"
  input: "bnorm_70/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_70/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_70/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_70/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_70/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_70/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_70/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_70/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_70/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_70/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_70/convolution"
  input: "bnorm_70/ReadVariableOp"
  input: "bnorm_70/ReadVariableOp_1"
  input: "bnorm_70/Const_4"
  input: "bnorm_70/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_70/Shape"
  op: "Shape"
  input: "conv_70/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_70/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_70/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_70/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_70/strided_slice"
  op: "StridedSlice"
  input: "bnorm_70/Shape"
  input: "bnorm_70/strided_slice/stack"
  input: "bnorm_70/strided_slice/stack_1"
  input: "bnorm_70/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_70/Shape_1"
  op: "Shape"
  input: "conv_70/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_70/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_70/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_70/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_70/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_70/Shape_1"
  input: "bnorm_70/strided_slice_1/stack"
  input: "bnorm_70/strided_slice_1/stack_1"
  input: "bnorm_70/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_70/Shape_2"
  op: "Shape"
  input: "conv_70/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_70/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_70/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_70/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_70/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_70/Shape_2"
  input: "bnorm_70/strided_slice_2/stack"
  input: "bnorm_70/strided_slice_2/stack_1"
  input: "bnorm_70/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_70/Rank/packed"
  op: "Pack"
  input: "bnorm_70/strided_slice"
  input: "bnorm_70/strided_slice_1"
  input: "bnorm_70/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_70/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_70/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_70/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_70/range"
  op: "Range"
  input: "bnorm_70/range/start"
  input: "bnorm_70/Rank"
  input: "bnorm_70/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_70/Prod/input"
  op: "Pack"
  input: "bnorm_70/strided_slice"
  input: "bnorm_70/strided_slice_1"
  input: "bnorm_70/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_70/Prod"
  op: "Prod"
  input: "bnorm_70/Prod/input"
  input: "bnorm_70/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_70/Cast"
  op: "Cast"
  input: "bnorm_70/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_70/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_70/sub"
  op: "Sub"
  input: "bnorm_70/Cast"
  input: "bnorm_70/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_70/truediv"
  op: "RealDiv"
  input: "bnorm_70/Cast"
  input: "bnorm_70/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_70/mul"
  op: "Mul"
  input: "bnorm_70/FusedBatchNormV3:2"
  input: "bnorm_70/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_70/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_70/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_70/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_70/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_70/sub_1"
  op: "Sub"
  input: "bnorm_70/ReadVariableOp_2"
  input: "bnorm_70/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_70/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_70/mul_1"
  op: "Mul"
  input: "bnorm_70/sub_1"
  input: "bnorm_70/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_70/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_70/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_70/moving_mean"
  input: "bnorm_70/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_70/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_70/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_70/moving_mean"
  input: "^bnorm_70/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_70/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_70/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_70/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_70/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_70/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_70/sub_2"
  op: "Sub"
  input: "bnorm_70/ReadVariableOp_4"
  input: "bnorm_70/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_70/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_70/mul_2"
  op: "Mul"
  input: "bnorm_70/sub_2"
  input: "bnorm_70/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_70/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_70/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_70/moving_variance"
  input: "bnorm_70/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_70/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_70/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_70/moving_variance"
  input: "^bnorm_70/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_70/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_70/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_70/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_70/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_70/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_70/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_70/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_70/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_70/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_70/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_70/convolution"
  input: "bnorm_70/ReadVariableOp_6"
  input: "bnorm_70/ReadVariableOp_7"
  input: "bnorm_70/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_70/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_70/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_70/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "add_22/add"
  op: "AddV2"
  input: "add_21/add"
  input: "leaky_70/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_72/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv_72/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0625
      }
    }
  }
}
node {
  name: "conv_72/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0625
      }
    }
  }
}
node {
  name: "conv_72/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_72/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4055831
    }
  }
}
node {
  name: "conv_72/random_uniform/sub"
  op: "Sub"
  input: "conv_72/random_uniform/max"
  input: "conv_72/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_72/random_uniform/mul"
  op: "Mul"
  input: "conv_72/random_uniform/RandomUniform"
  input: "conv_72/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_72/random_uniform"
  op: "Add"
  input: "conv_72/random_uniform/mul"
  input: "conv_72/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_72/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_72/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_72/kernel"
    }
  }
}
node {
  name: "conv_72/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_72/kernel"
}
node {
  name: "conv_72/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_72/kernel"
  input: "conv_72/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_72/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_72/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_72/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_72/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_72/convolution"
  op: "Conv2D"
  input: "add_22/add"
  input: "conv_72/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_72/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_72/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_72/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_72/gamma"
    }
  }
}
node {
  name: "bnorm_72/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_72/gamma"
}
node {
  name: "bnorm_72/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_72/gamma"
  input: "bnorm_72/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_72/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_72/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_72/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_72/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_72/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_72/beta"
    }
  }
}
node {
  name: "bnorm_72/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_72/beta"
}
node {
  name: "bnorm_72/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_72/beta"
  input: "bnorm_72/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_72/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_72/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_72/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_72/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_72/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_72/moving_mean"
    }
  }
}
node {
  name: "bnorm_72/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_72/moving_mean"
}
node {
  name: "bnorm_72/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_72/moving_mean"
  input: "bnorm_72/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_72/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_72/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_72/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_72/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_72/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_72/moving_variance"
    }
  }
}
node {
  name: "bnorm_72/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_72/moving_variance"
}
node {
  name: "bnorm_72/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_72/moving_variance"
  input: "bnorm_72/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_72/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_72/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_72/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_72/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_72/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_72/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_72/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_72/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_72/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_72/convolution"
  input: "bnorm_72/ReadVariableOp"
  input: "bnorm_72/ReadVariableOp_1"
  input: "bnorm_72/Const_4"
  input: "bnorm_72/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_72/Shape"
  op: "Shape"
  input: "conv_72/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_72/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_72/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_72/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_72/strided_slice"
  op: "StridedSlice"
  input: "bnorm_72/Shape"
  input: "bnorm_72/strided_slice/stack"
  input: "bnorm_72/strided_slice/stack_1"
  input: "bnorm_72/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_72/Shape_1"
  op: "Shape"
  input: "conv_72/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_72/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_72/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_72/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_72/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_72/Shape_1"
  input: "bnorm_72/strided_slice_1/stack"
  input: "bnorm_72/strided_slice_1/stack_1"
  input: "bnorm_72/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_72/Shape_2"
  op: "Shape"
  input: "conv_72/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_72/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_72/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_72/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_72/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_72/Shape_2"
  input: "bnorm_72/strided_slice_2/stack"
  input: "bnorm_72/strided_slice_2/stack_1"
  input: "bnorm_72/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_72/Rank/packed"
  op: "Pack"
  input: "bnorm_72/strided_slice"
  input: "bnorm_72/strided_slice_1"
  input: "bnorm_72/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_72/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_72/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_72/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_72/range"
  op: "Range"
  input: "bnorm_72/range/start"
  input: "bnorm_72/Rank"
  input: "bnorm_72/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_72/Prod/input"
  op: "Pack"
  input: "bnorm_72/strided_slice"
  input: "bnorm_72/strided_slice_1"
  input: "bnorm_72/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_72/Prod"
  op: "Prod"
  input: "bnorm_72/Prod/input"
  input: "bnorm_72/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_72/Cast"
  op: "Cast"
  input: "bnorm_72/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_72/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_72/sub"
  op: "Sub"
  input: "bnorm_72/Cast"
  input: "bnorm_72/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_72/truediv"
  op: "RealDiv"
  input: "bnorm_72/Cast"
  input: "bnorm_72/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_72/mul"
  op: "Mul"
  input: "bnorm_72/FusedBatchNormV3:2"
  input: "bnorm_72/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_72/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_72/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_72/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_72/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_72/sub_1"
  op: "Sub"
  input: "bnorm_72/ReadVariableOp_2"
  input: "bnorm_72/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_72/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_72/mul_1"
  op: "Mul"
  input: "bnorm_72/sub_1"
  input: "bnorm_72/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_72/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_72/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_72/moving_mean"
  input: "bnorm_72/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_72/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_72/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_72/moving_mean"
  input: "^bnorm_72/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_72/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_72/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_72/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_72/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_72/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_72/sub_2"
  op: "Sub"
  input: "bnorm_72/ReadVariableOp_4"
  input: "bnorm_72/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_72/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_72/mul_2"
  op: "Mul"
  input: "bnorm_72/sub_2"
  input: "bnorm_72/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_72/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_72/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_72/moving_variance"
  input: "bnorm_72/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_72/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_72/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_72/moving_variance"
  input: "^bnorm_72/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_72/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_72/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_72/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_72/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_72/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_72/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_72/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_72/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_72/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_72/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_72/convolution"
  input: "bnorm_72/ReadVariableOp_6"
  input: "bnorm_72/ReadVariableOp_7"
  input: "bnorm_72/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_72/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_72/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_72/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_73/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "conv_73/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02083333395421505
      }
    }
  }
}
node {
  name: "conv_73/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02083333395421505
      }
    }
  }
}
node {
  name: "conv_73/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_73/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2345814
    }
  }
}
node {
  name: "conv_73/random_uniform/sub"
  op: "Sub"
  input: "conv_73/random_uniform/max"
  input: "conv_73/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_73/random_uniform/mul"
  op: "Mul"
  input: "conv_73/random_uniform/RandomUniform"
  input: "conv_73/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_73/random_uniform"
  op: "Add"
  input: "conv_73/random_uniform/mul"
  input: "conv_73/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_73/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_73/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_73/kernel"
    }
  }
}
node {
  name: "conv_73/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_73/kernel"
}
node {
  name: "conv_73/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_73/kernel"
  input: "conv_73/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_73/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_73/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_73/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_73/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_73/convolution"
  op: "Conv2D"
  input: "leaky_72/LeakyRelu"
  input: "conv_73/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_73/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_73/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_73/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_73/gamma"
    }
  }
}
node {
  name: "bnorm_73/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_73/gamma"
}
node {
  name: "bnorm_73/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_73/gamma"
  input: "bnorm_73/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_73/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_73/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_73/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_73/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_73/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_73/beta"
    }
  }
}
node {
  name: "bnorm_73/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_73/beta"
}
node {
  name: "bnorm_73/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_73/beta"
  input: "bnorm_73/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_73/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_73/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_73/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_73/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_73/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_73/moving_mean"
    }
  }
}
node {
  name: "bnorm_73/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_73/moving_mean"
}
node {
  name: "bnorm_73/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_73/moving_mean"
  input: "bnorm_73/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_73/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_73/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_73/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_73/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_73/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_73/moving_variance"
    }
  }
}
node {
  name: "bnorm_73/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_73/moving_variance"
}
node {
  name: "bnorm_73/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_73/moving_variance"
  input: "bnorm_73/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_73/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_73/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_73/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_73/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_73/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_73/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_73/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_73/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_73/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_73/convolution"
  input: "bnorm_73/ReadVariableOp"
  input: "bnorm_73/ReadVariableOp_1"
  input: "bnorm_73/Const_4"
  input: "bnorm_73/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_73/Shape"
  op: "Shape"
  input: "conv_73/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_73/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_73/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_73/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_73/strided_slice"
  op: "StridedSlice"
  input: "bnorm_73/Shape"
  input: "bnorm_73/strided_slice/stack"
  input: "bnorm_73/strided_slice/stack_1"
  input: "bnorm_73/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_73/Shape_1"
  op: "Shape"
  input: "conv_73/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_73/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_73/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_73/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_73/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_73/Shape_1"
  input: "bnorm_73/strided_slice_1/stack"
  input: "bnorm_73/strided_slice_1/stack_1"
  input: "bnorm_73/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_73/Shape_2"
  op: "Shape"
  input: "conv_73/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_73/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_73/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_73/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_73/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_73/Shape_2"
  input: "bnorm_73/strided_slice_2/stack"
  input: "bnorm_73/strided_slice_2/stack_1"
  input: "bnorm_73/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_73/Rank/packed"
  op: "Pack"
  input: "bnorm_73/strided_slice"
  input: "bnorm_73/strided_slice_1"
  input: "bnorm_73/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_73/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_73/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_73/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_73/range"
  op: "Range"
  input: "bnorm_73/range/start"
  input: "bnorm_73/Rank"
  input: "bnorm_73/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_73/Prod/input"
  op: "Pack"
  input: "bnorm_73/strided_slice"
  input: "bnorm_73/strided_slice_1"
  input: "bnorm_73/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_73/Prod"
  op: "Prod"
  input: "bnorm_73/Prod/input"
  input: "bnorm_73/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_73/Cast"
  op: "Cast"
  input: "bnorm_73/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_73/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_73/sub"
  op: "Sub"
  input: "bnorm_73/Cast"
  input: "bnorm_73/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_73/truediv"
  op: "RealDiv"
  input: "bnorm_73/Cast"
  input: "bnorm_73/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_73/mul"
  op: "Mul"
  input: "bnorm_73/FusedBatchNormV3:2"
  input: "bnorm_73/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_73/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_73/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_73/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_73/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_73/sub_1"
  op: "Sub"
  input: "bnorm_73/ReadVariableOp_2"
  input: "bnorm_73/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_73/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_73/mul_1"
  op: "Mul"
  input: "bnorm_73/sub_1"
  input: "bnorm_73/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_73/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_73/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_73/moving_mean"
  input: "bnorm_73/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_73/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_73/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_73/moving_mean"
  input: "^bnorm_73/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_73/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_73/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_73/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_73/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_73/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_73/sub_2"
  op: "Sub"
  input: "bnorm_73/ReadVariableOp_4"
  input: "bnorm_73/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_73/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_73/mul_2"
  op: "Mul"
  input: "bnorm_73/sub_2"
  input: "bnorm_73/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_73/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_73/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_73/moving_variance"
  input: "bnorm_73/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_73/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_73/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_73/moving_variance"
  input: "^bnorm_73/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_73/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_73/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_73/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_73/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_73/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_73/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_73/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_73/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_73/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_73/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_73/convolution"
  input: "bnorm_73/ReadVariableOp_6"
  input: "bnorm_73/ReadVariableOp_7"
  input: "bnorm_73/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_73/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_73/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_73/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "add_23/add"
  op: "AddV2"
  input: "add_22/add"
  input: "leaky_73/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_75/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv_75/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0625
      }
    }
  }
}
node {
  name: "conv_75/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0625
      }
    }
  }
}
node {
  name: "conv_75/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_75/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 424848
    }
  }
}
node {
  name: "conv_75/random_uniform/sub"
  op: "Sub"
  input: "conv_75/random_uniform/max"
  input: "conv_75/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_75/random_uniform/mul"
  op: "Mul"
  input: "conv_75/random_uniform/RandomUniform"
  input: "conv_75/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_75/random_uniform"
  op: "Add"
  input: "conv_75/random_uniform/mul"
  input: "conv_75/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_75/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_75/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_75/kernel"
    }
  }
}
node {
  name: "conv_75/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_75/kernel"
}
node {
  name: "conv_75/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_75/kernel"
  input: "conv_75/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_75/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_75/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_75/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_75/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_75/convolution"
  op: "Conv2D"
  input: "add_23/add"
  input: "conv_75/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_75/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_75/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_75/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_75/gamma"
    }
  }
}
node {
  name: "bnorm_75/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_75/gamma"
}
node {
  name: "bnorm_75/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_75/gamma"
  input: "bnorm_75/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_75/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_75/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_75/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_75/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_75/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_75/beta"
    }
  }
}
node {
  name: "bnorm_75/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_75/beta"
}
node {
  name: "bnorm_75/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_75/beta"
  input: "bnorm_75/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_75/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_75/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_75/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_75/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_75/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_75/moving_mean"
    }
  }
}
node {
  name: "bnorm_75/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_75/moving_mean"
}
node {
  name: "bnorm_75/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_75/moving_mean"
  input: "bnorm_75/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_75/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_75/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_75/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_75/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_75/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_75/moving_variance"
    }
  }
}
node {
  name: "bnorm_75/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_75/moving_variance"
}
node {
  name: "bnorm_75/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_75/moving_variance"
  input: "bnorm_75/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_75/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_75/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_75/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_75/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_75/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_75/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_75/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_75/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_75/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_75/convolution"
  input: "bnorm_75/ReadVariableOp"
  input: "bnorm_75/ReadVariableOp_1"
  input: "bnorm_75/Const_4"
  input: "bnorm_75/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_75/Shape"
  op: "Shape"
  input: "conv_75/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_75/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_75/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_75/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_75/strided_slice"
  op: "StridedSlice"
  input: "bnorm_75/Shape"
  input: "bnorm_75/strided_slice/stack"
  input: "bnorm_75/strided_slice/stack_1"
  input: "bnorm_75/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_75/Shape_1"
  op: "Shape"
  input: "conv_75/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_75/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_75/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_75/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_75/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_75/Shape_1"
  input: "bnorm_75/strided_slice_1/stack"
  input: "bnorm_75/strided_slice_1/stack_1"
  input: "bnorm_75/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_75/Shape_2"
  op: "Shape"
  input: "conv_75/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_75/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_75/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_75/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_75/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_75/Shape_2"
  input: "bnorm_75/strided_slice_2/stack"
  input: "bnorm_75/strided_slice_2/stack_1"
  input: "bnorm_75/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_75/Rank/packed"
  op: "Pack"
  input: "bnorm_75/strided_slice"
  input: "bnorm_75/strided_slice_1"
  input: "bnorm_75/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_75/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_75/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_75/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_75/range"
  op: "Range"
  input: "bnorm_75/range/start"
  input: "bnorm_75/Rank"
  input: "bnorm_75/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_75/Prod/input"
  op: "Pack"
  input: "bnorm_75/strided_slice"
  input: "bnorm_75/strided_slice_1"
  input: "bnorm_75/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_75/Prod"
  op: "Prod"
  input: "bnorm_75/Prod/input"
  input: "bnorm_75/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_75/Cast"
  op: "Cast"
  input: "bnorm_75/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_75/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_75/sub"
  op: "Sub"
  input: "bnorm_75/Cast"
  input: "bnorm_75/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_75/truediv"
  op: "RealDiv"
  input: "bnorm_75/Cast"
  input: "bnorm_75/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_75/mul"
  op: "Mul"
  input: "bnorm_75/FusedBatchNormV3:2"
  input: "bnorm_75/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_75/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_75/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_75/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_75/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_75/sub_1"
  op: "Sub"
  input: "bnorm_75/ReadVariableOp_2"
  input: "bnorm_75/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_75/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_75/mul_1"
  op: "Mul"
  input: "bnorm_75/sub_1"
  input: "bnorm_75/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_75/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_75/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_75/moving_mean"
  input: "bnorm_75/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_75/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_75/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_75/moving_mean"
  input: "^bnorm_75/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_75/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_75/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_75/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_75/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_75/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_75/sub_2"
  op: "Sub"
  input: "bnorm_75/ReadVariableOp_4"
  input: "bnorm_75/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_75/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_75/mul_2"
  op: "Mul"
  input: "bnorm_75/sub_2"
  input: "bnorm_75/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_75/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_75/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_75/moving_variance"
  input: "bnorm_75/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_75/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_75/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_75/moving_variance"
  input: "^bnorm_75/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_75/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_75/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_75/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_75/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_75/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_75/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_75/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_75/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_75/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_75/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_75/convolution"
  input: "bnorm_75/ReadVariableOp_6"
  input: "bnorm_75/ReadVariableOp_7"
  input: "bnorm_75/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_75/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_75/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_75/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_76/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "conv_76/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02083333395421505
      }
    }
  }
}
node {
  name: "conv_76/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02083333395421505
      }
    }
  }
}
node {
  name: "conv_76/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_76/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9811289
    }
  }
}
node {
  name: "conv_76/random_uniform/sub"
  op: "Sub"
  input: "conv_76/random_uniform/max"
  input: "conv_76/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_76/random_uniform/mul"
  op: "Mul"
  input: "conv_76/random_uniform/RandomUniform"
  input: "conv_76/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_76/random_uniform"
  op: "Add"
  input: "conv_76/random_uniform/mul"
  input: "conv_76/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_76/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_76/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_76/kernel"
    }
  }
}
node {
  name: "conv_76/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_76/kernel"
}
node {
  name: "conv_76/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_76/kernel"
  input: "conv_76/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_76/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_76/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_76/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_76/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_76/convolution"
  op: "Conv2D"
  input: "leaky_75/LeakyRelu"
  input: "conv_76/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_76/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_76/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_76/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_76/gamma"
    }
  }
}
node {
  name: "bnorm_76/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_76/gamma"
}
node {
  name: "bnorm_76/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_76/gamma"
  input: "bnorm_76/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_76/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_76/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_76/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_76/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_76/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_76/beta"
    }
  }
}
node {
  name: "bnorm_76/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_76/beta"
}
node {
  name: "bnorm_76/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_76/beta"
  input: "bnorm_76/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_76/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_76/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_76/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_76/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_76/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_76/moving_mean"
    }
  }
}
node {
  name: "bnorm_76/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_76/moving_mean"
}
node {
  name: "bnorm_76/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_76/moving_mean"
  input: "bnorm_76/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_76/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_76/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_76/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_76/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_76/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_76/moving_variance"
    }
  }
}
node {
  name: "bnorm_76/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_76/moving_variance"
}
node {
  name: "bnorm_76/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_76/moving_variance"
  input: "bnorm_76/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_76/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_76/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_76/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_76/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_76/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_76/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_76/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_76/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_76/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_76/convolution"
  input: "bnorm_76/ReadVariableOp"
  input: "bnorm_76/ReadVariableOp_1"
  input: "bnorm_76/Const_4"
  input: "bnorm_76/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_76/Shape"
  op: "Shape"
  input: "conv_76/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_76/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_76/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_76/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_76/strided_slice"
  op: "StridedSlice"
  input: "bnorm_76/Shape"
  input: "bnorm_76/strided_slice/stack"
  input: "bnorm_76/strided_slice/stack_1"
  input: "bnorm_76/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_76/Shape_1"
  op: "Shape"
  input: "conv_76/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_76/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_76/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_76/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_76/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_76/Shape_1"
  input: "bnorm_76/strided_slice_1/stack"
  input: "bnorm_76/strided_slice_1/stack_1"
  input: "bnorm_76/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_76/Shape_2"
  op: "Shape"
  input: "conv_76/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_76/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_76/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_76/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_76/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_76/Shape_2"
  input: "bnorm_76/strided_slice_2/stack"
  input: "bnorm_76/strided_slice_2/stack_1"
  input: "bnorm_76/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_76/Rank/packed"
  op: "Pack"
  input: "bnorm_76/strided_slice"
  input: "bnorm_76/strided_slice_1"
  input: "bnorm_76/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_76/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_76/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_76/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_76/range"
  op: "Range"
  input: "bnorm_76/range/start"
  input: "bnorm_76/Rank"
  input: "bnorm_76/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_76/Prod/input"
  op: "Pack"
  input: "bnorm_76/strided_slice"
  input: "bnorm_76/strided_slice_1"
  input: "bnorm_76/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_76/Prod"
  op: "Prod"
  input: "bnorm_76/Prod/input"
  input: "bnorm_76/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_76/Cast"
  op: "Cast"
  input: "bnorm_76/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_76/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_76/sub"
  op: "Sub"
  input: "bnorm_76/Cast"
  input: "bnorm_76/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_76/truediv"
  op: "RealDiv"
  input: "bnorm_76/Cast"
  input: "bnorm_76/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_76/mul"
  op: "Mul"
  input: "bnorm_76/FusedBatchNormV3:2"
  input: "bnorm_76/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_76/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_76/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_76/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_76/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_76/sub_1"
  op: "Sub"
  input: "bnorm_76/ReadVariableOp_2"
  input: "bnorm_76/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_76/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_76/mul_1"
  op: "Mul"
  input: "bnorm_76/sub_1"
  input: "bnorm_76/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_76/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_76/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_76/moving_mean"
  input: "bnorm_76/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_76/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_76/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_76/moving_mean"
  input: "^bnorm_76/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_76/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_76/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_76/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_76/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_76/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_76/sub_2"
  op: "Sub"
  input: "bnorm_76/ReadVariableOp_4"
  input: "bnorm_76/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_76/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_76/mul_2"
  op: "Mul"
  input: "bnorm_76/sub_2"
  input: "bnorm_76/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_76/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_76/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_76/moving_variance"
  input: "bnorm_76/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_76/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_76/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_76/moving_variance"
  input: "^bnorm_76/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_76/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_76/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_76/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_76/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_76/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_76/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_76/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_76/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_76/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_76/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_76/convolution"
  input: "bnorm_76/ReadVariableOp_6"
  input: "bnorm_76/ReadVariableOp_7"
  input: "bnorm_76/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_76/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_76/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_76/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_77/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv_77/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0625
      }
    }
  }
}
node {
  name: "conv_77/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0625
      }
    }
  }
}
node {
  name: "conv_77/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_77/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4091660
    }
  }
}
node {
  name: "conv_77/random_uniform/sub"
  op: "Sub"
  input: "conv_77/random_uniform/max"
  input: "conv_77/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_77/random_uniform/mul"
  op: "Mul"
  input: "conv_77/random_uniform/RandomUniform"
  input: "conv_77/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_77/random_uniform"
  op: "Add"
  input: "conv_77/random_uniform/mul"
  input: "conv_77/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_77/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_77/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_77/kernel"
    }
  }
}
node {
  name: "conv_77/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_77/kernel"
}
node {
  name: "conv_77/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_77/kernel"
  input: "conv_77/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_77/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_77/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_77/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_77/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_77/convolution"
  op: "Conv2D"
  input: "leaky_76/LeakyRelu"
  input: "conv_77/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_77/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_77/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_77/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_77/gamma"
    }
  }
}
node {
  name: "bnorm_77/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_77/gamma"
}
node {
  name: "bnorm_77/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_77/gamma"
  input: "bnorm_77/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_77/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_77/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_77/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_77/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_77/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_77/beta"
    }
  }
}
node {
  name: "bnorm_77/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_77/beta"
}
node {
  name: "bnorm_77/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_77/beta"
  input: "bnorm_77/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_77/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_77/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_77/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_77/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_77/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_77/moving_mean"
    }
  }
}
node {
  name: "bnorm_77/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_77/moving_mean"
}
node {
  name: "bnorm_77/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_77/moving_mean"
  input: "bnorm_77/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_77/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_77/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_77/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_77/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_77/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_77/moving_variance"
    }
  }
}
node {
  name: "bnorm_77/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_77/moving_variance"
}
node {
  name: "bnorm_77/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_77/moving_variance"
  input: "bnorm_77/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_77/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_77/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_77/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_77/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_77/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_77/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_77/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_77/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_77/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_77/convolution"
  input: "bnorm_77/ReadVariableOp"
  input: "bnorm_77/ReadVariableOp_1"
  input: "bnorm_77/Const_4"
  input: "bnorm_77/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_77/Shape"
  op: "Shape"
  input: "conv_77/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_77/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_77/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_77/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_77/strided_slice"
  op: "StridedSlice"
  input: "bnorm_77/Shape"
  input: "bnorm_77/strided_slice/stack"
  input: "bnorm_77/strided_slice/stack_1"
  input: "bnorm_77/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_77/Shape_1"
  op: "Shape"
  input: "conv_77/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_77/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_77/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_77/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_77/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_77/Shape_1"
  input: "bnorm_77/strided_slice_1/stack"
  input: "bnorm_77/strided_slice_1/stack_1"
  input: "bnorm_77/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_77/Shape_2"
  op: "Shape"
  input: "conv_77/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_77/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_77/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_77/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_77/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_77/Shape_2"
  input: "bnorm_77/strided_slice_2/stack"
  input: "bnorm_77/strided_slice_2/stack_1"
  input: "bnorm_77/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_77/Rank/packed"
  op: "Pack"
  input: "bnorm_77/strided_slice"
  input: "bnorm_77/strided_slice_1"
  input: "bnorm_77/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_77/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_77/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_77/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_77/range"
  op: "Range"
  input: "bnorm_77/range/start"
  input: "bnorm_77/Rank"
  input: "bnorm_77/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_77/Prod/input"
  op: "Pack"
  input: "bnorm_77/strided_slice"
  input: "bnorm_77/strided_slice_1"
  input: "bnorm_77/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_77/Prod"
  op: "Prod"
  input: "bnorm_77/Prod/input"
  input: "bnorm_77/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_77/Cast"
  op: "Cast"
  input: "bnorm_77/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_77/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_77/sub"
  op: "Sub"
  input: "bnorm_77/Cast"
  input: "bnorm_77/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_77/truediv"
  op: "RealDiv"
  input: "bnorm_77/Cast"
  input: "bnorm_77/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_77/mul"
  op: "Mul"
  input: "bnorm_77/FusedBatchNormV3:2"
  input: "bnorm_77/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_77/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_77/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_77/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_77/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_77/sub_1"
  op: "Sub"
  input: "bnorm_77/ReadVariableOp_2"
  input: "bnorm_77/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_77/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_77/mul_1"
  op: "Mul"
  input: "bnorm_77/sub_1"
  input: "bnorm_77/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_77/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_77/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_77/moving_mean"
  input: "bnorm_77/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_77/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_77/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_77/moving_mean"
  input: "^bnorm_77/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_77/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_77/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_77/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_77/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_77/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_77/sub_2"
  op: "Sub"
  input: "bnorm_77/ReadVariableOp_4"
  input: "bnorm_77/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_77/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_77/mul_2"
  op: "Mul"
  input: "bnorm_77/sub_2"
  input: "bnorm_77/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_77/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_77/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_77/moving_variance"
  input: "bnorm_77/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_77/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_77/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_77/moving_variance"
  input: "^bnorm_77/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_77/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_77/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_77/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_77/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_77/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_77/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_77/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_77/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_77/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_77/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_77/convolution"
  input: "bnorm_77/ReadVariableOp_6"
  input: "bnorm_77/ReadVariableOp_7"
  input: "bnorm_77/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_77/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_77/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_77/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_78/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "conv_78/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02083333395421505
      }
    }
  }
}
node {
  name: "conv_78/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02083333395421505
      }
    }
  }
}
node {
  name: "conv_78/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_78/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3043673
    }
  }
}
node {
  name: "conv_78/random_uniform/sub"
  op: "Sub"
  input: "conv_78/random_uniform/max"
  input: "conv_78/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_78/random_uniform/mul"
  op: "Mul"
  input: "conv_78/random_uniform/RandomUniform"
  input: "conv_78/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_78/random_uniform"
  op: "Add"
  input: "conv_78/random_uniform/mul"
  input: "conv_78/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_78/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_78/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_78/kernel"
    }
  }
}
node {
  name: "conv_78/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_78/kernel"
}
node {
  name: "conv_78/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_78/kernel"
  input: "conv_78/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_78/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_78/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_78/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_78/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_78/convolution"
  op: "Conv2D"
  input: "leaky_77/LeakyRelu"
  input: "conv_78/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_78/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_78/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_78/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_78/gamma"
    }
  }
}
node {
  name: "bnorm_78/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_78/gamma"
}
node {
  name: "bnorm_78/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_78/gamma"
  input: "bnorm_78/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_78/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_78/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_78/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_78/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_78/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_78/beta"
    }
  }
}
node {
  name: "bnorm_78/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_78/beta"
}
node {
  name: "bnorm_78/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_78/beta"
  input: "bnorm_78/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_78/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_78/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_78/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_78/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_78/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_78/moving_mean"
    }
  }
}
node {
  name: "bnorm_78/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_78/moving_mean"
}
node {
  name: "bnorm_78/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_78/moving_mean"
  input: "bnorm_78/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_78/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_78/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_78/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_78/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_78/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_78/moving_variance"
    }
  }
}
node {
  name: "bnorm_78/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_78/moving_variance"
}
node {
  name: "bnorm_78/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_78/moving_variance"
  input: "bnorm_78/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_78/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_78/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_78/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_78/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_78/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_78/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_78/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_78/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_78/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_78/convolution"
  input: "bnorm_78/ReadVariableOp"
  input: "bnorm_78/ReadVariableOp_1"
  input: "bnorm_78/Const_4"
  input: "bnorm_78/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_78/Shape"
  op: "Shape"
  input: "conv_78/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_78/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_78/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_78/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_78/strided_slice"
  op: "StridedSlice"
  input: "bnorm_78/Shape"
  input: "bnorm_78/strided_slice/stack"
  input: "bnorm_78/strided_slice/stack_1"
  input: "bnorm_78/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_78/Shape_1"
  op: "Shape"
  input: "conv_78/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_78/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_78/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_78/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_78/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_78/Shape_1"
  input: "bnorm_78/strided_slice_1/stack"
  input: "bnorm_78/strided_slice_1/stack_1"
  input: "bnorm_78/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_78/Shape_2"
  op: "Shape"
  input: "conv_78/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_78/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_78/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_78/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_78/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_78/Shape_2"
  input: "bnorm_78/strided_slice_2/stack"
  input: "bnorm_78/strided_slice_2/stack_1"
  input: "bnorm_78/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_78/Rank/packed"
  op: "Pack"
  input: "bnorm_78/strided_slice"
  input: "bnorm_78/strided_slice_1"
  input: "bnorm_78/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_78/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_78/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_78/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_78/range"
  op: "Range"
  input: "bnorm_78/range/start"
  input: "bnorm_78/Rank"
  input: "bnorm_78/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_78/Prod/input"
  op: "Pack"
  input: "bnorm_78/strided_slice"
  input: "bnorm_78/strided_slice_1"
  input: "bnorm_78/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_78/Prod"
  op: "Prod"
  input: "bnorm_78/Prod/input"
  input: "bnorm_78/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_78/Cast"
  op: "Cast"
  input: "bnorm_78/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_78/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_78/sub"
  op: "Sub"
  input: "bnorm_78/Cast"
  input: "bnorm_78/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_78/truediv"
  op: "RealDiv"
  input: "bnorm_78/Cast"
  input: "bnorm_78/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_78/mul"
  op: "Mul"
  input: "bnorm_78/FusedBatchNormV3:2"
  input: "bnorm_78/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_78/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_78/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_78/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_78/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_78/sub_1"
  op: "Sub"
  input: "bnorm_78/ReadVariableOp_2"
  input: "bnorm_78/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_78/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_78/mul_1"
  op: "Mul"
  input: "bnorm_78/sub_1"
  input: "bnorm_78/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_78/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_78/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_78/moving_mean"
  input: "bnorm_78/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_78/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_78/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_78/moving_mean"
  input: "^bnorm_78/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_78/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_78/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_78/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_78/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_78/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_78/sub_2"
  op: "Sub"
  input: "bnorm_78/ReadVariableOp_4"
  input: "bnorm_78/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_78/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_78/mul_2"
  op: "Mul"
  input: "bnorm_78/sub_2"
  input: "bnorm_78/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_78/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_78/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_78/moving_variance"
  input: "bnorm_78/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_78/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_78/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_78/moving_variance"
  input: "^bnorm_78/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_78/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_78/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_78/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_78/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_78/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_78/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_78/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_78/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_78/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_78/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_78/convolution"
  input: "bnorm_78/ReadVariableOp_6"
  input: "bnorm_78/ReadVariableOp_7"
  input: "bnorm_78/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_78/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_78/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_78/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_79/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv_79/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0625
      }
    }
  }
}
node {
  name: "conv_79/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0625
      }
    }
  }
}
node {
  name: "conv_79/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_79/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7854003
    }
  }
}
node {
  name: "conv_79/random_uniform/sub"
  op: "Sub"
  input: "conv_79/random_uniform/max"
  input: "conv_79/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_79/random_uniform/mul"
  op: "Mul"
  input: "conv_79/random_uniform/RandomUniform"
  input: "conv_79/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_79/random_uniform"
  op: "Add"
  input: "conv_79/random_uniform/mul"
  input: "conv_79/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_79/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_79/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_79/kernel"
    }
  }
}
node {
  name: "conv_79/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_79/kernel"
}
node {
  name: "conv_79/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_79/kernel"
  input: "conv_79/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_79/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_79/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_79/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_79/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_79/convolution"
  op: "Conv2D"
  input: "leaky_78/LeakyRelu"
  input: "conv_79/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_79/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_79/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_79/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_79/gamma"
    }
  }
}
node {
  name: "bnorm_79/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_79/gamma"
}
node {
  name: "bnorm_79/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_79/gamma"
  input: "bnorm_79/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_79/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_79/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_79/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_79/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_79/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_79/beta"
    }
  }
}
node {
  name: "bnorm_79/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_79/beta"
}
node {
  name: "bnorm_79/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_79/beta"
  input: "bnorm_79/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_79/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_79/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_79/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_79/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_79/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_79/moving_mean"
    }
  }
}
node {
  name: "bnorm_79/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_79/moving_mean"
}
node {
  name: "bnorm_79/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_79/moving_mean"
  input: "bnorm_79/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_79/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_79/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_79/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_79/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_79/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_79/moving_variance"
    }
  }
}
node {
  name: "bnorm_79/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_79/moving_variance"
}
node {
  name: "bnorm_79/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_79/moving_variance"
  input: "bnorm_79/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_79/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_79/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_79/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_79/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_79/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_79/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_79/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_79/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_79/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_79/convolution"
  input: "bnorm_79/ReadVariableOp"
  input: "bnorm_79/ReadVariableOp_1"
  input: "bnorm_79/Const_4"
  input: "bnorm_79/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_79/Shape"
  op: "Shape"
  input: "conv_79/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_79/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_79/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_79/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_79/strided_slice"
  op: "StridedSlice"
  input: "bnorm_79/Shape"
  input: "bnorm_79/strided_slice/stack"
  input: "bnorm_79/strided_slice/stack_1"
  input: "bnorm_79/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_79/Shape_1"
  op: "Shape"
  input: "conv_79/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_79/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_79/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_79/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_79/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_79/Shape_1"
  input: "bnorm_79/strided_slice_1/stack"
  input: "bnorm_79/strided_slice_1/stack_1"
  input: "bnorm_79/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_79/Shape_2"
  op: "Shape"
  input: "conv_79/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_79/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_79/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_79/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_79/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_79/Shape_2"
  input: "bnorm_79/strided_slice_2/stack"
  input: "bnorm_79/strided_slice_2/stack_1"
  input: "bnorm_79/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_79/Rank/packed"
  op: "Pack"
  input: "bnorm_79/strided_slice"
  input: "bnorm_79/strided_slice_1"
  input: "bnorm_79/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_79/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_79/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_79/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_79/range"
  op: "Range"
  input: "bnorm_79/range/start"
  input: "bnorm_79/Rank"
  input: "bnorm_79/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_79/Prod/input"
  op: "Pack"
  input: "bnorm_79/strided_slice"
  input: "bnorm_79/strided_slice_1"
  input: "bnorm_79/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_79/Prod"
  op: "Prod"
  input: "bnorm_79/Prod/input"
  input: "bnorm_79/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_79/Cast"
  op: "Cast"
  input: "bnorm_79/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_79/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_79/sub"
  op: "Sub"
  input: "bnorm_79/Cast"
  input: "bnorm_79/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_79/truediv"
  op: "RealDiv"
  input: "bnorm_79/Cast"
  input: "bnorm_79/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_79/mul"
  op: "Mul"
  input: "bnorm_79/FusedBatchNormV3:2"
  input: "bnorm_79/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_79/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_79/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_79/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_79/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_79/sub_1"
  op: "Sub"
  input: "bnorm_79/ReadVariableOp_2"
  input: "bnorm_79/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_79/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_79/mul_1"
  op: "Mul"
  input: "bnorm_79/sub_1"
  input: "bnorm_79/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_79/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_79/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_79/moving_mean"
  input: "bnorm_79/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_79/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_79/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_79/moving_mean"
  input: "^bnorm_79/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_79/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_79/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_79/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_79/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_79/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_79/sub_2"
  op: "Sub"
  input: "bnorm_79/ReadVariableOp_4"
  input: "bnorm_79/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_79/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_79/mul_2"
  op: "Mul"
  input: "bnorm_79/sub_2"
  input: "bnorm_79/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_79/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_79/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_79/moving_variance"
  input: "bnorm_79/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_79/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_79/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_79/moving_variance"
  input: "^bnorm_79/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_79/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_79/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_79/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_79/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_79/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_79/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_79/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_79/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_79/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_79/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_79/convolution"
  input: "bnorm_79/ReadVariableOp_6"
  input: "bnorm_79/ReadVariableOp_7"
  input: "bnorm_79/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_79/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_79/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_79/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_84/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv_84/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0883883461356163
      }
    }
  }
}
node {
  name: "conv_84/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "conv_84/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_84/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 215077
    }
  }
}
node {
  name: "conv_84/random_uniform/sub"
  op: "Sub"
  input: "conv_84/random_uniform/max"
  input: "conv_84/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_84/random_uniform/mul"
  op: "Mul"
  input: "conv_84/random_uniform/RandomUniform"
  input: "conv_84/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_84/random_uniform"
  op: "Add"
  input: "conv_84/random_uniform/mul"
  input: "conv_84/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_84/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_84/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_84/kernel"
    }
  }
}
node {
  name: "conv_84/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_84/kernel"
}
node {
  name: "conv_84/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_84/kernel"
  input: "conv_84/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_84/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_84/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_84/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_84/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_84/convolution"
  op: "Conv2D"
  input: "leaky_79/LeakyRelu"
  input: "conv_84/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_84/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_84/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_84/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_84/gamma"
    }
  }
}
node {
  name: "bnorm_84/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_84/gamma"
}
node {
  name: "bnorm_84/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_84/gamma"
  input: "bnorm_84/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_84/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_84/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_84/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_84/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_84/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_84/beta"
    }
  }
}
node {
  name: "bnorm_84/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_84/beta"
}
node {
  name: "bnorm_84/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_84/beta"
  input: "bnorm_84/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_84/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_84/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_84/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_84/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_84/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_84/moving_mean"
    }
  }
}
node {
  name: "bnorm_84/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_84/moving_mean"
}
node {
  name: "bnorm_84/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_84/moving_mean"
  input: "bnorm_84/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_84/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_84/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_84/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_84/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_84/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_84/moving_variance"
    }
  }
}
node {
  name: "bnorm_84/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_84/moving_variance"
}
node {
  name: "bnorm_84/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_84/moving_variance"
  input: "bnorm_84/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_84/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_84/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_84/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_84/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_84/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_84/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_84/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_84/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_84/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_84/convolution"
  input: "bnorm_84/ReadVariableOp"
  input: "bnorm_84/ReadVariableOp_1"
  input: "bnorm_84/Const_4"
  input: "bnorm_84/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_84/Shape"
  op: "Shape"
  input: "conv_84/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_84/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_84/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_84/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_84/strided_slice"
  op: "StridedSlice"
  input: "bnorm_84/Shape"
  input: "bnorm_84/strided_slice/stack"
  input: "bnorm_84/strided_slice/stack_1"
  input: "bnorm_84/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_84/Shape_1"
  op: "Shape"
  input: "conv_84/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_84/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_84/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_84/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_84/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_84/Shape_1"
  input: "bnorm_84/strided_slice_1/stack"
  input: "bnorm_84/strided_slice_1/stack_1"
  input: "bnorm_84/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_84/Shape_2"
  op: "Shape"
  input: "conv_84/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_84/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_84/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_84/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_84/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_84/Shape_2"
  input: "bnorm_84/strided_slice_2/stack"
  input: "bnorm_84/strided_slice_2/stack_1"
  input: "bnorm_84/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_84/Rank/packed"
  op: "Pack"
  input: "bnorm_84/strided_slice"
  input: "bnorm_84/strided_slice_1"
  input: "bnorm_84/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_84/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_84/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_84/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_84/range"
  op: "Range"
  input: "bnorm_84/range/start"
  input: "bnorm_84/Rank"
  input: "bnorm_84/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_84/Prod/input"
  op: "Pack"
  input: "bnorm_84/strided_slice"
  input: "bnorm_84/strided_slice_1"
  input: "bnorm_84/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_84/Prod"
  op: "Prod"
  input: "bnorm_84/Prod/input"
  input: "bnorm_84/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_84/Cast"
  op: "Cast"
  input: "bnorm_84/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_84/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_84/sub"
  op: "Sub"
  input: "bnorm_84/Cast"
  input: "bnorm_84/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_84/truediv"
  op: "RealDiv"
  input: "bnorm_84/Cast"
  input: "bnorm_84/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_84/mul"
  op: "Mul"
  input: "bnorm_84/FusedBatchNormV3:2"
  input: "bnorm_84/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_84/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_84/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_84/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_84/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_84/sub_1"
  op: "Sub"
  input: "bnorm_84/ReadVariableOp_2"
  input: "bnorm_84/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_84/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_84/mul_1"
  op: "Mul"
  input: "bnorm_84/sub_1"
  input: "bnorm_84/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_84/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_84/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_84/moving_mean"
  input: "bnorm_84/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_84/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_84/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_84/moving_mean"
  input: "^bnorm_84/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_84/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_84/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_84/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_84/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_84/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_84/sub_2"
  op: "Sub"
  input: "bnorm_84/ReadVariableOp_4"
  input: "bnorm_84/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_84/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_84/mul_2"
  op: "Mul"
  input: "bnorm_84/sub_2"
  input: "bnorm_84/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_84/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_84/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_84/moving_variance"
  input: "bnorm_84/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_84/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_84/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_84/moving_variance"
  input: "^bnorm_84/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_84/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_84/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_84/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_84/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_84/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_84/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_84/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_84/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_84/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_84/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_84/convolution"
  input: "bnorm_84/ReadVariableOp_6"
  input: "bnorm_84/ReadVariableOp_7"
  input: "bnorm_84/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_84/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_84/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_84/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "up_sampling2d_1/Shape"
  op: "Shape"
  input: "leaky_84/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "up_sampling2d_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "up_sampling2d_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "up_sampling2d_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "up_sampling2d_1/strided_slice"
  op: "StridedSlice"
  input: "up_sampling2d_1/Shape"
  input: "up_sampling2d_1/strided_slice/stack"
  input: "up_sampling2d_1/strided_slice/stack_1"
  input: "up_sampling2d_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "up_sampling2d_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "up_sampling2d_1/mul"
  op: "Mul"
  input: "up_sampling2d_1/strided_slice"
  input: "up_sampling2d_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "up_sampling2d_1/ResizeNearestNeighbor"
  op: "ResizeNearestNeighbor"
  input: "leaky_84/LeakyRelu"
  input: "up_sampling2d_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
  attr {
    key: "half_pixel_centers"
    value {
      b: false
    }
  }
}
node {
  name: "concatenate_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "concatenate_1/concat"
  op: "ConcatV2"
  input: "up_sampling2d_1/ResizeNearestNeighbor"
  input: "add_19/add"
  input: "concatenate_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_87/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\003\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv_87/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "conv_87/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "conv_87/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_87/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9054033
    }
  }
}
node {
  name: "conv_87/random_uniform/sub"
  op: "Sub"
  input: "conv_87/random_uniform/max"
  input: "conv_87/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_87/random_uniform/mul"
  op: "Mul"
  input: "conv_87/random_uniform/RandomUniform"
  input: "conv_87/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_87/random_uniform"
  op: "Add"
  input: "conv_87/random_uniform/mul"
  input: "conv_87/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_87/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_87/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 768
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_87/kernel"
    }
  }
}
node {
  name: "conv_87/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_87/kernel"
}
node {
  name: "conv_87/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_87/kernel"
  input: "conv_87/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_87/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_87/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_87/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_87/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_87/convolution"
  op: "Conv2D"
  input: "concatenate_1/concat"
  input: "conv_87/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_87/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_87/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_87/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_87/gamma"
    }
  }
}
node {
  name: "bnorm_87/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_87/gamma"
}
node {
  name: "bnorm_87/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_87/gamma"
  input: "bnorm_87/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_87/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_87/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_87/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_87/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_87/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_87/beta"
    }
  }
}
node {
  name: "bnorm_87/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_87/beta"
}
node {
  name: "bnorm_87/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_87/beta"
  input: "bnorm_87/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_87/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_87/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_87/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_87/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_87/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_87/moving_mean"
    }
  }
}
node {
  name: "bnorm_87/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_87/moving_mean"
}
node {
  name: "bnorm_87/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_87/moving_mean"
  input: "bnorm_87/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_87/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_87/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_87/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_87/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_87/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_87/moving_variance"
    }
  }
}
node {
  name: "bnorm_87/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_87/moving_variance"
}
node {
  name: "bnorm_87/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_87/moving_variance"
  input: "bnorm_87/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_87/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_87/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_87/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_87/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_87/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_87/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_87/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_87/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_87/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_87/convolution"
  input: "bnorm_87/ReadVariableOp"
  input: "bnorm_87/ReadVariableOp_1"
  input: "bnorm_87/Const_4"
  input: "bnorm_87/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_87/Shape"
  op: "Shape"
  input: "conv_87/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_87/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_87/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_87/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_87/strided_slice"
  op: "StridedSlice"
  input: "bnorm_87/Shape"
  input: "bnorm_87/strided_slice/stack"
  input: "bnorm_87/strided_slice/stack_1"
  input: "bnorm_87/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_87/Shape_1"
  op: "Shape"
  input: "conv_87/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_87/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_87/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_87/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_87/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_87/Shape_1"
  input: "bnorm_87/strided_slice_1/stack"
  input: "bnorm_87/strided_slice_1/stack_1"
  input: "bnorm_87/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_87/Shape_2"
  op: "Shape"
  input: "conv_87/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_87/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_87/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_87/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_87/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_87/Shape_2"
  input: "bnorm_87/strided_slice_2/stack"
  input: "bnorm_87/strided_slice_2/stack_1"
  input: "bnorm_87/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_87/Rank/packed"
  op: "Pack"
  input: "bnorm_87/strided_slice"
  input: "bnorm_87/strided_slice_1"
  input: "bnorm_87/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_87/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_87/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_87/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_87/range"
  op: "Range"
  input: "bnorm_87/range/start"
  input: "bnorm_87/Rank"
  input: "bnorm_87/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_87/Prod/input"
  op: "Pack"
  input: "bnorm_87/strided_slice"
  input: "bnorm_87/strided_slice_1"
  input: "bnorm_87/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_87/Prod"
  op: "Prod"
  input: "bnorm_87/Prod/input"
  input: "bnorm_87/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_87/Cast"
  op: "Cast"
  input: "bnorm_87/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_87/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_87/sub"
  op: "Sub"
  input: "bnorm_87/Cast"
  input: "bnorm_87/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_87/truediv"
  op: "RealDiv"
  input: "bnorm_87/Cast"
  input: "bnorm_87/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_87/mul"
  op: "Mul"
  input: "bnorm_87/FusedBatchNormV3:2"
  input: "bnorm_87/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_87/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_87/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_87/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_87/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_87/sub_1"
  op: "Sub"
  input: "bnorm_87/ReadVariableOp_2"
  input: "bnorm_87/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_87/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_87/mul_1"
  op: "Mul"
  input: "bnorm_87/sub_1"
  input: "bnorm_87/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_87/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_87/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_87/moving_mean"
  input: "bnorm_87/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_87/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_87/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_87/moving_mean"
  input: "^bnorm_87/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_87/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_87/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_87/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_87/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_87/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_87/sub_2"
  op: "Sub"
  input: "bnorm_87/ReadVariableOp_4"
  input: "bnorm_87/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_87/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_87/mul_2"
  op: "Mul"
  input: "bnorm_87/sub_2"
  input: "bnorm_87/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_87/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_87/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_87/moving_variance"
  input: "bnorm_87/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_87/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_87/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_87/moving_variance"
  input: "^bnorm_87/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_87/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_87/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_87/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_87/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_87/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_87/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_87/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_87/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_87/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_87/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_87/convolution"
  input: "bnorm_87/ReadVariableOp_6"
  input: "bnorm_87/ReadVariableOp_7"
  input: "bnorm_87/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_87/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_87/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_87/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_88/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv_88/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02946278266608715
      }
    }
  }
}
node {
  name: "conv_88/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02946278266608715
      }
    }
  }
}
node {
  name: "conv_88/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_88/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8216656
    }
  }
}
node {
  name: "conv_88/random_uniform/sub"
  op: "Sub"
  input: "conv_88/random_uniform/max"
  input: "conv_88/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_88/random_uniform/mul"
  op: "Mul"
  input: "conv_88/random_uniform/RandomUniform"
  input: "conv_88/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_88/random_uniform"
  op: "Add"
  input: "conv_88/random_uniform/mul"
  input: "conv_88/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_88/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_88/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_88/kernel"
    }
  }
}
node {
  name: "conv_88/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_88/kernel"
}
node {
  name: "conv_88/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_88/kernel"
  input: "conv_88/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_88/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_88/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_88/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_88/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_88/convolution"
  op: "Conv2D"
  input: "leaky_87/LeakyRelu"
  input: "conv_88/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_88/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_88/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_88/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_88/gamma"
    }
  }
}
node {
  name: "bnorm_88/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_88/gamma"
}
node {
  name: "bnorm_88/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_88/gamma"
  input: "bnorm_88/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_88/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_88/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_88/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_88/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_88/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_88/beta"
    }
  }
}
node {
  name: "bnorm_88/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_88/beta"
}
node {
  name: "bnorm_88/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_88/beta"
  input: "bnorm_88/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_88/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_88/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_88/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_88/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_88/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_88/moving_mean"
    }
  }
}
node {
  name: "bnorm_88/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_88/moving_mean"
}
node {
  name: "bnorm_88/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_88/moving_mean"
  input: "bnorm_88/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_88/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_88/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_88/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_88/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_88/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_88/moving_variance"
    }
  }
}
node {
  name: "bnorm_88/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_88/moving_variance"
}
node {
  name: "bnorm_88/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_88/moving_variance"
  input: "bnorm_88/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_88/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_88/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_88/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_88/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_88/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_88/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_88/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_88/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_88/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_88/convolution"
  input: "bnorm_88/ReadVariableOp"
  input: "bnorm_88/ReadVariableOp_1"
  input: "bnorm_88/Const_4"
  input: "bnorm_88/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_88/Shape"
  op: "Shape"
  input: "conv_88/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_88/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_88/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_88/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_88/strided_slice"
  op: "StridedSlice"
  input: "bnorm_88/Shape"
  input: "bnorm_88/strided_slice/stack"
  input: "bnorm_88/strided_slice/stack_1"
  input: "bnorm_88/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_88/Shape_1"
  op: "Shape"
  input: "conv_88/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_88/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_88/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_88/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_88/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_88/Shape_1"
  input: "bnorm_88/strided_slice_1/stack"
  input: "bnorm_88/strided_slice_1/stack_1"
  input: "bnorm_88/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_88/Shape_2"
  op: "Shape"
  input: "conv_88/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_88/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_88/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_88/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_88/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_88/Shape_2"
  input: "bnorm_88/strided_slice_2/stack"
  input: "bnorm_88/strided_slice_2/stack_1"
  input: "bnorm_88/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_88/Rank/packed"
  op: "Pack"
  input: "bnorm_88/strided_slice"
  input: "bnorm_88/strided_slice_1"
  input: "bnorm_88/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_88/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_88/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_88/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_88/range"
  op: "Range"
  input: "bnorm_88/range/start"
  input: "bnorm_88/Rank"
  input: "bnorm_88/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_88/Prod/input"
  op: "Pack"
  input: "bnorm_88/strided_slice"
  input: "bnorm_88/strided_slice_1"
  input: "bnorm_88/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_88/Prod"
  op: "Prod"
  input: "bnorm_88/Prod/input"
  input: "bnorm_88/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_88/Cast"
  op: "Cast"
  input: "bnorm_88/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_88/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_88/sub"
  op: "Sub"
  input: "bnorm_88/Cast"
  input: "bnorm_88/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_88/truediv"
  op: "RealDiv"
  input: "bnorm_88/Cast"
  input: "bnorm_88/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_88/mul"
  op: "Mul"
  input: "bnorm_88/FusedBatchNormV3:2"
  input: "bnorm_88/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_88/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_88/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_88/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_88/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_88/sub_1"
  op: "Sub"
  input: "bnorm_88/ReadVariableOp_2"
  input: "bnorm_88/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_88/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_88/mul_1"
  op: "Mul"
  input: "bnorm_88/sub_1"
  input: "bnorm_88/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_88/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_88/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_88/moving_mean"
  input: "bnorm_88/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_88/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_88/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_88/moving_mean"
  input: "^bnorm_88/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_88/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_88/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_88/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_88/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_88/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_88/sub_2"
  op: "Sub"
  input: "bnorm_88/ReadVariableOp_4"
  input: "bnorm_88/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_88/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_88/mul_2"
  op: "Mul"
  input: "bnorm_88/sub_2"
  input: "bnorm_88/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_88/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_88/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_88/moving_variance"
  input: "bnorm_88/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_88/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_88/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_88/moving_variance"
  input: "^bnorm_88/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_88/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_88/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_88/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_88/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_88/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_88/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_88/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_88/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_88/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_88/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_88/convolution"
  input: "bnorm_88/ReadVariableOp_6"
  input: "bnorm_88/ReadVariableOp_7"
  input: "bnorm_88/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_88/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_88/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_88/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_89/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv_89/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0883883461356163
      }
    }
  }
}
node {
  name: "conv_89/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "conv_89/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_89/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6800638
    }
  }
}
node {
  name: "conv_89/random_uniform/sub"
  op: "Sub"
  input: "conv_89/random_uniform/max"
  input: "conv_89/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_89/random_uniform/mul"
  op: "Mul"
  input: "conv_89/random_uniform/RandomUniform"
  input: "conv_89/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_89/random_uniform"
  op: "Add"
  input: "conv_89/random_uniform/mul"
  input: "conv_89/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_89/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_89/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_89/kernel"
    }
  }
}
node {
  name: "conv_89/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_89/kernel"
}
node {
  name: "conv_89/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_89/kernel"
  input: "conv_89/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_89/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_89/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_89/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_89/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_89/convolution"
  op: "Conv2D"
  input: "leaky_88/LeakyRelu"
  input: "conv_89/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_89/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_89/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_89/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_89/gamma"
    }
  }
}
node {
  name: "bnorm_89/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_89/gamma"
}
node {
  name: "bnorm_89/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_89/gamma"
  input: "bnorm_89/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_89/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_89/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_89/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_89/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_89/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_89/beta"
    }
  }
}
node {
  name: "bnorm_89/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_89/beta"
}
node {
  name: "bnorm_89/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_89/beta"
  input: "bnorm_89/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_89/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_89/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_89/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_89/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_89/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_89/moving_mean"
    }
  }
}
node {
  name: "bnorm_89/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_89/moving_mean"
}
node {
  name: "bnorm_89/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_89/moving_mean"
  input: "bnorm_89/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_89/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_89/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_89/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_89/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_89/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_89/moving_variance"
    }
  }
}
node {
  name: "bnorm_89/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_89/moving_variance"
}
node {
  name: "bnorm_89/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_89/moving_variance"
  input: "bnorm_89/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_89/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_89/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_89/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_89/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_89/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_89/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_89/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_89/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_89/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_89/convolution"
  input: "bnorm_89/ReadVariableOp"
  input: "bnorm_89/ReadVariableOp_1"
  input: "bnorm_89/Const_4"
  input: "bnorm_89/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_89/Shape"
  op: "Shape"
  input: "conv_89/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_89/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_89/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_89/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_89/strided_slice"
  op: "StridedSlice"
  input: "bnorm_89/Shape"
  input: "bnorm_89/strided_slice/stack"
  input: "bnorm_89/strided_slice/stack_1"
  input: "bnorm_89/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_89/Shape_1"
  op: "Shape"
  input: "conv_89/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_89/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_89/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_89/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_89/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_89/Shape_1"
  input: "bnorm_89/strided_slice_1/stack"
  input: "bnorm_89/strided_slice_1/stack_1"
  input: "bnorm_89/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_89/Shape_2"
  op: "Shape"
  input: "conv_89/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_89/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_89/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_89/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_89/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_89/Shape_2"
  input: "bnorm_89/strided_slice_2/stack"
  input: "bnorm_89/strided_slice_2/stack_1"
  input: "bnorm_89/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_89/Rank/packed"
  op: "Pack"
  input: "bnorm_89/strided_slice"
  input: "bnorm_89/strided_slice_1"
  input: "bnorm_89/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_89/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_89/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_89/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_89/range"
  op: "Range"
  input: "bnorm_89/range/start"
  input: "bnorm_89/Rank"
  input: "bnorm_89/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_89/Prod/input"
  op: "Pack"
  input: "bnorm_89/strided_slice"
  input: "bnorm_89/strided_slice_1"
  input: "bnorm_89/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_89/Prod"
  op: "Prod"
  input: "bnorm_89/Prod/input"
  input: "bnorm_89/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_89/Cast"
  op: "Cast"
  input: "bnorm_89/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_89/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_89/sub"
  op: "Sub"
  input: "bnorm_89/Cast"
  input: "bnorm_89/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_89/truediv"
  op: "RealDiv"
  input: "bnorm_89/Cast"
  input: "bnorm_89/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_89/mul"
  op: "Mul"
  input: "bnorm_89/FusedBatchNormV3:2"
  input: "bnorm_89/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_89/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_89/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_89/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_89/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_89/sub_1"
  op: "Sub"
  input: "bnorm_89/ReadVariableOp_2"
  input: "bnorm_89/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_89/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_89/mul_1"
  op: "Mul"
  input: "bnorm_89/sub_1"
  input: "bnorm_89/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_89/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_89/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_89/moving_mean"
  input: "bnorm_89/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_89/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_89/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_89/moving_mean"
  input: "^bnorm_89/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_89/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_89/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_89/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_89/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_89/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_89/sub_2"
  op: "Sub"
  input: "bnorm_89/ReadVariableOp_4"
  input: "bnorm_89/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_89/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_89/mul_2"
  op: "Mul"
  input: "bnorm_89/sub_2"
  input: "bnorm_89/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_89/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_89/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_89/moving_variance"
  input: "bnorm_89/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_89/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_89/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_89/moving_variance"
  input: "^bnorm_89/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_89/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_89/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_89/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_89/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_89/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_89/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_89/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_89/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_89/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_89/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_89/convolution"
  input: "bnorm_89/ReadVariableOp_6"
  input: "bnorm_89/ReadVariableOp_7"
  input: "bnorm_89/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_89/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_89/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_89/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_90/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv_90/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02946278266608715
      }
    }
  }
}
node {
  name: "conv_90/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02946278266608715
      }
    }
  }
}
node {
  name: "conv_90/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_90/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1595600
    }
  }
}
node {
  name: "conv_90/random_uniform/sub"
  op: "Sub"
  input: "conv_90/random_uniform/max"
  input: "conv_90/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_90/random_uniform/mul"
  op: "Mul"
  input: "conv_90/random_uniform/RandomUniform"
  input: "conv_90/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_90/random_uniform"
  op: "Add"
  input: "conv_90/random_uniform/mul"
  input: "conv_90/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_90/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_90/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_90/kernel"
    }
  }
}
node {
  name: "conv_90/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_90/kernel"
}
node {
  name: "conv_90/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_90/kernel"
  input: "conv_90/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_90/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_90/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_90/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_90/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_90/convolution"
  op: "Conv2D"
  input: "leaky_89/LeakyRelu"
  input: "conv_90/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_90/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_90/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_90/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_90/gamma"
    }
  }
}
node {
  name: "bnorm_90/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_90/gamma"
}
node {
  name: "bnorm_90/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_90/gamma"
  input: "bnorm_90/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_90/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_90/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_90/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_90/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_90/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_90/beta"
    }
  }
}
node {
  name: "bnorm_90/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_90/beta"
}
node {
  name: "bnorm_90/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_90/beta"
  input: "bnorm_90/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_90/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_90/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_90/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_90/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_90/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_90/moving_mean"
    }
  }
}
node {
  name: "bnorm_90/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_90/moving_mean"
}
node {
  name: "bnorm_90/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_90/moving_mean"
  input: "bnorm_90/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_90/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_90/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_90/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_90/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_90/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_90/moving_variance"
    }
  }
}
node {
  name: "bnorm_90/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_90/moving_variance"
}
node {
  name: "bnorm_90/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_90/moving_variance"
  input: "bnorm_90/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_90/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_90/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_90/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_90/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_90/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_90/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_90/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_90/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_90/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_90/convolution"
  input: "bnorm_90/ReadVariableOp"
  input: "bnorm_90/ReadVariableOp_1"
  input: "bnorm_90/Const_4"
  input: "bnorm_90/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_90/Shape"
  op: "Shape"
  input: "conv_90/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_90/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_90/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_90/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_90/strided_slice"
  op: "StridedSlice"
  input: "bnorm_90/Shape"
  input: "bnorm_90/strided_slice/stack"
  input: "bnorm_90/strided_slice/stack_1"
  input: "bnorm_90/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_90/Shape_1"
  op: "Shape"
  input: "conv_90/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_90/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_90/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_90/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_90/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_90/Shape_1"
  input: "bnorm_90/strided_slice_1/stack"
  input: "bnorm_90/strided_slice_1/stack_1"
  input: "bnorm_90/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_90/Shape_2"
  op: "Shape"
  input: "conv_90/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_90/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_90/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_90/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_90/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_90/Shape_2"
  input: "bnorm_90/strided_slice_2/stack"
  input: "bnorm_90/strided_slice_2/stack_1"
  input: "bnorm_90/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_90/Rank/packed"
  op: "Pack"
  input: "bnorm_90/strided_slice"
  input: "bnorm_90/strided_slice_1"
  input: "bnorm_90/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_90/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_90/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_90/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_90/range"
  op: "Range"
  input: "bnorm_90/range/start"
  input: "bnorm_90/Rank"
  input: "bnorm_90/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_90/Prod/input"
  op: "Pack"
  input: "bnorm_90/strided_slice"
  input: "bnorm_90/strided_slice_1"
  input: "bnorm_90/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_90/Prod"
  op: "Prod"
  input: "bnorm_90/Prod/input"
  input: "bnorm_90/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_90/Cast"
  op: "Cast"
  input: "bnorm_90/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_90/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_90/sub"
  op: "Sub"
  input: "bnorm_90/Cast"
  input: "bnorm_90/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_90/truediv"
  op: "RealDiv"
  input: "bnorm_90/Cast"
  input: "bnorm_90/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_90/mul"
  op: "Mul"
  input: "bnorm_90/FusedBatchNormV3:2"
  input: "bnorm_90/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_90/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_90/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_90/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_90/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_90/sub_1"
  op: "Sub"
  input: "bnorm_90/ReadVariableOp_2"
  input: "bnorm_90/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_90/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_90/mul_1"
  op: "Mul"
  input: "bnorm_90/sub_1"
  input: "bnorm_90/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_90/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_90/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_90/moving_mean"
  input: "bnorm_90/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_90/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_90/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_90/moving_mean"
  input: "^bnorm_90/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_90/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_90/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_90/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_90/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_90/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_90/sub_2"
  op: "Sub"
  input: "bnorm_90/ReadVariableOp_4"
  input: "bnorm_90/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_90/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_90/mul_2"
  op: "Mul"
  input: "bnorm_90/sub_2"
  input: "bnorm_90/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_90/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_90/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_90/moving_variance"
  input: "bnorm_90/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_90/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_90/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_90/moving_variance"
  input: "^bnorm_90/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_90/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_90/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_90/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_90/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_90/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_90/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_90/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_90/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_90/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_90/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_90/convolution"
  input: "bnorm_90/ReadVariableOp_6"
  input: "bnorm_90/ReadVariableOp_7"
  input: "bnorm_90/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_90/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_90/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_90/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_91/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv_91/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0883883461356163
      }
    }
  }
}
node {
  name: "conv_91/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "conv_91/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_91/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7589905
    }
  }
}
node {
  name: "conv_91/random_uniform/sub"
  op: "Sub"
  input: "conv_91/random_uniform/max"
  input: "conv_91/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_91/random_uniform/mul"
  op: "Mul"
  input: "conv_91/random_uniform/RandomUniform"
  input: "conv_91/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_91/random_uniform"
  op: "Add"
  input: "conv_91/random_uniform/mul"
  input: "conv_91/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_91/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_91/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_91/kernel"
    }
  }
}
node {
  name: "conv_91/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_91/kernel"
}
node {
  name: "conv_91/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_91/kernel"
  input: "conv_91/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_91/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_91/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_91/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_91/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_91/convolution"
  op: "Conv2D"
  input: "leaky_90/LeakyRelu"
  input: "conv_91/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_91/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_91/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_91/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_91/gamma"
    }
  }
}
node {
  name: "bnorm_91/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_91/gamma"
}
node {
  name: "bnorm_91/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_91/gamma"
  input: "bnorm_91/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_91/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_91/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_91/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_91/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_91/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_91/beta"
    }
  }
}
node {
  name: "bnorm_91/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_91/beta"
}
node {
  name: "bnorm_91/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_91/beta"
  input: "bnorm_91/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_91/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_91/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_91/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_91/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_91/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_91/moving_mean"
    }
  }
}
node {
  name: "bnorm_91/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_91/moving_mean"
}
node {
  name: "bnorm_91/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_91/moving_mean"
  input: "bnorm_91/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_91/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_91/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_91/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_91/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_91/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_91/moving_variance"
    }
  }
}
node {
  name: "bnorm_91/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_91/moving_variance"
}
node {
  name: "bnorm_91/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_91/moving_variance"
  input: "bnorm_91/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_91/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_91/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_91/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_91/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_91/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_91/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_91/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_91/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_91/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_91/convolution"
  input: "bnorm_91/ReadVariableOp"
  input: "bnorm_91/ReadVariableOp_1"
  input: "bnorm_91/Const_4"
  input: "bnorm_91/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_91/Shape"
  op: "Shape"
  input: "conv_91/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_91/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_91/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_91/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_91/strided_slice"
  op: "StridedSlice"
  input: "bnorm_91/Shape"
  input: "bnorm_91/strided_slice/stack"
  input: "bnorm_91/strided_slice/stack_1"
  input: "bnorm_91/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_91/Shape_1"
  op: "Shape"
  input: "conv_91/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_91/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_91/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_91/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_91/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_91/Shape_1"
  input: "bnorm_91/strided_slice_1/stack"
  input: "bnorm_91/strided_slice_1/stack_1"
  input: "bnorm_91/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_91/Shape_2"
  op: "Shape"
  input: "conv_91/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_91/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_91/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_91/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_91/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_91/Shape_2"
  input: "bnorm_91/strided_slice_2/stack"
  input: "bnorm_91/strided_slice_2/stack_1"
  input: "bnorm_91/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_91/Rank/packed"
  op: "Pack"
  input: "bnorm_91/strided_slice"
  input: "bnorm_91/strided_slice_1"
  input: "bnorm_91/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_91/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_91/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_91/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_91/range"
  op: "Range"
  input: "bnorm_91/range/start"
  input: "bnorm_91/Rank"
  input: "bnorm_91/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_91/Prod/input"
  op: "Pack"
  input: "bnorm_91/strided_slice"
  input: "bnorm_91/strided_slice_1"
  input: "bnorm_91/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_91/Prod"
  op: "Prod"
  input: "bnorm_91/Prod/input"
  input: "bnorm_91/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_91/Cast"
  op: "Cast"
  input: "bnorm_91/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_91/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_91/sub"
  op: "Sub"
  input: "bnorm_91/Cast"
  input: "bnorm_91/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_91/truediv"
  op: "RealDiv"
  input: "bnorm_91/Cast"
  input: "bnorm_91/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_91/mul"
  op: "Mul"
  input: "bnorm_91/FusedBatchNormV3:2"
  input: "bnorm_91/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_91/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_91/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_91/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_91/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_91/sub_1"
  op: "Sub"
  input: "bnorm_91/ReadVariableOp_2"
  input: "bnorm_91/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_91/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_91/mul_1"
  op: "Mul"
  input: "bnorm_91/sub_1"
  input: "bnorm_91/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_91/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_91/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_91/moving_mean"
  input: "bnorm_91/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_91/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_91/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_91/moving_mean"
  input: "^bnorm_91/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_91/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_91/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_91/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_91/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_91/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_91/sub_2"
  op: "Sub"
  input: "bnorm_91/ReadVariableOp_4"
  input: "bnorm_91/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_91/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_91/mul_2"
  op: "Mul"
  input: "bnorm_91/sub_2"
  input: "bnorm_91/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_91/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_91/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_91/moving_variance"
  input: "bnorm_91/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_91/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_91/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_91/moving_variance"
  input: "^bnorm_91/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_91/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_91/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_91/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_91/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_91/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_91/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_91/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_91/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_91/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_91/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_91/convolution"
  input: "bnorm_91/ReadVariableOp_6"
  input: "bnorm_91/ReadVariableOp_7"
  input: "bnorm_91/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_91/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_91/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_91/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_96/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv_96/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "conv_96/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "conv_96/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_96/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3188226
    }
  }
}
node {
  name: "conv_96/random_uniform/sub"
  op: "Sub"
  input: "conv_96/random_uniform/max"
  input: "conv_96/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_96/random_uniform/mul"
  op: "Mul"
  input: "conv_96/random_uniform/RandomUniform"
  input: "conv_96/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_96/random_uniform"
  op: "Add"
  input: "conv_96/random_uniform/mul"
  input: "conv_96/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_96/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_96/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_96/kernel"
    }
  }
}
node {
  name: "conv_96/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_96/kernel"
}
node {
  name: "conv_96/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_96/kernel"
  input: "conv_96/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_96/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_96/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_96/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_96/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_96/convolution"
  op: "Conv2D"
  input: "leaky_91/LeakyRelu"
  input: "conv_96/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_96/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_96/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_96/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_96/gamma"
    }
  }
}
node {
  name: "bnorm_96/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_96/gamma"
}
node {
  name: "bnorm_96/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_96/gamma"
  input: "bnorm_96/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_96/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_96/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_96/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_96/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_96/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_96/beta"
    }
  }
}
node {
  name: "bnorm_96/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_96/beta"
}
node {
  name: "bnorm_96/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_96/beta"
  input: "bnorm_96/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_96/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_96/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_96/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_96/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_96/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_96/moving_mean"
    }
  }
}
node {
  name: "bnorm_96/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_96/moving_mean"
}
node {
  name: "bnorm_96/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_96/moving_mean"
  input: "bnorm_96/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_96/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_96/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_96/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_96/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_96/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_96/moving_variance"
    }
  }
}
node {
  name: "bnorm_96/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_96/moving_variance"
}
node {
  name: "bnorm_96/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_96/moving_variance"
  input: "bnorm_96/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_96/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_96/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_96/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_96/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_96/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_96/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_96/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_96/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_96/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_96/convolution"
  input: "bnorm_96/ReadVariableOp"
  input: "bnorm_96/ReadVariableOp_1"
  input: "bnorm_96/Const_4"
  input: "bnorm_96/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_96/Shape"
  op: "Shape"
  input: "conv_96/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_96/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_96/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_96/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_96/strided_slice"
  op: "StridedSlice"
  input: "bnorm_96/Shape"
  input: "bnorm_96/strided_slice/stack"
  input: "bnorm_96/strided_slice/stack_1"
  input: "bnorm_96/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_96/Shape_1"
  op: "Shape"
  input: "conv_96/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_96/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_96/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_96/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_96/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_96/Shape_1"
  input: "bnorm_96/strided_slice_1/stack"
  input: "bnorm_96/strided_slice_1/stack_1"
  input: "bnorm_96/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_96/Shape_2"
  op: "Shape"
  input: "conv_96/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_96/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_96/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_96/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_96/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_96/Shape_2"
  input: "bnorm_96/strided_slice_2/stack"
  input: "bnorm_96/strided_slice_2/stack_1"
  input: "bnorm_96/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_96/Rank/packed"
  op: "Pack"
  input: "bnorm_96/strided_slice"
  input: "bnorm_96/strided_slice_1"
  input: "bnorm_96/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_96/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_96/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_96/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_96/range"
  op: "Range"
  input: "bnorm_96/range/start"
  input: "bnorm_96/Rank"
  input: "bnorm_96/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_96/Prod/input"
  op: "Pack"
  input: "bnorm_96/strided_slice"
  input: "bnorm_96/strided_slice_1"
  input: "bnorm_96/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_96/Prod"
  op: "Prod"
  input: "bnorm_96/Prod/input"
  input: "bnorm_96/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_96/Cast"
  op: "Cast"
  input: "bnorm_96/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_96/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_96/sub"
  op: "Sub"
  input: "bnorm_96/Cast"
  input: "bnorm_96/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_96/truediv"
  op: "RealDiv"
  input: "bnorm_96/Cast"
  input: "bnorm_96/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_96/mul"
  op: "Mul"
  input: "bnorm_96/FusedBatchNormV3:2"
  input: "bnorm_96/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_96/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_96/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_96/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_96/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_96/sub_1"
  op: "Sub"
  input: "bnorm_96/ReadVariableOp_2"
  input: "bnorm_96/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_96/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_96/mul_1"
  op: "Mul"
  input: "bnorm_96/sub_1"
  input: "bnorm_96/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_96/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_96/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_96/moving_mean"
  input: "bnorm_96/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_96/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_96/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_96/moving_mean"
  input: "^bnorm_96/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_96/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_96/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_96/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_96/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_96/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_96/sub_2"
  op: "Sub"
  input: "bnorm_96/ReadVariableOp_4"
  input: "bnorm_96/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_96/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_96/mul_2"
  op: "Mul"
  input: "bnorm_96/sub_2"
  input: "bnorm_96/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_96/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_96/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_96/moving_variance"
  input: "bnorm_96/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_96/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_96/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_96/moving_variance"
  input: "^bnorm_96/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_96/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_96/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_96/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_96/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_96/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_96/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_96/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_96/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_96/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_96/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_96/convolution"
  input: "bnorm_96/ReadVariableOp_6"
  input: "bnorm_96/ReadVariableOp_7"
  input: "bnorm_96/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_96/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_96/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_96/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "up_sampling2d_2/Shape"
  op: "Shape"
  input: "leaky_96/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "up_sampling2d_2/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "up_sampling2d_2/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "up_sampling2d_2/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "up_sampling2d_2/strided_slice"
  op: "StridedSlice"
  input: "up_sampling2d_2/Shape"
  input: "up_sampling2d_2/strided_slice/stack"
  input: "up_sampling2d_2/strided_slice/stack_1"
  input: "up_sampling2d_2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "up_sampling2d_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "up_sampling2d_2/mul"
  op: "Mul"
  input: "up_sampling2d_2/strided_slice"
  input: "up_sampling2d_2/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "up_sampling2d_2/ResizeNearestNeighbor"
  op: "ResizeNearestNeighbor"
  input: "leaky_96/LeakyRelu"
  input: "up_sampling2d_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
  attr {
    key: "half_pixel_centers"
    value {
      b: false
    }
  }
}
node {
  name: "concatenate_2/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "concatenate_2/concat"
  op: "ConcatV2"
  input: "up_sampling2d_2/ResizeNearestNeighbor"
  input: "add_11/add"
  input: "concatenate_2/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_99/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv_99/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10825317353010178
      }
    }
  }
}
node {
  name: "conv_99/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10825317353010178
      }
    }
  }
}
node {
  name: "conv_99/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_99/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9750328
    }
  }
}
node {
  name: "conv_99/random_uniform/sub"
  op: "Sub"
  input: "conv_99/random_uniform/max"
  input: "conv_99/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_99/random_uniform/mul"
  op: "Mul"
  input: "conv_99/random_uniform/RandomUniform"
  input: "conv_99/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_99/random_uniform"
  op: "Add"
  input: "conv_99/random_uniform/mul"
  input: "conv_99/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_99/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_99/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_99/kernel"
    }
  }
}
node {
  name: "conv_99/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_99/kernel"
}
node {
  name: "conv_99/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_99/kernel"
  input: "conv_99/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_99/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_99/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_99/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_99/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_99/convolution"
  op: "Conv2D"
  input: "concatenate_2/concat"
  input: "conv_99/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_99/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_99/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_99/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_99/gamma"
    }
  }
}
node {
  name: "bnorm_99/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_99/gamma"
}
node {
  name: "bnorm_99/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_99/gamma"
  input: "bnorm_99/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_99/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_99/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_99/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_99/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_99/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_99/beta"
    }
  }
}
node {
  name: "bnorm_99/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_99/beta"
}
node {
  name: "bnorm_99/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_99/beta"
  input: "bnorm_99/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_99/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_99/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_99/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_99/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_99/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_99/moving_mean"
    }
  }
}
node {
  name: "bnorm_99/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_99/moving_mean"
}
node {
  name: "bnorm_99/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_99/moving_mean"
  input: "bnorm_99/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_99/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_99/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_99/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_99/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_99/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_99/moving_variance"
    }
  }
}
node {
  name: "bnorm_99/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_99/moving_variance"
}
node {
  name: "bnorm_99/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_99/moving_variance"
  input: "bnorm_99/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_99/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_99/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_99/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_99/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_99/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_99/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_99/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_99/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_99/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_99/convolution"
  input: "bnorm_99/ReadVariableOp"
  input: "bnorm_99/ReadVariableOp_1"
  input: "bnorm_99/Const_4"
  input: "bnorm_99/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_99/Shape"
  op: "Shape"
  input: "conv_99/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_99/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_99/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_99/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_99/strided_slice"
  op: "StridedSlice"
  input: "bnorm_99/Shape"
  input: "bnorm_99/strided_slice/stack"
  input: "bnorm_99/strided_slice/stack_1"
  input: "bnorm_99/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_99/Shape_1"
  op: "Shape"
  input: "conv_99/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_99/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_99/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_99/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_99/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_99/Shape_1"
  input: "bnorm_99/strided_slice_1/stack"
  input: "bnorm_99/strided_slice_1/stack_1"
  input: "bnorm_99/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_99/Shape_2"
  op: "Shape"
  input: "conv_99/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_99/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_99/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_99/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_99/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_99/Shape_2"
  input: "bnorm_99/strided_slice_2/stack"
  input: "bnorm_99/strided_slice_2/stack_1"
  input: "bnorm_99/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_99/Rank/packed"
  op: "Pack"
  input: "bnorm_99/strided_slice"
  input: "bnorm_99/strided_slice_1"
  input: "bnorm_99/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_99/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_99/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_99/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_99/range"
  op: "Range"
  input: "bnorm_99/range/start"
  input: "bnorm_99/Rank"
  input: "bnorm_99/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_99/Prod/input"
  op: "Pack"
  input: "bnorm_99/strided_slice"
  input: "bnorm_99/strided_slice_1"
  input: "bnorm_99/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_99/Prod"
  op: "Prod"
  input: "bnorm_99/Prod/input"
  input: "bnorm_99/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_99/Cast"
  op: "Cast"
  input: "bnorm_99/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_99/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_99/sub"
  op: "Sub"
  input: "bnorm_99/Cast"
  input: "bnorm_99/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_99/truediv"
  op: "RealDiv"
  input: "bnorm_99/Cast"
  input: "bnorm_99/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_99/mul"
  op: "Mul"
  input: "bnorm_99/FusedBatchNormV3:2"
  input: "bnorm_99/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_99/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_99/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_99/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_99/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_99/sub_1"
  op: "Sub"
  input: "bnorm_99/ReadVariableOp_2"
  input: "bnorm_99/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_99/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_99/mul_1"
  op: "Mul"
  input: "bnorm_99/sub_1"
  input: "bnorm_99/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_99/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_99/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_99/moving_mean"
  input: "bnorm_99/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_99/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_99/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_99/moving_mean"
  input: "^bnorm_99/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_99/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_99/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_99/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_99/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_99/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_99/sub_2"
  op: "Sub"
  input: "bnorm_99/ReadVariableOp_4"
  input: "bnorm_99/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_99/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_99/mul_2"
  op: "Mul"
  input: "bnorm_99/sub_2"
  input: "bnorm_99/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_99/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_99/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_99/moving_variance"
  input: "bnorm_99/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_99/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_99/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_99/moving_variance"
  input: "^bnorm_99/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_99/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_99/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_99/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_99/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_99/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_99/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_99/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_99/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_99/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_99/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_99/convolution"
  input: "bnorm_99/ReadVariableOp_6"
  input: "bnorm_99/ReadVariableOp_7"
  input: "bnorm_99/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_99/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_99/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_99/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_100/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv_100/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0416666679084301
      }
    }
  }
}
node {
  name: "conv_100/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084301
      }
    }
  }
}
node {
  name: "conv_100/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_100/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 737574
    }
  }
}
node {
  name: "conv_100/random_uniform/sub"
  op: "Sub"
  input: "conv_100/random_uniform/max"
  input: "conv_100/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_100/random_uniform/mul"
  op: "Mul"
  input: "conv_100/random_uniform/RandomUniform"
  input: "conv_100/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_100/random_uniform"
  op: "Add"
  input: "conv_100/random_uniform/mul"
  input: "conv_100/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_100/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_100/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_100/kernel"
    }
  }
}
node {
  name: "conv_100/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_100/kernel"
}
node {
  name: "conv_100/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_100/kernel"
  input: "conv_100/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_100/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_100/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_100/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_100/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_100/convolution"
  op: "Conv2D"
  input: "leaky_99/LeakyRelu"
  input: "conv_100/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_100/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_100/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_100/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_100/gamma"
    }
  }
}
node {
  name: "bnorm_100/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_100/gamma"
}
node {
  name: "bnorm_100/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_100/gamma"
  input: "bnorm_100/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_100/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_100/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_100/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_100/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_100/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_100/beta"
    }
  }
}
node {
  name: "bnorm_100/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_100/beta"
}
node {
  name: "bnorm_100/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_100/beta"
  input: "bnorm_100/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_100/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_100/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_100/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_100/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_100/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_100/moving_mean"
    }
  }
}
node {
  name: "bnorm_100/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_100/moving_mean"
}
node {
  name: "bnorm_100/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_100/moving_mean"
  input: "bnorm_100/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_100/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_100/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_100/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_100/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_100/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_100/moving_variance"
    }
  }
}
node {
  name: "bnorm_100/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_100/moving_variance"
}
node {
  name: "bnorm_100/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_100/moving_variance"
  input: "bnorm_100/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_100/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_100/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_100/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_100/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_100/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_100/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_100/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_100/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_100/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_100/convolution"
  input: "bnorm_100/ReadVariableOp"
  input: "bnorm_100/ReadVariableOp_1"
  input: "bnorm_100/Const_4"
  input: "bnorm_100/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_100/Shape"
  op: "Shape"
  input: "conv_100/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_100/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_100/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_100/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_100/strided_slice"
  op: "StridedSlice"
  input: "bnorm_100/Shape"
  input: "bnorm_100/strided_slice/stack"
  input: "bnorm_100/strided_slice/stack_1"
  input: "bnorm_100/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_100/Shape_1"
  op: "Shape"
  input: "conv_100/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_100/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_100/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_100/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_100/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_100/Shape_1"
  input: "bnorm_100/strided_slice_1/stack"
  input: "bnorm_100/strided_slice_1/stack_1"
  input: "bnorm_100/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_100/Shape_2"
  op: "Shape"
  input: "conv_100/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_100/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_100/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_100/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_100/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_100/Shape_2"
  input: "bnorm_100/strided_slice_2/stack"
  input: "bnorm_100/strided_slice_2/stack_1"
  input: "bnorm_100/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_100/Rank/packed"
  op: "Pack"
  input: "bnorm_100/strided_slice"
  input: "bnorm_100/strided_slice_1"
  input: "bnorm_100/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_100/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_100/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_100/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_100/range"
  op: "Range"
  input: "bnorm_100/range/start"
  input: "bnorm_100/Rank"
  input: "bnorm_100/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_100/Prod/input"
  op: "Pack"
  input: "bnorm_100/strided_slice"
  input: "bnorm_100/strided_slice_1"
  input: "bnorm_100/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_100/Prod"
  op: "Prod"
  input: "bnorm_100/Prod/input"
  input: "bnorm_100/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_100/Cast"
  op: "Cast"
  input: "bnorm_100/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_100/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_100/sub"
  op: "Sub"
  input: "bnorm_100/Cast"
  input: "bnorm_100/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_100/truediv"
  op: "RealDiv"
  input: "bnorm_100/Cast"
  input: "bnorm_100/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_100/mul"
  op: "Mul"
  input: "bnorm_100/FusedBatchNormV3:2"
  input: "bnorm_100/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_100/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_100/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_100/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_100/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_100/sub_1"
  op: "Sub"
  input: "bnorm_100/ReadVariableOp_2"
  input: "bnorm_100/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_100/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_100/mul_1"
  op: "Mul"
  input: "bnorm_100/sub_1"
  input: "bnorm_100/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_100/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_100/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_100/moving_mean"
  input: "bnorm_100/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_100/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_100/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_100/moving_mean"
  input: "^bnorm_100/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_100/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_100/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_100/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_100/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_100/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_100/sub_2"
  op: "Sub"
  input: "bnorm_100/ReadVariableOp_4"
  input: "bnorm_100/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_100/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_100/mul_2"
  op: "Mul"
  input: "bnorm_100/sub_2"
  input: "bnorm_100/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_100/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_100/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_100/moving_variance"
  input: "bnorm_100/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_100/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_100/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_100/moving_variance"
  input: "^bnorm_100/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_100/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_100/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_100/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_100/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_100/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_100/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_100/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_100/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_100/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_100/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_100/convolution"
  input: "bnorm_100/ReadVariableOp_6"
  input: "bnorm_100/ReadVariableOp_7"
  input: "bnorm_100/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_100/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_100/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_100/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_101/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv_101/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "conv_101/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "conv_101/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_101/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3559338
    }
  }
}
node {
  name: "conv_101/random_uniform/sub"
  op: "Sub"
  input: "conv_101/random_uniform/max"
  input: "conv_101/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_101/random_uniform/mul"
  op: "Mul"
  input: "conv_101/random_uniform/RandomUniform"
  input: "conv_101/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_101/random_uniform"
  op: "Add"
  input: "conv_101/random_uniform/mul"
  input: "conv_101/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_101/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_101/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_101/kernel"
    }
  }
}
node {
  name: "conv_101/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_101/kernel"
}
node {
  name: "conv_101/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_101/kernel"
  input: "conv_101/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_101/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_101/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_101/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_101/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_101/convolution"
  op: "Conv2D"
  input: "leaky_100/LeakyRelu"
  input: "conv_101/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_101/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_101/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_101/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_101/gamma"
    }
  }
}
node {
  name: "bnorm_101/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_101/gamma"
}
node {
  name: "bnorm_101/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_101/gamma"
  input: "bnorm_101/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_101/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_101/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_101/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_101/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_101/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_101/beta"
    }
  }
}
node {
  name: "bnorm_101/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_101/beta"
}
node {
  name: "bnorm_101/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_101/beta"
  input: "bnorm_101/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_101/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_101/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_101/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_101/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_101/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_101/moving_mean"
    }
  }
}
node {
  name: "bnorm_101/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_101/moving_mean"
}
node {
  name: "bnorm_101/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_101/moving_mean"
  input: "bnorm_101/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_101/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_101/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_101/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_101/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_101/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_101/moving_variance"
    }
  }
}
node {
  name: "bnorm_101/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_101/moving_variance"
}
node {
  name: "bnorm_101/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_101/moving_variance"
  input: "bnorm_101/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_101/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_101/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_101/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_101/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_101/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_101/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_101/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_101/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_101/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_101/convolution"
  input: "bnorm_101/ReadVariableOp"
  input: "bnorm_101/ReadVariableOp_1"
  input: "bnorm_101/Const_4"
  input: "bnorm_101/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_101/Shape"
  op: "Shape"
  input: "conv_101/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_101/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_101/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_101/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_101/strided_slice"
  op: "StridedSlice"
  input: "bnorm_101/Shape"
  input: "bnorm_101/strided_slice/stack"
  input: "bnorm_101/strided_slice/stack_1"
  input: "bnorm_101/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_101/Shape_1"
  op: "Shape"
  input: "conv_101/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_101/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_101/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_101/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_101/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_101/Shape_1"
  input: "bnorm_101/strided_slice_1/stack"
  input: "bnorm_101/strided_slice_1/stack_1"
  input: "bnorm_101/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_101/Shape_2"
  op: "Shape"
  input: "conv_101/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_101/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_101/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_101/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_101/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_101/Shape_2"
  input: "bnorm_101/strided_slice_2/stack"
  input: "bnorm_101/strided_slice_2/stack_1"
  input: "bnorm_101/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_101/Rank/packed"
  op: "Pack"
  input: "bnorm_101/strided_slice"
  input: "bnorm_101/strided_slice_1"
  input: "bnorm_101/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_101/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_101/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_101/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_101/range"
  op: "Range"
  input: "bnorm_101/range/start"
  input: "bnorm_101/Rank"
  input: "bnorm_101/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_101/Prod/input"
  op: "Pack"
  input: "bnorm_101/strided_slice"
  input: "bnorm_101/strided_slice_1"
  input: "bnorm_101/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_101/Prod"
  op: "Prod"
  input: "bnorm_101/Prod/input"
  input: "bnorm_101/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_101/Cast"
  op: "Cast"
  input: "bnorm_101/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_101/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_101/sub"
  op: "Sub"
  input: "bnorm_101/Cast"
  input: "bnorm_101/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_101/truediv"
  op: "RealDiv"
  input: "bnorm_101/Cast"
  input: "bnorm_101/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_101/mul"
  op: "Mul"
  input: "bnorm_101/FusedBatchNormV3:2"
  input: "bnorm_101/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_101/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_101/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_101/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_101/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_101/sub_1"
  op: "Sub"
  input: "bnorm_101/ReadVariableOp_2"
  input: "bnorm_101/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_101/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_101/mul_1"
  op: "Mul"
  input: "bnorm_101/sub_1"
  input: "bnorm_101/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_101/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_101/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_101/moving_mean"
  input: "bnorm_101/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_101/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_101/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_101/moving_mean"
  input: "^bnorm_101/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_101/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_101/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_101/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_101/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_101/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_101/sub_2"
  op: "Sub"
  input: "bnorm_101/ReadVariableOp_4"
  input: "bnorm_101/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_101/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_101/mul_2"
  op: "Mul"
  input: "bnorm_101/sub_2"
  input: "bnorm_101/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_101/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_101/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_101/moving_variance"
  input: "bnorm_101/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_101/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_101/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_101/moving_variance"
  input: "^bnorm_101/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_101/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_101/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_101/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_101/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_101/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_101/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_101/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_101/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_101/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_101/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_101/convolution"
  input: "bnorm_101/ReadVariableOp_6"
  input: "bnorm_101/ReadVariableOp_7"
  input: "bnorm_101/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_101/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_101/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_101/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_102/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv_102/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0416666679084301
      }
    }
  }
}
node {
  name: "conv_102/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084301
      }
    }
  }
}
node {
  name: "conv_102/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_102/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5594439
    }
  }
}
node {
  name: "conv_102/random_uniform/sub"
  op: "Sub"
  input: "conv_102/random_uniform/max"
  input: "conv_102/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_102/random_uniform/mul"
  op: "Mul"
  input: "conv_102/random_uniform/RandomUniform"
  input: "conv_102/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_102/random_uniform"
  op: "Add"
  input: "conv_102/random_uniform/mul"
  input: "conv_102/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_102/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_102/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_102/kernel"
    }
  }
}
node {
  name: "conv_102/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_102/kernel"
}
node {
  name: "conv_102/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_102/kernel"
  input: "conv_102/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_102/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_102/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_102/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_102/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_102/convolution"
  op: "Conv2D"
  input: "leaky_101/LeakyRelu"
  input: "conv_102/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_102/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_102/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_102/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_102/gamma"
    }
  }
}
node {
  name: "bnorm_102/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_102/gamma"
}
node {
  name: "bnorm_102/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_102/gamma"
  input: "bnorm_102/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_102/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_102/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_102/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_102/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_102/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_102/beta"
    }
  }
}
node {
  name: "bnorm_102/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_102/beta"
}
node {
  name: "bnorm_102/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_102/beta"
  input: "bnorm_102/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_102/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_102/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_102/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_102/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_102/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_102/moving_mean"
    }
  }
}
node {
  name: "bnorm_102/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_102/moving_mean"
}
node {
  name: "bnorm_102/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_102/moving_mean"
  input: "bnorm_102/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_102/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_102/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_102/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_102/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_102/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_102/moving_variance"
    }
  }
}
node {
  name: "bnorm_102/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_102/moving_variance"
}
node {
  name: "bnorm_102/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_102/moving_variance"
  input: "bnorm_102/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_102/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_102/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_102/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_102/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_102/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_102/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_102/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_102/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_102/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_102/convolution"
  input: "bnorm_102/ReadVariableOp"
  input: "bnorm_102/ReadVariableOp_1"
  input: "bnorm_102/Const_4"
  input: "bnorm_102/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_102/Shape"
  op: "Shape"
  input: "conv_102/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_102/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_102/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_102/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_102/strided_slice"
  op: "StridedSlice"
  input: "bnorm_102/Shape"
  input: "bnorm_102/strided_slice/stack"
  input: "bnorm_102/strided_slice/stack_1"
  input: "bnorm_102/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_102/Shape_1"
  op: "Shape"
  input: "conv_102/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_102/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_102/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_102/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_102/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_102/Shape_1"
  input: "bnorm_102/strided_slice_1/stack"
  input: "bnorm_102/strided_slice_1/stack_1"
  input: "bnorm_102/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_102/Shape_2"
  op: "Shape"
  input: "conv_102/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_102/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_102/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_102/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_102/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_102/Shape_2"
  input: "bnorm_102/strided_slice_2/stack"
  input: "bnorm_102/strided_slice_2/stack_1"
  input: "bnorm_102/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_102/Rank/packed"
  op: "Pack"
  input: "bnorm_102/strided_slice"
  input: "bnorm_102/strided_slice_1"
  input: "bnorm_102/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_102/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_102/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_102/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_102/range"
  op: "Range"
  input: "bnorm_102/range/start"
  input: "bnorm_102/Rank"
  input: "bnorm_102/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_102/Prod/input"
  op: "Pack"
  input: "bnorm_102/strided_slice"
  input: "bnorm_102/strided_slice_1"
  input: "bnorm_102/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_102/Prod"
  op: "Prod"
  input: "bnorm_102/Prod/input"
  input: "bnorm_102/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_102/Cast"
  op: "Cast"
  input: "bnorm_102/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_102/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_102/sub"
  op: "Sub"
  input: "bnorm_102/Cast"
  input: "bnorm_102/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_102/truediv"
  op: "RealDiv"
  input: "bnorm_102/Cast"
  input: "bnorm_102/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_102/mul"
  op: "Mul"
  input: "bnorm_102/FusedBatchNormV3:2"
  input: "bnorm_102/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_102/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_102/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_102/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_102/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_102/sub_1"
  op: "Sub"
  input: "bnorm_102/ReadVariableOp_2"
  input: "bnorm_102/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_102/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_102/mul_1"
  op: "Mul"
  input: "bnorm_102/sub_1"
  input: "bnorm_102/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_102/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_102/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_102/moving_mean"
  input: "bnorm_102/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_102/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_102/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_102/moving_mean"
  input: "^bnorm_102/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_102/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_102/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_102/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_102/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_102/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_102/sub_2"
  op: "Sub"
  input: "bnorm_102/ReadVariableOp_4"
  input: "bnorm_102/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_102/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_102/mul_2"
  op: "Mul"
  input: "bnorm_102/sub_2"
  input: "bnorm_102/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_102/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_102/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_102/moving_variance"
  input: "bnorm_102/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_102/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_102/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_102/moving_variance"
  input: "^bnorm_102/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_102/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_102/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_102/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_102/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_102/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_102/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_102/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_102/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_102/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_102/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_102/convolution"
  input: "bnorm_102/ReadVariableOp_6"
  input: "bnorm_102/ReadVariableOp_7"
  input: "bnorm_102/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_102/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_102/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_102/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_103/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv_103/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "conv_103/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "conv_103/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_103/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1874828
    }
  }
}
node {
  name: "conv_103/random_uniform/sub"
  op: "Sub"
  input: "conv_103/random_uniform/max"
  input: "conv_103/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_103/random_uniform/mul"
  op: "Mul"
  input: "conv_103/random_uniform/RandomUniform"
  input: "conv_103/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_103/random_uniform"
  op: "Add"
  input: "conv_103/random_uniform/mul"
  input: "conv_103/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_103/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_103/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_103/kernel"
    }
  }
}
node {
  name: "conv_103/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_103/kernel"
}
node {
  name: "conv_103/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_103/kernel"
  input: "conv_103/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_103/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_103/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_103/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_103/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_103/convolution"
  op: "Conv2D"
  input: "leaky_102/LeakyRelu"
  input: "conv_103/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_103/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_103/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_103/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_103/gamma"
    }
  }
}
node {
  name: "bnorm_103/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_103/gamma"
}
node {
  name: "bnorm_103/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_103/gamma"
  input: "bnorm_103/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_103/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_103/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_103/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_103/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_103/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_103/beta"
    }
  }
}
node {
  name: "bnorm_103/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_103/beta"
}
node {
  name: "bnorm_103/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_103/beta"
  input: "bnorm_103/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_103/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_103/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_103/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_103/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_103/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_103/moving_mean"
    }
  }
}
node {
  name: "bnorm_103/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_103/moving_mean"
}
node {
  name: "bnorm_103/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_103/moving_mean"
  input: "bnorm_103/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_103/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_103/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_103/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_103/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_103/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_103/moving_variance"
    }
  }
}
node {
  name: "bnorm_103/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_103/moving_variance"
}
node {
  name: "bnorm_103/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_103/moving_variance"
  input: "bnorm_103/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_103/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_103/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_103/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_103/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_103/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_103/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_103/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_103/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_103/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_103/convolution"
  input: "bnorm_103/ReadVariableOp"
  input: "bnorm_103/ReadVariableOp_1"
  input: "bnorm_103/Const_4"
  input: "bnorm_103/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_103/Shape"
  op: "Shape"
  input: "conv_103/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_103/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_103/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_103/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_103/strided_slice"
  op: "StridedSlice"
  input: "bnorm_103/Shape"
  input: "bnorm_103/strided_slice/stack"
  input: "bnorm_103/strided_slice/stack_1"
  input: "bnorm_103/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_103/Shape_1"
  op: "Shape"
  input: "conv_103/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_103/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_103/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_103/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_103/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_103/Shape_1"
  input: "bnorm_103/strided_slice_1/stack"
  input: "bnorm_103/strided_slice_1/stack_1"
  input: "bnorm_103/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_103/Shape_2"
  op: "Shape"
  input: "conv_103/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_103/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_103/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_103/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_103/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_103/Shape_2"
  input: "bnorm_103/strided_slice_2/stack"
  input: "bnorm_103/strided_slice_2/stack_1"
  input: "bnorm_103/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_103/Rank/packed"
  op: "Pack"
  input: "bnorm_103/strided_slice"
  input: "bnorm_103/strided_slice_1"
  input: "bnorm_103/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_103/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_103/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_103/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_103/range"
  op: "Range"
  input: "bnorm_103/range/start"
  input: "bnorm_103/Rank"
  input: "bnorm_103/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_103/Prod/input"
  op: "Pack"
  input: "bnorm_103/strided_slice"
  input: "bnorm_103/strided_slice_1"
  input: "bnorm_103/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_103/Prod"
  op: "Prod"
  input: "bnorm_103/Prod/input"
  input: "bnorm_103/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_103/Cast"
  op: "Cast"
  input: "bnorm_103/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_103/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_103/sub"
  op: "Sub"
  input: "bnorm_103/Cast"
  input: "bnorm_103/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_103/truediv"
  op: "RealDiv"
  input: "bnorm_103/Cast"
  input: "bnorm_103/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_103/mul"
  op: "Mul"
  input: "bnorm_103/FusedBatchNormV3:2"
  input: "bnorm_103/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_103/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_103/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_103/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_103/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_103/sub_1"
  op: "Sub"
  input: "bnorm_103/ReadVariableOp_2"
  input: "bnorm_103/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_103/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_103/mul_1"
  op: "Mul"
  input: "bnorm_103/sub_1"
  input: "bnorm_103/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_103/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_103/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_103/moving_mean"
  input: "bnorm_103/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_103/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_103/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_103/moving_mean"
  input: "^bnorm_103/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_103/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_103/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_103/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_103/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_103/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_103/sub_2"
  op: "Sub"
  input: "bnorm_103/ReadVariableOp_4"
  input: "bnorm_103/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_103/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_103/mul_2"
  op: "Mul"
  input: "bnorm_103/sub_2"
  input: "bnorm_103/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_103/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_103/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_103/moving_variance"
  input: "bnorm_103/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_103/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_103/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_103/moving_variance"
  input: "^bnorm_103/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_103/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_103/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_103/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_103/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_103/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_103/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_103/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_103/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_103/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_103/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_103/convolution"
  input: "bnorm_103/ReadVariableOp_6"
  input: "bnorm_103/ReadVariableOp_7"
  input: "bnorm_103/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_103/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_103/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_103/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_80/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "conv_80/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02083333395421505
      }
    }
  }
}
node {
  name: "conv_80/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02083333395421505
      }
    }
  }
}
node {
  name: "conv_80/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_80/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5053380
    }
  }
}
node {
  name: "conv_80/random_uniform/sub"
  op: "Sub"
  input: "conv_80/random_uniform/max"
  input: "conv_80/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_80/random_uniform/mul"
  op: "Mul"
  input: "conv_80/random_uniform/RandomUniform"
  input: "conv_80/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_80/random_uniform"
  op: "Add"
  input: "conv_80/random_uniform/mul"
  input: "conv_80/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_80/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_80/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_80/kernel"
    }
  }
}
node {
  name: "conv_80/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_80/kernel"
}
node {
  name: "conv_80/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_80/kernel"
  input: "conv_80/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_80/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_80/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_80/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_80/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_80/convolution"
  op: "Conv2D"
  input: "leaky_79/LeakyRelu"
  input: "conv_80/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_92/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv_92/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02946278266608715
      }
    }
  }
}
node {
  name: "conv_92/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02946278266608715
      }
    }
  }
}
node {
  name: "conv_92/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_92/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 562923
    }
  }
}
node {
  name: "conv_92/random_uniform/sub"
  op: "Sub"
  input: "conv_92/random_uniform/max"
  input: "conv_92/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_92/random_uniform/mul"
  op: "Mul"
  input: "conv_92/random_uniform/RandomUniform"
  input: "conv_92/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_92/random_uniform"
  op: "Add"
  input: "conv_92/random_uniform/mul"
  input: "conv_92/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_92/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_92/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_92/kernel"
    }
  }
}
node {
  name: "conv_92/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_92/kernel"
}
node {
  name: "conv_92/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_92/kernel"
  input: "conv_92/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_92/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_92/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_92/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_92/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_92/convolution"
  op: "Conv2D"
  input: "leaky_91/LeakyRelu"
  input: "conv_92/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_104/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv_104/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0416666679084301
      }
    }
  }
}
node {
  name: "conv_104/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084301
      }
    }
  }
}
node {
  name: "conv_104/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_104/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7853876
    }
  }
}
node {
  name: "conv_104/random_uniform/sub"
  op: "Sub"
  input: "conv_104/random_uniform/max"
  input: "conv_104/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_104/random_uniform/mul"
  op: "Mul"
  input: "conv_104/random_uniform/RandomUniform"
  input: "conv_104/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_104/random_uniform"
  op: "Add"
  input: "conv_104/random_uniform/mul"
  input: "conv_104/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_104/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_104/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_104/kernel"
    }
  }
}
node {
  name: "conv_104/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_104/kernel"
}
node {
  name: "conv_104/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_104/kernel"
  input: "conv_104/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_104/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_104/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_104/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_104/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_104/convolution"
  op: "Conv2D"
  input: "leaky_103/LeakyRelu"
  input: "conv_104/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_80/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_80/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_80/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_80/gamma"
    }
  }
}
node {
  name: "bnorm_80/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_80/gamma"
}
node {
  name: "bnorm_80/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_80/gamma"
  input: "bnorm_80/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_80/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_80/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_80/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_80/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_80/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_80/beta"
    }
  }
}
node {
  name: "bnorm_80/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_80/beta"
}
node {
  name: "bnorm_80/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_80/beta"
  input: "bnorm_80/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_80/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_80/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_80/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_80/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_80/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_80/moving_mean"
    }
  }
}
node {
  name: "bnorm_80/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_80/moving_mean"
}
node {
  name: "bnorm_80/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_80/moving_mean"
  input: "bnorm_80/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_80/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_80/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_80/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_80/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_80/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_80/moving_variance"
    }
  }
}
node {
  name: "bnorm_80/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_80/moving_variance"
}
node {
  name: "bnorm_80/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_80/moving_variance"
  input: "bnorm_80/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_80/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_80/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_80/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_80/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_80/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_80/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_80/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_80/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_80/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_80/convolution"
  input: "bnorm_80/ReadVariableOp"
  input: "bnorm_80/ReadVariableOp_1"
  input: "bnorm_80/Const_4"
  input: "bnorm_80/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_80/Shape"
  op: "Shape"
  input: "conv_80/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_80/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_80/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_80/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_80/strided_slice"
  op: "StridedSlice"
  input: "bnorm_80/Shape"
  input: "bnorm_80/strided_slice/stack"
  input: "bnorm_80/strided_slice/stack_1"
  input: "bnorm_80/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_80/Shape_1"
  op: "Shape"
  input: "conv_80/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_80/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_80/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_80/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_80/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_80/Shape_1"
  input: "bnorm_80/strided_slice_1/stack"
  input: "bnorm_80/strided_slice_1/stack_1"
  input: "bnorm_80/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_80/Shape_2"
  op: "Shape"
  input: "conv_80/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_80/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_80/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_80/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_80/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_80/Shape_2"
  input: "bnorm_80/strided_slice_2/stack"
  input: "bnorm_80/strided_slice_2/stack_1"
  input: "bnorm_80/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_80/Rank/packed"
  op: "Pack"
  input: "bnorm_80/strided_slice"
  input: "bnorm_80/strided_slice_1"
  input: "bnorm_80/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_80/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_80/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_80/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_80/range"
  op: "Range"
  input: "bnorm_80/range/start"
  input: "bnorm_80/Rank"
  input: "bnorm_80/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_80/Prod/input"
  op: "Pack"
  input: "bnorm_80/strided_slice"
  input: "bnorm_80/strided_slice_1"
  input: "bnorm_80/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_80/Prod"
  op: "Prod"
  input: "bnorm_80/Prod/input"
  input: "bnorm_80/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_80/Cast"
  op: "Cast"
  input: "bnorm_80/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_80/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_80/sub"
  op: "Sub"
  input: "bnorm_80/Cast"
  input: "bnorm_80/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_80/truediv"
  op: "RealDiv"
  input: "bnorm_80/Cast"
  input: "bnorm_80/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_80/mul"
  op: "Mul"
  input: "bnorm_80/FusedBatchNormV3:2"
  input: "bnorm_80/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_80/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_80/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_80/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_80/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_80/sub_1"
  op: "Sub"
  input: "bnorm_80/ReadVariableOp_2"
  input: "bnorm_80/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_80/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_80/mul_1"
  op: "Mul"
  input: "bnorm_80/sub_1"
  input: "bnorm_80/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_80/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_80/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_80/moving_mean"
  input: "bnorm_80/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_80/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_80/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_80/moving_mean"
  input: "^bnorm_80/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_80/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_80/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_80/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_80/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_80/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_80/sub_2"
  op: "Sub"
  input: "bnorm_80/ReadVariableOp_4"
  input: "bnorm_80/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_80/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_80/mul_2"
  op: "Mul"
  input: "bnorm_80/sub_2"
  input: "bnorm_80/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_80/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_80/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_80/moving_variance"
  input: "bnorm_80/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_80/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_80/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_80/moving_variance"
  input: "^bnorm_80/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_80/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_80/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_80/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_80/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_80/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_80/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_80/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_80/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_80/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_80/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_80/convolution"
  input: "bnorm_80/ReadVariableOp_6"
  input: "bnorm_80/ReadVariableOp_7"
  input: "bnorm_80/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_80/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_92/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_92/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_92/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_92/gamma"
    }
  }
}
node {
  name: "bnorm_92/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_92/gamma"
}
node {
  name: "bnorm_92/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_92/gamma"
  input: "bnorm_92/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_92/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_92/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_92/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_92/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_92/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_92/beta"
    }
  }
}
node {
  name: "bnorm_92/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_92/beta"
}
node {
  name: "bnorm_92/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_92/beta"
  input: "bnorm_92/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_92/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_92/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_92/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_92/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_92/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_92/moving_mean"
    }
  }
}
node {
  name: "bnorm_92/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_92/moving_mean"
}
node {
  name: "bnorm_92/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_92/moving_mean"
  input: "bnorm_92/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_92/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_92/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_92/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_92/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_92/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_92/moving_variance"
    }
  }
}
node {
  name: "bnorm_92/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_92/moving_variance"
}
node {
  name: "bnorm_92/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_92/moving_variance"
  input: "bnorm_92/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_92/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_92/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_92/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_92/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_92/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_92/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_92/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_92/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_92/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_92/convolution"
  input: "bnorm_92/ReadVariableOp"
  input: "bnorm_92/ReadVariableOp_1"
  input: "bnorm_92/Const_4"
  input: "bnorm_92/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_92/Shape"
  op: "Shape"
  input: "conv_92/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_92/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_92/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_92/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_92/strided_slice"
  op: "StridedSlice"
  input: "bnorm_92/Shape"
  input: "bnorm_92/strided_slice/stack"
  input: "bnorm_92/strided_slice/stack_1"
  input: "bnorm_92/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_92/Shape_1"
  op: "Shape"
  input: "conv_92/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_92/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_92/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_92/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_92/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_92/Shape_1"
  input: "bnorm_92/strided_slice_1/stack"
  input: "bnorm_92/strided_slice_1/stack_1"
  input: "bnorm_92/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_92/Shape_2"
  op: "Shape"
  input: "conv_92/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_92/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_92/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_92/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_92/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_92/Shape_2"
  input: "bnorm_92/strided_slice_2/stack"
  input: "bnorm_92/strided_slice_2/stack_1"
  input: "bnorm_92/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_92/Rank/packed"
  op: "Pack"
  input: "bnorm_92/strided_slice"
  input: "bnorm_92/strided_slice_1"
  input: "bnorm_92/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_92/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_92/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_92/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_92/range"
  op: "Range"
  input: "bnorm_92/range/start"
  input: "bnorm_92/Rank"
  input: "bnorm_92/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_92/Prod/input"
  op: "Pack"
  input: "bnorm_92/strided_slice"
  input: "bnorm_92/strided_slice_1"
  input: "bnorm_92/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_92/Prod"
  op: "Prod"
  input: "bnorm_92/Prod/input"
  input: "bnorm_92/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_92/Cast"
  op: "Cast"
  input: "bnorm_92/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_92/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_92/sub"
  op: "Sub"
  input: "bnorm_92/Cast"
  input: "bnorm_92/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_92/truediv"
  op: "RealDiv"
  input: "bnorm_92/Cast"
  input: "bnorm_92/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_92/mul"
  op: "Mul"
  input: "bnorm_92/FusedBatchNormV3:2"
  input: "bnorm_92/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_92/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_92/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_92/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_92/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_92/sub_1"
  op: "Sub"
  input: "bnorm_92/ReadVariableOp_2"
  input: "bnorm_92/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_92/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_92/mul_1"
  op: "Mul"
  input: "bnorm_92/sub_1"
  input: "bnorm_92/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_92/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_92/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_92/moving_mean"
  input: "bnorm_92/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_92/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_92/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_92/moving_mean"
  input: "^bnorm_92/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_92/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_92/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_92/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_92/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_92/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_92/sub_2"
  op: "Sub"
  input: "bnorm_92/ReadVariableOp_4"
  input: "bnorm_92/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_92/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_92/mul_2"
  op: "Mul"
  input: "bnorm_92/sub_2"
  input: "bnorm_92/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_92/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_92/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_92/moving_variance"
  input: "bnorm_92/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_92/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_92/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_92/moving_variance"
  input: "^bnorm_92/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_92/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_92/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_92/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_92/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_92/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_92/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_92/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_92/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_92/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_92/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_92/convolution"
  input: "bnorm_92/ReadVariableOp_6"
  input: "bnorm_92/ReadVariableOp_7"
  input: "bnorm_92/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_92/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_104/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_104/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_104/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_104/gamma"
    }
  }
}
node {
  name: "bnorm_104/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_104/gamma"
}
node {
  name: "bnorm_104/gamma/Assign"
  op: "AssignVariableOp"
  input: "bnorm_104/gamma"
  input: "bnorm_104/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_104/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_104/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_104/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_104/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_104/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_104/beta"
    }
  }
}
node {
  name: "bnorm_104/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_104/beta"
}
node {
  name: "bnorm_104/beta/Assign"
  op: "AssignVariableOp"
  input: "bnorm_104/beta"
  input: "bnorm_104/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_104/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_104/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_104/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bnorm_104/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_104/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_104/moving_mean"
    }
  }
}
node {
  name: "bnorm_104/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_104/moving_mean"
}
node {
  name: "bnorm_104/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "bnorm_104/moving_mean"
  input: "bnorm_104/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_104/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_104/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_104/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bnorm_104/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_104/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bnorm_104/moving_variance"
    }
  }
}
node {
  name: "bnorm_104/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_104/moving_variance"
}
node {
  name: "bnorm_104/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "bnorm_104/moving_variance"
  input: "bnorm_104/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_104/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_104/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_104/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_104/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_104/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_104/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_104/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_104/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "bnorm_104/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv_104/convolution"
  input: "bnorm_104/ReadVariableOp"
  input: "bnorm_104/ReadVariableOp_1"
  input: "bnorm_104/Const_4"
  input: "bnorm_104/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "bnorm_104/Shape"
  op: "Shape"
  input: "conv_104/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_104/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_104/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_104/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_104/strided_slice"
  op: "StridedSlice"
  input: "bnorm_104/Shape"
  input: "bnorm_104/strided_slice/stack"
  input: "bnorm_104/strided_slice/stack_1"
  input: "bnorm_104/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_104/Shape_1"
  op: "Shape"
  input: "conv_104/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_104/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_104/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_104/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_104/strided_slice_1"
  op: "StridedSlice"
  input: "bnorm_104/Shape_1"
  input: "bnorm_104/strided_slice_1/stack"
  input: "bnorm_104/strided_slice_1/stack_1"
  input: "bnorm_104/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_104/Shape_2"
  op: "Shape"
  input: "conv_104/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_104/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bnorm_104/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bnorm_104/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_104/strided_slice_2"
  op: "StridedSlice"
  input: "bnorm_104/Shape_2"
  input: "bnorm_104/strided_slice_2/stack"
  input: "bnorm_104/strided_slice_2/stack_1"
  input: "bnorm_104/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bnorm_104/Rank/packed"
  op: "Pack"
  input: "bnorm_104/strided_slice"
  input: "bnorm_104/strided_slice_1"
  input: "bnorm_104/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_104/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_104/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bnorm_104/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bnorm_104/range"
  op: "Range"
  input: "bnorm_104/range/start"
  input: "bnorm_104/Rank"
  input: "bnorm_104/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bnorm_104/Prod/input"
  op: "Pack"
  input: "bnorm_104/strided_slice"
  input: "bnorm_104/strided_slice_1"
  input: "bnorm_104/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bnorm_104/Prod"
  op: "Prod"
  input: "bnorm_104/Prod/input"
  input: "bnorm_104/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_104/Cast"
  op: "Cast"
  input: "bnorm_104/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "bnorm_104/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "bnorm_104/sub"
  op: "Sub"
  input: "bnorm_104/Cast"
  input: "bnorm_104/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_104/truediv"
  op: "RealDiv"
  input: "bnorm_104/Cast"
  input: "bnorm_104/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_104/mul"
  op: "Mul"
  input: "bnorm_104/FusedBatchNormV3:2"
  input: "bnorm_104/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_104/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_104/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_104/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_104/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_104/sub_1"
  op: "Sub"
  input: "bnorm_104/ReadVariableOp_2"
  input: "bnorm_104/FusedBatchNormV3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_104/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_104/mul_1"
  op: "Mul"
  input: "bnorm_104/sub_1"
  input: "bnorm_104/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_104/moving_mean"
      }
    }
  }
}
node {
  name: "bnorm_104/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "bnorm_104/moving_mean"
  input: "bnorm_104/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_104/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_104/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_104/moving_mean"
  input: "^bnorm_104/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_104/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_104/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_104/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "bnorm_104/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_104/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_104/sub_2"
  op: "Sub"
  input: "bnorm_104/ReadVariableOp_4"
  input: "bnorm_104/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_104/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_104/mul_2"
  op: "Mul"
  input: "bnorm_104/sub_2"
  input: "bnorm_104/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_104/moving_variance"
      }
    }
  }
}
node {
  name: "bnorm_104/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "bnorm_104/moving_variance"
  input: "bnorm_104/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_104/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_104/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bnorm_104/moving_variance"
  input: "^bnorm_104/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bnorm_104/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_104/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_104/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_104/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_104/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_104/FusedBatchNormV3_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bnorm_104/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_104/FusedBatchNormV3_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_104/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bnorm_104/FusedBatchNormV3_1"
  op: "FusedBatchNormV3"
  input: "conv_104/convolution"
  input: "bnorm_104/ReadVariableOp_6"
  input: "bnorm_104/ReadVariableOp_7"
  input: "bnorm_104/FusedBatchNormV3_1/ReadVariableOp"
  input: "bnorm_104/FusedBatchNormV3_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "leaky_80/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_80/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "leaky_92/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_92/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "leaky_104/LeakyRelu"
  op: "LeakyRelu"
  input: "bnorm_104/FusedBatchNormV3_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.10000000149011612
    }
  }
}
node {
  name: "conv_81/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\022\000\000\000"
      }
    }
  }
}
node {
  name: "conv_81/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07588252425193787
      }
    }
  }
}
node {
  name: "conv_81/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07588252425193787
      }
    }
  }
}
node {
  name: "conv_81/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_81/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4952187
    }
  }
}
node {
  name: "conv_81/random_uniform/sub"
  op: "Sub"
  input: "conv_81/random_uniform/max"
  input: "conv_81/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_81/random_uniform/mul"
  op: "Mul"
  input: "conv_81/random_uniform/RandomUniform"
  input: "conv_81/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_81/random_uniform"
  op: "Add"
  input: "conv_81/random_uniform/mul"
  input: "conv_81/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_81/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_81/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 18
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_81/kernel"
    }
  }
}
node {
  name: "conv_81/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_81/kernel"
}
node {
  name: "conv_81/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_81/kernel"
  input: "conv_81/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_81/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_81/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_81/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 18
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_81/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_81/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 18
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_81/bias"
    }
  }
}
node {
  name: "conv_81/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_81/bias"
}
node {
  name: "conv_81/bias/Assign"
  op: "AssignVariableOp"
  input: "conv_81/bias"
  input: "conv_81/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_81/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_81/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_81/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_81/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_81/convolution"
  op: "Conv2D"
  input: "leaky_80/LeakyRelu"
  input: "conv_81/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_81/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_81/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_81/BiasAdd"
  op: "BiasAdd"
  input: "conv_81/convolution"
  input: "conv_81/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv_93/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\022\000\000\000"
      }
    }
  }
}
node {
  name: "conv_93/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1063990369439125
      }
    }
  }
}
node {
  name: "conv_93/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1063990369439125
      }
    }
  }
}
node {
  name: "conv_93/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_93/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1319821
    }
  }
}
node {
  name: "conv_93/random_uniform/sub"
  op: "Sub"
  input: "conv_93/random_uniform/max"
  input: "conv_93/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_93/random_uniform/mul"
  op: "Mul"
  input: "conv_93/random_uniform/RandomUniform"
  input: "conv_93/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_93/random_uniform"
  op: "Add"
  input: "conv_93/random_uniform/mul"
  input: "conv_93/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_93/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_93/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 18
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_93/kernel"
    }
  }
}
node {
  name: "conv_93/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_93/kernel"
}
node {
  name: "conv_93/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_93/kernel"
  input: "conv_93/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_93/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_93/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_93/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 18
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_93/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_93/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 18
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_93/bias"
    }
  }
}
node {
  name: "conv_93/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_93/bias"
}
node {
  name: "conv_93/bias/Assign"
  op: "AssignVariableOp"
  input: "conv_93/bias"
  input: "conv_93/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_93/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_93/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_93/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_93/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_93/convolution"
  op: "Conv2D"
  input: "leaky_92/LeakyRelu"
  input: "conv_93/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_93/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_93/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_93/BiasAdd"
  op: "BiasAdd"
  input: "conv_93/convolution"
  input: "conv_93/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv_105/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\022\000\000\000"
      }
    }
  }
}
node {
  name: "conv_105/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14797908067703247
      }
    }
  }
}
node {
  name: "conv_105/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14797908067703247
      }
    }
  }
}
node {
  name: "conv_105/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_105/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1719874
    }
  }
}
node {
  name: "conv_105/random_uniform/sub"
  op: "Sub"
  input: "conv_105/random_uniform/max"
  input: "conv_105/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_105/random_uniform/mul"
  op: "Mul"
  input: "conv_105/random_uniform/RandomUniform"
  input: "conv_105/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_105/random_uniform"
  op: "Add"
  input: "conv_105/random_uniform/mul"
  input: "conv_105/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_105/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_105/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 18
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_105/kernel"
    }
  }
}
node {
  name: "conv_105/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_105/kernel"
}
node {
  name: "conv_105/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_105/kernel"
  input: "conv_105/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_105/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_105/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_105/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 18
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_105/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_105/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 18
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_105/bias"
    }
  }
}
node {
  name: "conv_105/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_105/bias"
}
node {
  name: "conv_105/bias/Assign"
  op: "AssignVariableOp"
  input: "conv_105/bias"
  input: "conv_105/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_105/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_105/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_105/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_105/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_105/convolution"
  op: "Conv2D"
  input: "leaky_104/LeakyRelu"
  input: "conv_105/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_105/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_105/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_105/BiasAdd"
  op: "BiasAdd"
  input: "conv_105/convolution"
  input: "conv_105/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp"
  op: "AssignVariableOp"
  input: "conv_0/kernel"
  input: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_0/kernel"
  input: "^AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "bnorm_0/gamma"
  input: "Placeholder_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "bnorm_0/gamma"
  input: "^AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "bnorm_0/beta"
  input: "Placeholder_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "bnorm_0/beta"
  input: "^AssignVariableOp_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_3"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "bnorm_0/moving_mean"
  input: "Placeholder_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bnorm_0/moving_mean"
  input: "^AssignVariableOp_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_4"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "bnorm_0/moving_variance"
  input: "Placeholder_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bnorm_0/moving_variance"
  input: "^AssignVariableOp_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_5"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "conv_1/kernel"
  input: "Placeholder_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv_1/kernel"
  input: "^AssignVariableOp_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_6"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "bnorm_1/gamma"
  input: "Placeholder_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "bnorm_1/gamma"
  input: "^AssignVariableOp_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_7"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "bnorm_1/beta"
  input: "Placeholder_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "bnorm_1/beta"
  input: "^AssignVariableOp_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_8"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "bnorm_1/moving_mean"
  input: "Placeholder_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_8"
  op: "ReadVariableOp"
  input: "bnorm_1/moving_mean"
  input: "^AssignVariableOp_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_9"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "bnorm_1/moving_variance"
  input: "Placeholder_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_9"
  op: "ReadVariableOp"
  input: "bnorm_1/moving_variance"
  input: "^AssignVariableOp_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_10"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "conv_2/kernel"
  input: "Placeholder_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_10"
  op: "ReadVariableOp"
  input: "conv_2/kernel"
  input: "^AssignVariableOp_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_11"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "bnorm_2/gamma"
  input: "Placeholder_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_11"
  op: "ReadVariableOp"
  input: "bnorm_2/gamma"
  input: "^AssignVariableOp_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_12"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "bnorm_2/beta"
  input: "Placeholder_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_12"
  op: "ReadVariableOp"
  input: "bnorm_2/beta"
  input: "^AssignVariableOp_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_13"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "bnorm_2/moving_mean"
  input: "Placeholder_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_13"
  op: "ReadVariableOp"
  input: "bnorm_2/moving_mean"
  input: "^AssignVariableOp_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_14"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "bnorm_2/moving_variance"
  input: "Placeholder_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_14"
  op: "ReadVariableOp"
  input: "bnorm_2/moving_variance"
  input: "^AssignVariableOp_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_15"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "conv_3/kernel"
  input: "Placeholder_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_15"
  op: "ReadVariableOp"
  input: "conv_3/kernel"
  input: "^AssignVariableOp_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_16"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "bnorm_3/gamma"
  input: "Placeholder_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_16"
  op: "ReadVariableOp"
  input: "bnorm_3/gamma"
  input: "^AssignVariableOp_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_17"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "bnorm_3/beta"
  input: "Placeholder_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_17"
  op: "ReadVariableOp"
  input: "bnorm_3/beta"
  input: "^AssignVariableOp_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_18"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "bnorm_3/moving_mean"
  input: "Placeholder_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_18"
  op: "ReadVariableOp"
  input: "bnorm_3/moving_mean"
  input: "^AssignVariableOp_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_19"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "bnorm_3/moving_variance"
  input: "Placeholder_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_19"
  op: "ReadVariableOp"
  input: "bnorm_3/moving_variance"
  input: "^AssignVariableOp_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_20"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "conv_5/kernel"
  input: "Placeholder_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_20"
  op: "ReadVariableOp"
  input: "conv_5/kernel"
  input: "^AssignVariableOp_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_21"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "bnorm_5/gamma"
  input: "Placeholder_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_21"
  op: "ReadVariableOp"
  input: "bnorm_5/gamma"
  input: "^AssignVariableOp_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_22"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_22"
  op: "AssignVariableOp"
  input: "bnorm_5/beta"
  input: "Placeholder_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_22"
  op: "ReadVariableOp"
  input: "bnorm_5/beta"
  input: "^AssignVariableOp_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_23"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_23"
  op: "AssignVariableOp"
  input: "bnorm_5/moving_mean"
  input: "Placeholder_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_23"
  op: "ReadVariableOp"
  input: "bnorm_5/moving_mean"
  input: "^AssignVariableOp_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_24"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_24"
  op: "AssignVariableOp"
  input: "bnorm_5/moving_variance"
  input: "Placeholder_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_24"
  op: "ReadVariableOp"
  input: "bnorm_5/moving_variance"
  input: "^AssignVariableOp_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_25"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_25"
  op: "AssignVariableOp"
  input: "conv_6/kernel"
  input: "Placeholder_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_25"
  op: "ReadVariableOp"
  input: "conv_6/kernel"
  input: "^AssignVariableOp_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_26"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_26"
  op: "AssignVariableOp"
  input: "bnorm_6/gamma"
  input: "Placeholder_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_26"
  op: "ReadVariableOp"
  input: "bnorm_6/gamma"
  input: "^AssignVariableOp_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_27"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_27"
  op: "AssignVariableOp"
  input: "bnorm_6/beta"
  input: "Placeholder_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_27"
  op: "ReadVariableOp"
  input: "bnorm_6/beta"
  input: "^AssignVariableOp_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_28"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_28"
  op: "AssignVariableOp"
  input: "bnorm_6/moving_mean"
  input: "Placeholder_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_28"
  op: "ReadVariableOp"
  input: "bnorm_6/moving_mean"
  input: "^AssignVariableOp_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_29"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_29"
  op: "AssignVariableOp"
  input: "bnorm_6/moving_variance"
  input: "Placeholder_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_29"
  op: "ReadVariableOp"
  input: "bnorm_6/moving_variance"
  input: "^AssignVariableOp_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_30"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_30"
  op: "AssignVariableOp"
  input: "conv_7/kernel"
  input: "Placeholder_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_30"
  op: "ReadVariableOp"
  input: "conv_7/kernel"
  input: "^AssignVariableOp_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_31"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_31"
  op: "AssignVariableOp"
  input: "bnorm_7/gamma"
  input: "Placeholder_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_31"
  op: "ReadVariableOp"
  input: "bnorm_7/gamma"
  input: "^AssignVariableOp_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_32"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_32"
  op: "AssignVariableOp"
  input: "bnorm_7/beta"
  input: "Placeholder_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_32"
  op: "ReadVariableOp"
  input: "bnorm_7/beta"
  input: "^AssignVariableOp_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_33"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_33"
  op: "AssignVariableOp"
  input: "bnorm_7/moving_mean"
  input: "Placeholder_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_33"
  op: "ReadVariableOp"
  input: "bnorm_7/moving_mean"
  input: "^AssignVariableOp_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_34"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_34"
  op: "AssignVariableOp"
  input: "bnorm_7/moving_variance"
  input: "Placeholder_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_34"
  op: "ReadVariableOp"
  input: "bnorm_7/moving_variance"
  input: "^AssignVariableOp_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_35"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_35"
  op: "AssignVariableOp"
  input: "conv_9/kernel"
  input: "Placeholder_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_35"
  op: "ReadVariableOp"
  input: "conv_9/kernel"
  input: "^AssignVariableOp_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_36"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_36"
  op: "AssignVariableOp"
  input: "bnorm_9/gamma"
  input: "Placeholder_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_36"
  op: "ReadVariableOp"
  input: "bnorm_9/gamma"
  input: "^AssignVariableOp_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_37"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_37"
  op: "AssignVariableOp"
  input: "bnorm_9/beta"
  input: "Placeholder_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_37"
  op: "ReadVariableOp"
  input: "bnorm_9/beta"
  input: "^AssignVariableOp_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_38"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_38"
  op: "AssignVariableOp"
  input: "bnorm_9/moving_mean"
  input: "Placeholder_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_38"
  op: "ReadVariableOp"
  input: "bnorm_9/moving_mean"
  input: "^AssignVariableOp_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_39"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_39"
  op: "AssignVariableOp"
  input: "bnorm_9/moving_variance"
  input: "Placeholder_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_39"
  op: "ReadVariableOp"
  input: "bnorm_9/moving_variance"
  input: "^AssignVariableOp_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_40"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_40"
  op: "AssignVariableOp"
  input: "conv_10/kernel"
  input: "Placeholder_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_40"
  op: "ReadVariableOp"
  input: "conv_10/kernel"
  input: "^AssignVariableOp_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_41"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_41"
  op: "AssignVariableOp"
  input: "bnorm_10/gamma"
  input: "Placeholder_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_41"
  op: "ReadVariableOp"
  input: "bnorm_10/gamma"
  input: "^AssignVariableOp_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_42"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_42"
  op: "AssignVariableOp"
  input: "bnorm_10/beta"
  input: "Placeholder_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_42"
  op: "ReadVariableOp"
  input: "bnorm_10/beta"
  input: "^AssignVariableOp_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_43"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_43"
  op: "AssignVariableOp"
  input: "bnorm_10/moving_mean"
  input: "Placeholder_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_43"
  op: "ReadVariableOp"
  input: "bnorm_10/moving_mean"
  input: "^AssignVariableOp_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_44"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_44"
  op: "AssignVariableOp"
  input: "bnorm_10/moving_variance"
  input: "Placeholder_44"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_44"
  op: "ReadVariableOp"
  input: "bnorm_10/moving_variance"
  input: "^AssignVariableOp_44"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_45"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_45"
  op: "AssignVariableOp"
  input: "conv_12/kernel"
  input: "Placeholder_45"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_45"
  op: "ReadVariableOp"
  input: "conv_12/kernel"
  input: "^AssignVariableOp_45"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_46"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_46"
  op: "AssignVariableOp"
  input: "bnorm_12/gamma"
  input: "Placeholder_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_46"
  op: "ReadVariableOp"
  input: "bnorm_12/gamma"
  input: "^AssignVariableOp_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_47"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_47"
  op: "AssignVariableOp"
  input: "bnorm_12/beta"
  input: "Placeholder_47"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_47"
  op: "ReadVariableOp"
  input: "bnorm_12/beta"
  input: "^AssignVariableOp_47"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_48"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_48"
  op: "AssignVariableOp"
  input: "bnorm_12/moving_mean"
  input: "Placeholder_48"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_48"
  op: "ReadVariableOp"
  input: "bnorm_12/moving_mean"
  input: "^AssignVariableOp_48"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_49"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_49"
  op: "AssignVariableOp"
  input: "bnorm_12/moving_variance"
  input: "Placeholder_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_49"
  op: "ReadVariableOp"
  input: "bnorm_12/moving_variance"
  input: "^AssignVariableOp_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_50"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_50"
  op: "AssignVariableOp"
  input: "conv_13/kernel"
  input: "Placeholder_50"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_50"
  op: "ReadVariableOp"
  input: "conv_13/kernel"
  input: "^AssignVariableOp_50"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_51"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_51"
  op: "AssignVariableOp"
  input: "bnorm_13/gamma"
  input: "Placeholder_51"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_51"
  op: "ReadVariableOp"
  input: "bnorm_13/gamma"
  input: "^AssignVariableOp_51"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_52"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_52"
  op: "AssignVariableOp"
  input: "bnorm_13/beta"
  input: "Placeholder_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_52"
  op: "ReadVariableOp"
  input: "bnorm_13/beta"
  input: "^AssignVariableOp_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_53"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_53"
  op: "AssignVariableOp"
  input: "bnorm_13/moving_mean"
  input: "Placeholder_53"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_53"
  op: "ReadVariableOp"
  input: "bnorm_13/moving_mean"
  input: "^AssignVariableOp_53"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_54"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_54"
  op: "AssignVariableOp"
  input: "bnorm_13/moving_variance"
  input: "Placeholder_54"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_54"
  op: "ReadVariableOp"
  input: "bnorm_13/moving_variance"
  input: "^AssignVariableOp_54"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_55"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_55"
  op: "AssignVariableOp"
  input: "conv_14/kernel"
  input: "Placeholder_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_55"
  op: "ReadVariableOp"
  input: "conv_14/kernel"
  input: "^AssignVariableOp_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_56"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_56"
  op: "AssignVariableOp"
  input: "bnorm_14/gamma"
  input: "Placeholder_56"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_56"
  op: "ReadVariableOp"
  input: "bnorm_14/gamma"
  input: "^AssignVariableOp_56"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_57"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_57"
  op: "AssignVariableOp"
  input: "bnorm_14/beta"
  input: "Placeholder_57"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_57"
  op: "ReadVariableOp"
  input: "bnorm_14/beta"
  input: "^AssignVariableOp_57"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_58"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_58"
  op: "AssignVariableOp"
  input: "bnorm_14/moving_mean"
  input: "Placeholder_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_58"
  op: "ReadVariableOp"
  input: "bnorm_14/moving_mean"
  input: "^AssignVariableOp_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_59"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_59"
  op: "AssignVariableOp"
  input: "bnorm_14/moving_variance"
  input: "Placeholder_59"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_59"
  op: "ReadVariableOp"
  input: "bnorm_14/moving_variance"
  input: "^AssignVariableOp_59"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_60"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_60"
  op: "AssignVariableOp"
  input: "conv_16/kernel"
  input: "Placeholder_60"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_60"
  op: "ReadVariableOp"
  input: "conv_16/kernel"
  input: "^AssignVariableOp_60"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_61"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_61"
  op: "AssignVariableOp"
  input: "bnorm_16/gamma"
  input: "Placeholder_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_61"
  op: "ReadVariableOp"
  input: "bnorm_16/gamma"
  input: "^AssignVariableOp_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_62"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_62"
  op: "AssignVariableOp"
  input: "bnorm_16/beta"
  input: "Placeholder_62"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_62"
  op: "ReadVariableOp"
  input: "bnorm_16/beta"
  input: "^AssignVariableOp_62"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_63"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_63"
  op: "AssignVariableOp"
  input: "bnorm_16/moving_mean"
  input: "Placeholder_63"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_63"
  op: "ReadVariableOp"
  input: "bnorm_16/moving_mean"
  input: "^AssignVariableOp_63"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_64"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_64"
  op: "AssignVariableOp"
  input: "bnorm_16/moving_variance"
  input: "Placeholder_64"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_64"
  op: "ReadVariableOp"
  input: "bnorm_16/moving_variance"
  input: "^AssignVariableOp_64"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_65"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_65"
  op: "AssignVariableOp"
  input: "conv_17/kernel"
  input: "Placeholder_65"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_65"
  op: "ReadVariableOp"
  input: "conv_17/kernel"
  input: "^AssignVariableOp_65"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_66"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_66"
  op: "AssignVariableOp"
  input: "bnorm_17/gamma"
  input: "Placeholder_66"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_66"
  op: "ReadVariableOp"
  input: "bnorm_17/gamma"
  input: "^AssignVariableOp_66"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_67"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_67"
  op: "AssignVariableOp"
  input: "bnorm_17/beta"
  input: "Placeholder_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_67"
  op: "ReadVariableOp"
  input: "bnorm_17/beta"
  input: "^AssignVariableOp_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_68"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_68"
  op: "AssignVariableOp"
  input: "bnorm_17/moving_mean"
  input: "Placeholder_68"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_68"
  op: "ReadVariableOp"
  input: "bnorm_17/moving_mean"
  input: "^AssignVariableOp_68"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_69"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_69"
  op: "AssignVariableOp"
  input: "bnorm_17/moving_variance"
  input: "Placeholder_69"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_69"
  op: "ReadVariableOp"
  input: "bnorm_17/moving_variance"
  input: "^AssignVariableOp_69"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_70"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_70"
  op: "AssignVariableOp"
  input: "conv_19/kernel"
  input: "Placeholder_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_70"
  op: "ReadVariableOp"
  input: "conv_19/kernel"
  input: "^AssignVariableOp_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_71"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_71"
  op: "AssignVariableOp"
  input: "bnorm_19/gamma"
  input: "Placeholder_71"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_71"
  op: "ReadVariableOp"
  input: "bnorm_19/gamma"
  input: "^AssignVariableOp_71"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_72"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_72"
  op: "AssignVariableOp"
  input: "bnorm_19/beta"
  input: "Placeholder_72"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_72"
  op: "ReadVariableOp"
  input: "bnorm_19/beta"
  input: "^AssignVariableOp_72"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_73"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_73"
  op: "AssignVariableOp"
  input: "bnorm_19/moving_mean"
  input: "Placeholder_73"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_73"
  op: "ReadVariableOp"
  input: "bnorm_19/moving_mean"
  input: "^AssignVariableOp_73"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_74"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_74"
  op: "AssignVariableOp"
  input: "bnorm_19/moving_variance"
  input: "Placeholder_74"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_74"
  op: "ReadVariableOp"
  input: "bnorm_19/moving_variance"
  input: "^AssignVariableOp_74"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_75"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_75"
  op: "AssignVariableOp"
  input: "conv_20/kernel"
  input: "Placeholder_75"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_75"
  op: "ReadVariableOp"
  input: "conv_20/kernel"
  input: "^AssignVariableOp_75"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_76"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_76"
  op: "AssignVariableOp"
  input: "bnorm_20/gamma"
  input: "Placeholder_76"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_76"
  op: "ReadVariableOp"
  input: "bnorm_20/gamma"
  input: "^AssignVariableOp_76"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_77"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_77"
  op: "AssignVariableOp"
  input: "bnorm_20/beta"
  input: "Placeholder_77"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_77"
  op: "ReadVariableOp"
  input: "bnorm_20/beta"
  input: "^AssignVariableOp_77"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_78"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_78"
  op: "AssignVariableOp"
  input: "bnorm_20/moving_mean"
  input: "Placeholder_78"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_78"
  op: "ReadVariableOp"
  input: "bnorm_20/moving_mean"
  input: "^AssignVariableOp_78"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_79"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_79"
  op: "AssignVariableOp"
  input: "bnorm_20/moving_variance"
  input: "Placeholder_79"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_79"
  op: "ReadVariableOp"
  input: "bnorm_20/moving_variance"
  input: "^AssignVariableOp_79"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_80"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_80"
  op: "AssignVariableOp"
  input: "conv_22/kernel"
  input: "Placeholder_80"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_80"
  op: "ReadVariableOp"
  input: "conv_22/kernel"
  input: "^AssignVariableOp_80"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_81"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_81"
  op: "AssignVariableOp"
  input: "bnorm_22/gamma"
  input: "Placeholder_81"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_81"
  op: "ReadVariableOp"
  input: "bnorm_22/gamma"
  input: "^AssignVariableOp_81"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_82"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_82"
  op: "AssignVariableOp"
  input: "bnorm_22/beta"
  input: "Placeholder_82"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_82"
  op: "ReadVariableOp"
  input: "bnorm_22/beta"
  input: "^AssignVariableOp_82"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_83"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_83"
  op: "AssignVariableOp"
  input: "bnorm_22/moving_mean"
  input: "Placeholder_83"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_83"
  op: "ReadVariableOp"
  input: "bnorm_22/moving_mean"
  input: "^AssignVariableOp_83"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_84"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_84"
  op: "AssignVariableOp"
  input: "bnorm_22/moving_variance"
  input: "Placeholder_84"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_84"
  op: "ReadVariableOp"
  input: "bnorm_22/moving_variance"
  input: "^AssignVariableOp_84"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_85"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_85"
  op: "AssignVariableOp"
  input: "conv_23/kernel"
  input: "Placeholder_85"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_85"
  op: "ReadVariableOp"
  input: "conv_23/kernel"
  input: "^AssignVariableOp_85"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_86"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_86"
  op: "AssignVariableOp"
  input: "bnorm_23/gamma"
  input: "Placeholder_86"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_86"
  op: "ReadVariableOp"
  input: "bnorm_23/gamma"
  input: "^AssignVariableOp_86"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_87"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_87"
  op: "AssignVariableOp"
  input: "bnorm_23/beta"
  input: "Placeholder_87"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_87"
  op: "ReadVariableOp"
  input: "bnorm_23/beta"
  input: "^AssignVariableOp_87"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_88"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_88"
  op: "AssignVariableOp"
  input: "bnorm_23/moving_mean"
  input: "Placeholder_88"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_88"
  op: "ReadVariableOp"
  input: "bnorm_23/moving_mean"
  input: "^AssignVariableOp_88"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_89"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_89"
  op: "AssignVariableOp"
  input: "bnorm_23/moving_variance"
  input: "Placeholder_89"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_89"
  op: "ReadVariableOp"
  input: "bnorm_23/moving_variance"
  input: "^AssignVariableOp_89"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_90"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_90"
  op: "AssignVariableOp"
  input: "conv_25/kernel"
  input: "Placeholder_90"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_90"
  op: "ReadVariableOp"
  input: "conv_25/kernel"
  input: "^AssignVariableOp_90"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_91"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_91"
  op: "AssignVariableOp"
  input: "bnorm_25/gamma"
  input: "Placeholder_91"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_91"
  op: "ReadVariableOp"
  input: "bnorm_25/gamma"
  input: "^AssignVariableOp_91"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_92"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_92"
  op: "AssignVariableOp"
  input: "bnorm_25/beta"
  input: "Placeholder_92"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_92"
  op: "ReadVariableOp"
  input: "bnorm_25/beta"
  input: "^AssignVariableOp_92"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_93"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_93"
  op: "AssignVariableOp"
  input: "bnorm_25/moving_mean"
  input: "Placeholder_93"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_93"
  op: "ReadVariableOp"
  input: "bnorm_25/moving_mean"
  input: "^AssignVariableOp_93"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_94"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_94"
  op: "AssignVariableOp"
  input: "bnorm_25/moving_variance"
  input: "Placeholder_94"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_94"
  op: "ReadVariableOp"
  input: "bnorm_25/moving_variance"
  input: "^AssignVariableOp_94"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_95"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_95"
  op: "AssignVariableOp"
  input: "conv_26/kernel"
  input: "Placeholder_95"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_95"
  op: "ReadVariableOp"
  input: "conv_26/kernel"
  input: "^AssignVariableOp_95"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_96"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_96"
  op: "AssignVariableOp"
  input: "bnorm_26/gamma"
  input: "Placeholder_96"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_96"
  op: "ReadVariableOp"
  input: "bnorm_26/gamma"
  input: "^AssignVariableOp_96"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_97"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_97"
  op: "AssignVariableOp"
  input: "bnorm_26/beta"
  input: "Placeholder_97"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_97"
  op: "ReadVariableOp"
  input: "bnorm_26/beta"
  input: "^AssignVariableOp_97"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_98"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_98"
  op: "AssignVariableOp"
  input: "bnorm_26/moving_mean"
  input: "Placeholder_98"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_98"
  op: "ReadVariableOp"
  input: "bnorm_26/moving_mean"
  input: "^AssignVariableOp_98"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_99"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_99"
  op: "AssignVariableOp"
  input: "bnorm_26/moving_variance"
  input: "Placeholder_99"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_99"
  op: "ReadVariableOp"
  input: "bnorm_26/moving_variance"
  input: "^AssignVariableOp_99"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_100"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_100"
  op: "AssignVariableOp"
  input: "conv_28/kernel"
  input: "Placeholder_100"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_100"
  op: "ReadVariableOp"
  input: "conv_28/kernel"
  input: "^AssignVariableOp_100"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_101"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_101"
  op: "AssignVariableOp"
  input: "bnorm_28/gamma"
  input: "Placeholder_101"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_101"
  op: "ReadVariableOp"
  input: "bnorm_28/gamma"
  input: "^AssignVariableOp_101"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_102"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_102"
  op: "AssignVariableOp"
  input: "bnorm_28/beta"
  input: "Placeholder_102"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_102"
  op: "ReadVariableOp"
  input: "bnorm_28/beta"
  input: "^AssignVariableOp_102"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_103"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_103"
  op: "AssignVariableOp"
  input: "bnorm_28/moving_mean"
  input: "Placeholder_103"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_103"
  op: "ReadVariableOp"
  input: "bnorm_28/moving_mean"
  input: "^AssignVariableOp_103"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_104"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_104"
  op: "AssignVariableOp"
  input: "bnorm_28/moving_variance"
  input: "Placeholder_104"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_104"
  op: "ReadVariableOp"
  input: "bnorm_28/moving_variance"
  input: "^AssignVariableOp_104"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_105"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_105"
  op: "AssignVariableOp"
  input: "conv_29/kernel"
  input: "Placeholder_105"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_105"
  op: "ReadVariableOp"
  input: "conv_29/kernel"
  input: "^AssignVariableOp_105"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_106"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_106"
  op: "AssignVariableOp"
  input: "bnorm_29/gamma"
  input: "Placeholder_106"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_106"
  op: "ReadVariableOp"
  input: "bnorm_29/gamma"
  input: "^AssignVariableOp_106"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_107"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_107"
  op: "AssignVariableOp"
  input: "bnorm_29/beta"
  input: "Placeholder_107"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_107"
  op: "ReadVariableOp"
  input: "bnorm_29/beta"
  input: "^AssignVariableOp_107"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_108"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_108"
  op: "AssignVariableOp"
  input: "bnorm_29/moving_mean"
  input: "Placeholder_108"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_108"
  op: "ReadVariableOp"
  input: "bnorm_29/moving_mean"
  input: "^AssignVariableOp_108"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_109"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_109"
  op: "AssignVariableOp"
  input: "bnorm_29/moving_variance"
  input: "Placeholder_109"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_109"
  op: "ReadVariableOp"
  input: "bnorm_29/moving_variance"
  input: "^AssignVariableOp_109"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_110"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_110"
  op: "AssignVariableOp"
  input: "conv_31/kernel"
  input: "Placeholder_110"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_110"
  op: "ReadVariableOp"
  input: "conv_31/kernel"
  input: "^AssignVariableOp_110"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_111"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_111"
  op: "AssignVariableOp"
  input: "bnorm_31/gamma"
  input: "Placeholder_111"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_111"
  op: "ReadVariableOp"
  input: "bnorm_31/gamma"
  input: "^AssignVariableOp_111"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_112"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_112"
  op: "AssignVariableOp"
  input: "bnorm_31/beta"
  input: "Placeholder_112"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_112"
  op: "ReadVariableOp"
  input: "bnorm_31/beta"
  input: "^AssignVariableOp_112"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_113"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_113"
  op: "AssignVariableOp"
  input: "bnorm_31/moving_mean"
  input: "Placeholder_113"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_113"
  op: "ReadVariableOp"
  input: "bnorm_31/moving_mean"
  input: "^AssignVariableOp_113"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_114"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_114"
  op: "AssignVariableOp"
  input: "bnorm_31/moving_variance"
  input: "Placeholder_114"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_114"
  op: "ReadVariableOp"
  input: "bnorm_31/moving_variance"
  input: "^AssignVariableOp_114"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_115"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_115"
  op: "AssignVariableOp"
  input: "conv_32/kernel"
  input: "Placeholder_115"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_115"
  op: "ReadVariableOp"
  input: "conv_32/kernel"
  input: "^AssignVariableOp_115"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_116"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_116"
  op: "AssignVariableOp"
  input: "bnorm_32/gamma"
  input: "Placeholder_116"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_116"
  op: "ReadVariableOp"
  input: "bnorm_32/gamma"
  input: "^AssignVariableOp_116"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_117"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_117"
  op: "AssignVariableOp"
  input: "bnorm_32/beta"
  input: "Placeholder_117"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_117"
  op: "ReadVariableOp"
  input: "bnorm_32/beta"
  input: "^AssignVariableOp_117"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_118"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_118"
  op: "AssignVariableOp"
  input: "bnorm_32/moving_mean"
  input: "Placeholder_118"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_118"
  op: "ReadVariableOp"
  input: "bnorm_32/moving_mean"
  input: "^AssignVariableOp_118"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_119"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_119"
  op: "AssignVariableOp"
  input: "bnorm_32/moving_variance"
  input: "Placeholder_119"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_119"
  op: "ReadVariableOp"
  input: "bnorm_32/moving_variance"
  input: "^AssignVariableOp_119"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_120"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_120"
  op: "AssignVariableOp"
  input: "conv_34/kernel"
  input: "Placeholder_120"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_120"
  op: "ReadVariableOp"
  input: "conv_34/kernel"
  input: "^AssignVariableOp_120"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_121"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_121"
  op: "AssignVariableOp"
  input: "bnorm_34/gamma"
  input: "Placeholder_121"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_121"
  op: "ReadVariableOp"
  input: "bnorm_34/gamma"
  input: "^AssignVariableOp_121"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_122"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_122"
  op: "AssignVariableOp"
  input: "bnorm_34/beta"
  input: "Placeholder_122"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_122"
  op: "ReadVariableOp"
  input: "bnorm_34/beta"
  input: "^AssignVariableOp_122"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_123"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_123"
  op: "AssignVariableOp"
  input: "bnorm_34/moving_mean"
  input: "Placeholder_123"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_123"
  op: "ReadVariableOp"
  input: "bnorm_34/moving_mean"
  input: "^AssignVariableOp_123"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_124"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_124"
  op: "AssignVariableOp"
  input: "bnorm_34/moving_variance"
  input: "Placeholder_124"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_124"
  op: "ReadVariableOp"
  input: "bnorm_34/moving_variance"
  input: "^AssignVariableOp_124"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_125"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_125"
  op: "AssignVariableOp"
  input: "conv_35/kernel"
  input: "Placeholder_125"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_125"
  op: "ReadVariableOp"
  input: "conv_35/kernel"
  input: "^AssignVariableOp_125"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_126"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_126"
  op: "AssignVariableOp"
  input: "bnorm_35/gamma"
  input: "Placeholder_126"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_126"
  op: "ReadVariableOp"
  input: "bnorm_35/gamma"
  input: "^AssignVariableOp_126"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_127"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_127"
  op: "AssignVariableOp"
  input: "bnorm_35/beta"
  input: "Placeholder_127"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_127"
  op: "ReadVariableOp"
  input: "bnorm_35/beta"
  input: "^AssignVariableOp_127"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_128"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_128"
  op: "AssignVariableOp"
  input: "bnorm_35/moving_mean"
  input: "Placeholder_128"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_128"
  op: "ReadVariableOp"
  input: "bnorm_35/moving_mean"
  input: "^AssignVariableOp_128"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_129"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_129"
  op: "AssignVariableOp"
  input: "bnorm_35/moving_variance"
  input: "Placeholder_129"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_129"
  op: "ReadVariableOp"
  input: "bnorm_35/moving_variance"
  input: "^AssignVariableOp_129"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_130"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_130"
  op: "AssignVariableOp"
  input: "conv_37/kernel"
  input: "Placeholder_130"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_130"
  op: "ReadVariableOp"
  input: "conv_37/kernel"
  input: "^AssignVariableOp_130"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_131"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_131"
  op: "AssignVariableOp"
  input: "bnorm_37/gamma"
  input: "Placeholder_131"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_131"
  op: "ReadVariableOp"
  input: "bnorm_37/gamma"
  input: "^AssignVariableOp_131"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_132"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_132"
  op: "AssignVariableOp"
  input: "bnorm_37/beta"
  input: "Placeholder_132"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_132"
  op: "ReadVariableOp"
  input: "bnorm_37/beta"
  input: "^AssignVariableOp_132"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_133"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_133"
  op: "AssignVariableOp"
  input: "bnorm_37/moving_mean"
  input: "Placeholder_133"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_133"
  op: "ReadVariableOp"
  input: "bnorm_37/moving_mean"
  input: "^AssignVariableOp_133"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_134"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_134"
  op: "AssignVariableOp"
  input: "bnorm_37/moving_variance"
  input: "Placeholder_134"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_134"
  op: "ReadVariableOp"
  input: "bnorm_37/moving_variance"
  input: "^AssignVariableOp_134"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_135"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_135"
  op: "AssignVariableOp"
  input: "conv_38/kernel"
  input: "Placeholder_135"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_135"
  op: "ReadVariableOp"
  input: "conv_38/kernel"
  input: "^AssignVariableOp_135"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_136"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_136"
  op: "AssignVariableOp"
  input: "bnorm_38/gamma"
  input: "Placeholder_136"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_136"
  op: "ReadVariableOp"
  input: "bnorm_38/gamma"
  input: "^AssignVariableOp_136"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_137"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_137"
  op: "AssignVariableOp"
  input: "bnorm_38/beta"
  input: "Placeholder_137"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_137"
  op: "ReadVariableOp"
  input: "bnorm_38/beta"
  input: "^AssignVariableOp_137"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_138"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_138"
  op: "AssignVariableOp"
  input: "bnorm_38/moving_mean"
  input: "Placeholder_138"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_138"
  op: "ReadVariableOp"
  input: "bnorm_38/moving_mean"
  input: "^AssignVariableOp_138"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_139"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_139"
  op: "AssignVariableOp"
  input: "bnorm_38/moving_variance"
  input: "Placeholder_139"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_139"
  op: "ReadVariableOp"
  input: "bnorm_38/moving_variance"
  input: "^AssignVariableOp_139"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_140"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_140"
  op: "AssignVariableOp"
  input: "conv_39/kernel"
  input: "Placeholder_140"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_140"
  op: "ReadVariableOp"
  input: "conv_39/kernel"
  input: "^AssignVariableOp_140"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_141"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_141"
  op: "AssignVariableOp"
  input: "bnorm_39/gamma"
  input: "Placeholder_141"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_141"
  op: "ReadVariableOp"
  input: "bnorm_39/gamma"
  input: "^AssignVariableOp_141"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_142"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_142"
  op: "AssignVariableOp"
  input: "bnorm_39/beta"
  input: "Placeholder_142"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_142"
  op: "ReadVariableOp"
  input: "bnorm_39/beta"
  input: "^AssignVariableOp_142"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_143"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_143"
  op: "AssignVariableOp"
  input: "bnorm_39/moving_mean"
  input: "Placeholder_143"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_143"
  op: "ReadVariableOp"
  input: "bnorm_39/moving_mean"
  input: "^AssignVariableOp_143"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_144"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_144"
  op: "AssignVariableOp"
  input: "bnorm_39/moving_variance"
  input: "Placeholder_144"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_144"
  op: "ReadVariableOp"
  input: "bnorm_39/moving_variance"
  input: "^AssignVariableOp_144"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_145"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_145"
  op: "AssignVariableOp"
  input: "conv_41/kernel"
  input: "Placeholder_145"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_145"
  op: "ReadVariableOp"
  input: "conv_41/kernel"
  input: "^AssignVariableOp_145"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_146"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_146"
  op: "AssignVariableOp"
  input: "bnorm_41/gamma"
  input: "Placeholder_146"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_146"
  op: "ReadVariableOp"
  input: "bnorm_41/gamma"
  input: "^AssignVariableOp_146"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_147"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_147"
  op: "AssignVariableOp"
  input: "bnorm_41/beta"
  input: "Placeholder_147"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_147"
  op: "ReadVariableOp"
  input: "bnorm_41/beta"
  input: "^AssignVariableOp_147"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_148"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_148"
  op: "AssignVariableOp"
  input: "bnorm_41/moving_mean"
  input: "Placeholder_148"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_148"
  op: "ReadVariableOp"
  input: "bnorm_41/moving_mean"
  input: "^AssignVariableOp_148"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_149"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_149"
  op: "AssignVariableOp"
  input: "bnorm_41/moving_variance"
  input: "Placeholder_149"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_149"
  op: "ReadVariableOp"
  input: "bnorm_41/moving_variance"
  input: "^AssignVariableOp_149"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_150"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_150"
  op: "AssignVariableOp"
  input: "conv_42/kernel"
  input: "Placeholder_150"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_150"
  op: "ReadVariableOp"
  input: "conv_42/kernel"
  input: "^AssignVariableOp_150"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_151"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_151"
  op: "AssignVariableOp"
  input: "bnorm_42/gamma"
  input: "Placeholder_151"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_151"
  op: "ReadVariableOp"
  input: "bnorm_42/gamma"
  input: "^AssignVariableOp_151"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_152"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_152"
  op: "AssignVariableOp"
  input: "bnorm_42/beta"
  input: "Placeholder_152"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_152"
  op: "ReadVariableOp"
  input: "bnorm_42/beta"
  input: "^AssignVariableOp_152"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_153"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_153"
  op: "AssignVariableOp"
  input: "bnorm_42/moving_mean"
  input: "Placeholder_153"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_153"
  op: "ReadVariableOp"
  input: "bnorm_42/moving_mean"
  input: "^AssignVariableOp_153"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_154"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_154"
  op: "AssignVariableOp"
  input: "bnorm_42/moving_variance"
  input: "Placeholder_154"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_154"
  op: "ReadVariableOp"
  input: "bnorm_42/moving_variance"
  input: "^AssignVariableOp_154"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_155"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_155"
  op: "AssignVariableOp"
  input: "conv_44/kernel"
  input: "Placeholder_155"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_155"
  op: "ReadVariableOp"
  input: "conv_44/kernel"
  input: "^AssignVariableOp_155"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_156"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_156"
  op: "AssignVariableOp"
  input: "bnorm_44/gamma"
  input: "Placeholder_156"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_156"
  op: "ReadVariableOp"
  input: "bnorm_44/gamma"
  input: "^AssignVariableOp_156"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_157"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_157"
  op: "AssignVariableOp"
  input: "bnorm_44/beta"
  input: "Placeholder_157"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_157"
  op: "ReadVariableOp"
  input: "bnorm_44/beta"
  input: "^AssignVariableOp_157"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_158"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_158"
  op: "AssignVariableOp"
  input: "bnorm_44/moving_mean"
  input: "Placeholder_158"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_158"
  op: "ReadVariableOp"
  input: "bnorm_44/moving_mean"
  input: "^AssignVariableOp_158"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_159"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_159"
  op: "AssignVariableOp"
  input: "bnorm_44/moving_variance"
  input: "Placeholder_159"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_159"
  op: "ReadVariableOp"
  input: "bnorm_44/moving_variance"
  input: "^AssignVariableOp_159"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_160"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_160"
  op: "AssignVariableOp"
  input: "conv_45/kernel"
  input: "Placeholder_160"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_160"
  op: "ReadVariableOp"
  input: "conv_45/kernel"
  input: "^AssignVariableOp_160"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_161"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_161"
  op: "AssignVariableOp"
  input: "bnorm_45/gamma"
  input: "Placeholder_161"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_161"
  op: "ReadVariableOp"
  input: "bnorm_45/gamma"
  input: "^AssignVariableOp_161"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_162"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_162"
  op: "AssignVariableOp"
  input: "bnorm_45/beta"
  input: "Placeholder_162"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_162"
  op: "ReadVariableOp"
  input: "bnorm_45/beta"
  input: "^AssignVariableOp_162"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_163"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_163"
  op: "AssignVariableOp"
  input: "bnorm_45/moving_mean"
  input: "Placeholder_163"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_163"
  op: "ReadVariableOp"
  input: "bnorm_45/moving_mean"
  input: "^AssignVariableOp_163"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_164"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_164"
  op: "AssignVariableOp"
  input: "bnorm_45/moving_variance"
  input: "Placeholder_164"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_164"
  op: "ReadVariableOp"
  input: "bnorm_45/moving_variance"
  input: "^AssignVariableOp_164"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_165"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_165"
  op: "AssignVariableOp"
  input: "conv_47/kernel"
  input: "Placeholder_165"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_165"
  op: "ReadVariableOp"
  input: "conv_47/kernel"
  input: "^AssignVariableOp_165"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_166"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_166"
  op: "AssignVariableOp"
  input: "bnorm_47/gamma"
  input: "Placeholder_166"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_166"
  op: "ReadVariableOp"
  input: "bnorm_47/gamma"
  input: "^AssignVariableOp_166"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_167"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_167"
  op: "AssignVariableOp"
  input: "bnorm_47/beta"
  input: "Placeholder_167"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_167"
  op: "ReadVariableOp"
  input: "bnorm_47/beta"
  input: "^AssignVariableOp_167"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_168"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_168"
  op: "AssignVariableOp"
  input: "bnorm_47/moving_mean"
  input: "Placeholder_168"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_168"
  op: "ReadVariableOp"
  input: "bnorm_47/moving_mean"
  input: "^AssignVariableOp_168"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_169"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_169"
  op: "AssignVariableOp"
  input: "bnorm_47/moving_variance"
  input: "Placeholder_169"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_169"
  op: "ReadVariableOp"
  input: "bnorm_47/moving_variance"
  input: "^AssignVariableOp_169"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_170"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_170"
  op: "AssignVariableOp"
  input: "conv_48/kernel"
  input: "Placeholder_170"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_170"
  op: "ReadVariableOp"
  input: "conv_48/kernel"
  input: "^AssignVariableOp_170"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_171"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_171"
  op: "AssignVariableOp"
  input: "bnorm_48/gamma"
  input: "Placeholder_171"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_171"
  op: "ReadVariableOp"
  input: "bnorm_48/gamma"
  input: "^AssignVariableOp_171"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_172"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_172"
  op: "AssignVariableOp"
  input: "bnorm_48/beta"
  input: "Placeholder_172"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_172"
  op: "ReadVariableOp"
  input: "bnorm_48/beta"
  input: "^AssignVariableOp_172"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_173"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_173"
  op: "AssignVariableOp"
  input: "bnorm_48/moving_mean"
  input: "Placeholder_173"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_173"
  op: "ReadVariableOp"
  input: "bnorm_48/moving_mean"
  input: "^AssignVariableOp_173"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_174"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_174"
  op: "AssignVariableOp"
  input: "bnorm_48/moving_variance"
  input: "Placeholder_174"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_174"
  op: "ReadVariableOp"
  input: "bnorm_48/moving_variance"
  input: "^AssignVariableOp_174"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_175"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_175"
  op: "AssignVariableOp"
  input: "conv_50/kernel"
  input: "Placeholder_175"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_175"
  op: "ReadVariableOp"
  input: "conv_50/kernel"
  input: "^AssignVariableOp_175"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_176"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_176"
  op: "AssignVariableOp"
  input: "bnorm_50/gamma"
  input: "Placeholder_176"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_176"
  op: "ReadVariableOp"
  input: "bnorm_50/gamma"
  input: "^AssignVariableOp_176"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_177"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_177"
  op: "AssignVariableOp"
  input: "bnorm_50/beta"
  input: "Placeholder_177"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_177"
  op: "ReadVariableOp"
  input: "bnorm_50/beta"
  input: "^AssignVariableOp_177"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_178"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_178"
  op: "AssignVariableOp"
  input: "bnorm_50/moving_mean"
  input: "Placeholder_178"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_178"
  op: "ReadVariableOp"
  input: "bnorm_50/moving_mean"
  input: "^AssignVariableOp_178"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_179"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_179"
  op: "AssignVariableOp"
  input: "bnorm_50/moving_variance"
  input: "Placeholder_179"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_179"
  op: "ReadVariableOp"
  input: "bnorm_50/moving_variance"
  input: "^AssignVariableOp_179"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_180"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_180"
  op: "AssignVariableOp"
  input: "conv_51/kernel"
  input: "Placeholder_180"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_180"
  op: "ReadVariableOp"
  input: "conv_51/kernel"
  input: "^AssignVariableOp_180"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_181"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_181"
  op: "AssignVariableOp"
  input: "bnorm_51/gamma"
  input: "Placeholder_181"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_181"
  op: "ReadVariableOp"
  input: "bnorm_51/gamma"
  input: "^AssignVariableOp_181"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_182"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_182"
  op: "AssignVariableOp"
  input: "bnorm_51/beta"
  input: "Placeholder_182"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_182"
  op: "ReadVariableOp"
  input: "bnorm_51/beta"
  input: "^AssignVariableOp_182"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_183"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_183"
  op: "AssignVariableOp"
  input: "bnorm_51/moving_mean"
  input: "Placeholder_183"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_183"
  op: "ReadVariableOp"
  input: "bnorm_51/moving_mean"
  input: "^AssignVariableOp_183"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_184"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_184"
  op: "AssignVariableOp"
  input: "bnorm_51/moving_variance"
  input: "Placeholder_184"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_184"
  op: "ReadVariableOp"
  input: "bnorm_51/moving_variance"
  input: "^AssignVariableOp_184"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_185"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_185"
  op: "AssignVariableOp"
  input: "conv_53/kernel"
  input: "Placeholder_185"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_185"
  op: "ReadVariableOp"
  input: "conv_53/kernel"
  input: "^AssignVariableOp_185"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_186"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_186"
  op: "AssignVariableOp"
  input: "bnorm_53/gamma"
  input: "Placeholder_186"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_186"
  op: "ReadVariableOp"
  input: "bnorm_53/gamma"
  input: "^AssignVariableOp_186"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_187"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_187"
  op: "AssignVariableOp"
  input: "bnorm_53/beta"
  input: "Placeholder_187"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_187"
  op: "ReadVariableOp"
  input: "bnorm_53/beta"
  input: "^AssignVariableOp_187"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_188"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_188"
  op: "AssignVariableOp"
  input: "bnorm_53/moving_mean"
  input: "Placeholder_188"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_188"
  op: "ReadVariableOp"
  input: "bnorm_53/moving_mean"
  input: "^AssignVariableOp_188"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_189"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_189"
  op: "AssignVariableOp"
  input: "bnorm_53/moving_variance"
  input: "Placeholder_189"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_189"
  op: "ReadVariableOp"
  input: "bnorm_53/moving_variance"
  input: "^AssignVariableOp_189"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_190"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_190"
  op: "AssignVariableOp"
  input: "conv_54/kernel"
  input: "Placeholder_190"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_190"
  op: "ReadVariableOp"
  input: "conv_54/kernel"
  input: "^AssignVariableOp_190"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_191"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_191"
  op: "AssignVariableOp"
  input: "bnorm_54/gamma"
  input: "Placeholder_191"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_191"
  op: "ReadVariableOp"
  input: "bnorm_54/gamma"
  input: "^AssignVariableOp_191"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_192"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_192"
  op: "AssignVariableOp"
  input: "bnorm_54/beta"
  input: "Placeholder_192"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_192"
  op: "ReadVariableOp"
  input: "bnorm_54/beta"
  input: "^AssignVariableOp_192"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_193"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_193"
  op: "AssignVariableOp"
  input: "bnorm_54/moving_mean"
  input: "Placeholder_193"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_193"
  op: "ReadVariableOp"
  input: "bnorm_54/moving_mean"
  input: "^AssignVariableOp_193"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_194"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_194"
  op: "AssignVariableOp"
  input: "bnorm_54/moving_variance"
  input: "Placeholder_194"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_194"
  op: "ReadVariableOp"
  input: "bnorm_54/moving_variance"
  input: "^AssignVariableOp_194"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_195"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_195"
  op: "AssignVariableOp"
  input: "conv_56/kernel"
  input: "Placeholder_195"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_195"
  op: "ReadVariableOp"
  input: "conv_56/kernel"
  input: "^AssignVariableOp_195"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_196"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_196"
  op: "AssignVariableOp"
  input: "bnorm_56/gamma"
  input: "Placeholder_196"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_196"
  op: "ReadVariableOp"
  input: "bnorm_56/gamma"
  input: "^AssignVariableOp_196"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_197"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_197"
  op: "AssignVariableOp"
  input: "bnorm_56/beta"
  input: "Placeholder_197"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_197"
  op: "ReadVariableOp"
  input: "bnorm_56/beta"
  input: "^AssignVariableOp_197"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_198"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_198"
  op: "AssignVariableOp"
  input: "bnorm_56/moving_mean"
  input: "Placeholder_198"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_198"
  op: "ReadVariableOp"
  input: "bnorm_56/moving_mean"
  input: "^AssignVariableOp_198"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_199"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_199"
  op: "AssignVariableOp"
  input: "bnorm_56/moving_variance"
  input: "Placeholder_199"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_199"
  op: "ReadVariableOp"
  input: "bnorm_56/moving_variance"
  input: "^AssignVariableOp_199"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_200"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_200"
  op: "AssignVariableOp"
  input: "conv_57/kernel"
  input: "Placeholder_200"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_200"
  op: "ReadVariableOp"
  input: "conv_57/kernel"
  input: "^AssignVariableOp_200"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_201"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_201"
  op: "AssignVariableOp"
  input: "bnorm_57/gamma"
  input: "Placeholder_201"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_201"
  op: "ReadVariableOp"
  input: "bnorm_57/gamma"
  input: "^AssignVariableOp_201"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_202"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_202"
  op: "AssignVariableOp"
  input: "bnorm_57/beta"
  input: "Placeholder_202"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_202"
  op: "ReadVariableOp"
  input: "bnorm_57/beta"
  input: "^AssignVariableOp_202"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_203"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_203"
  op: "AssignVariableOp"
  input: "bnorm_57/moving_mean"
  input: "Placeholder_203"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_203"
  op: "ReadVariableOp"
  input: "bnorm_57/moving_mean"
  input: "^AssignVariableOp_203"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_204"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_204"
  op: "AssignVariableOp"
  input: "bnorm_57/moving_variance"
  input: "Placeholder_204"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_204"
  op: "ReadVariableOp"
  input: "bnorm_57/moving_variance"
  input: "^AssignVariableOp_204"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_205"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_205"
  op: "AssignVariableOp"
  input: "conv_59/kernel"
  input: "Placeholder_205"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_205"
  op: "ReadVariableOp"
  input: "conv_59/kernel"
  input: "^AssignVariableOp_205"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_206"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_206"
  op: "AssignVariableOp"
  input: "bnorm_59/gamma"
  input: "Placeholder_206"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_206"
  op: "ReadVariableOp"
  input: "bnorm_59/gamma"
  input: "^AssignVariableOp_206"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_207"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_207"
  op: "AssignVariableOp"
  input: "bnorm_59/beta"
  input: "Placeholder_207"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_207"
  op: "ReadVariableOp"
  input: "bnorm_59/beta"
  input: "^AssignVariableOp_207"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_208"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_208"
  op: "AssignVariableOp"
  input: "bnorm_59/moving_mean"
  input: "Placeholder_208"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_208"
  op: "ReadVariableOp"
  input: "bnorm_59/moving_mean"
  input: "^AssignVariableOp_208"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_209"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_209"
  op: "AssignVariableOp"
  input: "bnorm_59/moving_variance"
  input: "Placeholder_209"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_209"
  op: "ReadVariableOp"
  input: "bnorm_59/moving_variance"
  input: "^AssignVariableOp_209"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_210"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_210"
  op: "AssignVariableOp"
  input: "conv_60/kernel"
  input: "Placeholder_210"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_210"
  op: "ReadVariableOp"
  input: "conv_60/kernel"
  input: "^AssignVariableOp_210"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_211"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_211"
  op: "AssignVariableOp"
  input: "bnorm_60/gamma"
  input: "Placeholder_211"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_211"
  op: "ReadVariableOp"
  input: "bnorm_60/gamma"
  input: "^AssignVariableOp_211"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_212"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_212"
  op: "AssignVariableOp"
  input: "bnorm_60/beta"
  input: "Placeholder_212"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_212"
  op: "ReadVariableOp"
  input: "bnorm_60/beta"
  input: "^AssignVariableOp_212"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_213"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_213"
  op: "AssignVariableOp"
  input: "bnorm_60/moving_mean"
  input: "Placeholder_213"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_213"
  op: "ReadVariableOp"
  input: "bnorm_60/moving_mean"
  input: "^AssignVariableOp_213"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_214"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_214"
  op: "AssignVariableOp"
  input: "bnorm_60/moving_variance"
  input: "Placeholder_214"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_214"
  op: "ReadVariableOp"
  input: "bnorm_60/moving_variance"
  input: "^AssignVariableOp_214"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_215"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_215"
  op: "AssignVariableOp"
  input: "conv_62/kernel"
  input: "Placeholder_215"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_215"
  op: "ReadVariableOp"
  input: "conv_62/kernel"
  input: "^AssignVariableOp_215"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_216"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_216"
  op: "AssignVariableOp"
  input: "bnorm_62/gamma"
  input: "Placeholder_216"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_216"
  op: "ReadVariableOp"
  input: "bnorm_62/gamma"
  input: "^AssignVariableOp_216"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_217"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_217"
  op: "AssignVariableOp"
  input: "bnorm_62/beta"
  input: "Placeholder_217"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_217"
  op: "ReadVariableOp"
  input: "bnorm_62/beta"
  input: "^AssignVariableOp_217"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_218"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_218"
  op: "AssignVariableOp"
  input: "bnorm_62/moving_mean"
  input: "Placeholder_218"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_218"
  op: "ReadVariableOp"
  input: "bnorm_62/moving_mean"
  input: "^AssignVariableOp_218"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_219"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_219"
  op: "AssignVariableOp"
  input: "bnorm_62/moving_variance"
  input: "Placeholder_219"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_219"
  op: "ReadVariableOp"
  input: "bnorm_62/moving_variance"
  input: "^AssignVariableOp_219"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_220"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_220"
  op: "AssignVariableOp"
  input: "conv_63/kernel"
  input: "Placeholder_220"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_220"
  op: "ReadVariableOp"
  input: "conv_63/kernel"
  input: "^AssignVariableOp_220"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_221"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_221"
  op: "AssignVariableOp"
  input: "bnorm_63/gamma"
  input: "Placeholder_221"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_221"
  op: "ReadVariableOp"
  input: "bnorm_63/gamma"
  input: "^AssignVariableOp_221"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_222"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_222"
  op: "AssignVariableOp"
  input: "bnorm_63/beta"
  input: "Placeholder_222"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_222"
  op: "ReadVariableOp"
  input: "bnorm_63/beta"
  input: "^AssignVariableOp_222"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_223"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_223"
  op: "AssignVariableOp"
  input: "bnorm_63/moving_mean"
  input: "Placeholder_223"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_223"
  op: "ReadVariableOp"
  input: "bnorm_63/moving_mean"
  input: "^AssignVariableOp_223"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_224"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_224"
  op: "AssignVariableOp"
  input: "bnorm_63/moving_variance"
  input: "Placeholder_224"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_224"
  op: "ReadVariableOp"
  input: "bnorm_63/moving_variance"
  input: "^AssignVariableOp_224"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_225"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_225"
  op: "AssignVariableOp"
  input: "conv_64/kernel"
  input: "Placeholder_225"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_225"
  op: "ReadVariableOp"
  input: "conv_64/kernel"
  input: "^AssignVariableOp_225"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_226"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_226"
  op: "AssignVariableOp"
  input: "bnorm_64/gamma"
  input: "Placeholder_226"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_226"
  op: "ReadVariableOp"
  input: "bnorm_64/gamma"
  input: "^AssignVariableOp_226"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_227"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_227"
  op: "AssignVariableOp"
  input: "bnorm_64/beta"
  input: "Placeholder_227"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_227"
  op: "ReadVariableOp"
  input: "bnorm_64/beta"
  input: "^AssignVariableOp_227"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_228"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_228"
  op: "AssignVariableOp"
  input: "bnorm_64/moving_mean"
  input: "Placeholder_228"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_228"
  op: "ReadVariableOp"
  input: "bnorm_64/moving_mean"
  input: "^AssignVariableOp_228"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_229"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_229"
  op: "AssignVariableOp"
  input: "bnorm_64/moving_variance"
  input: "Placeholder_229"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_229"
  op: "ReadVariableOp"
  input: "bnorm_64/moving_variance"
  input: "^AssignVariableOp_229"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_230"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_230"
  op: "AssignVariableOp"
  input: "conv_66/kernel"
  input: "Placeholder_230"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_230"
  op: "ReadVariableOp"
  input: "conv_66/kernel"
  input: "^AssignVariableOp_230"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_231"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_231"
  op: "AssignVariableOp"
  input: "bnorm_66/gamma"
  input: "Placeholder_231"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_231"
  op: "ReadVariableOp"
  input: "bnorm_66/gamma"
  input: "^AssignVariableOp_231"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_232"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_232"
  op: "AssignVariableOp"
  input: "bnorm_66/beta"
  input: "Placeholder_232"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_232"
  op: "ReadVariableOp"
  input: "bnorm_66/beta"
  input: "^AssignVariableOp_232"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_233"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_233"
  op: "AssignVariableOp"
  input: "bnorm_66/moving_mean"
  input: "Placeholder_233"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_233"
  op: "ReadVariableOp"
  input: "bnorm_66/moving_mean"
  input: "^AssignVariableOp_233"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_234"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_234"
  op: "AssignVariableOp"
  input: "bnorm_66/moving_variance"
  input: "Placeholder_234"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_234"
  op: "ReadVariableOp"
  input: "bnorm_66/moving_variance"
  input: "^AssignVariableOp_234"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_235"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_235"
  op: "AssignVariableOp"
  input: "conv_67/kernel"
  input: "Placeholder_235"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_235"
  op: "ReadVariableOp"
  input: "conv_67/kernel"
  input: "^AssignVariableOp_235"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_236"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_236"
  op: "AssignVariableOp"
  input: "bnorm_67/gamma"
  input: "Placeholder_236"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_236"
  op: "ReadVariableOp"
  input: "bnorm_67/gamma"
  input: "^AssignVariableOp_236"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_237"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_237"
  op: "AssignVariableOp"
  input: "bnorm_67/beta"
  input: "Placeholder_237"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_237"
  op: "ReadVariableOp"
  input: "bnorm_67/beta"
  input: "^AssignVariableOp_237"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_238"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_238"
  op: "AssignVariableOp"
  input: "bnorm_67/moving_mean"
  input: "Placeholder_238"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_238"
  op: "ReadVariableOp"
  input: "bnorm_67/moving_mean"
  input: "^AssignVariableOp_238"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_239"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_239"
  op: "AssignVariableOp"
  input: "bnorm_67/moving_variance"
  input: "Placeholder_239"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_239"
  op: "ReadVariableOp"
  input: "bnorm_67/moving_variance"
  input: "^AssignVariableOp_239"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_240"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_240"
  op: "AssignVariableOp"
  input: "conv_69/kernel"
  input: "Placeholder_240"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_240"
  op: "ReadVariableOp"
  input: "conv_69/kernel"
  input: "^AssignVariableOp_240"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_241"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_241"
  op: "AssignVariableOp"
  input: "bnorm_69/gamma"
  input: "Placeholder_241"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_241"
  op: "ReadVariableOp"
  input: "bnorm_69/gamma"
  input: "^AssignVariableOp_241"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_242"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_242"
  op: "AssignVariableOp"
  input: "bnorm_69/beta"
  input: "Placeholder_242"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_242"
  op: "ReadVariableOp"
  input: "bnorm_69/beta"
  input: "^AssignVariableOp_242"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_243"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_243"
  op: "AssignVariableOp"
  input: "bnorm_69/moving_mean"
  input: "Placeholder_243"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_243"
  op: "ReadVariableOp"
  input: "bnorm_69/moving_mean"
  input: "^AssignVariableOp_243"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_244"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_244"
  op: "AssignVariableOp"
  input: "bnorm_69/moving_variance"
  input: "Placeholder_244"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_244"
  op: "ReadVariableOp"
  input: "bnorm_69/moving_variance"
  input: "^AssignVariableOp_244"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_245"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_245"
  op: "AssignVariableOp"
  input: "conv_70/kernel"
  input: "Placeholder_245"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_245"
  op: "ReadVariableOp"
  input: "conv_70/kernel"
  input: "^AssignVariableOp_245"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_246"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_246"
  op: "AssignVariableOp"
  input: "bnorm_70/gamma"
  input: "Placeholder_246"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_246"
  op: "ReadVariableOp"
  input: "bnorm_70/gamma"
  input: "^AssignVariableOp_246"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_247"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_247"
  op: "AssignVariableOp"
  input: "bnorm_70/beta"
  input: "Placeholder_247"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_247"
  op: "ReadVariableOp"
  input: "bnorm_70/beta"
  input: "^AssignVariableOp_247"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_248"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_248"
  op: "AssignVariableOp"
  input: "bnorm_70/moving_mean"
  input: "Placeholder_248"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_248"
  op: "ReadVariableOp"
  input: "bnorm_70/moving_mean"
  input: "^AssignVariableOp_248"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_249"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_249"
  op: "AssignVariableOp"
  input: "bnorm_70/moving_variance"
  input: "Placeholder_249"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_249"
  op: "ReadVariableOp"
  input: "bnorm_70/moving_variance"
  input: "^AssignVariableOp_249"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_250"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_250"
  op: "AssignVariableOp"
  input: "conv_72/kernel"
  input: "Placeholder_250"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_250"
  op: "ReadVariableOp"
  input: "conv_72/kernel"
  input: "^AssignVariableOp_250"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_251"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_251"
  op: "AssignVariableOp"
  input: "bnorm_72/gamma"
  input: "Placeholder_251"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_251"
  op: "ReadVariableOp"
  input: "bnorm_72/gamma"
  input: "^AssignVariableOp_251"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_252"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_252"
  op: "AssignVariableOp"
  input: "bnorm_72/beta"
  input: "Placeholder_252"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_252"
  op: "ReadVariableOp"
  input: "bnorm_72/beta"
  input: "^AssignVariableOp_252"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_253"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_253"
  op: "AssignVariableOp"
  input: "bnorm_72/moving_mean"
  input: "Placeholder_253"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_253"
  op: "ReadVariableOp"
  input: "bnorm_72/moving_mean"
  input: "^AssignVariableOp_253"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_254"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_254"
  op: "AssignVariableOp"
  input: "bnorm_72/moving_variance"
  input: "Placeholder_254"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_254"
  op: "ReadVariableOp"
  input: "bnorm_72/moving_variance"
  input: "^AssignVariableOp_254"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_255"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_255"
  op: "AssignVariableOp"
  input: "conv_73/kernel"
  input: "Placeholder_255"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_255"
  op: "ReadVariableOp"
  input: "conv_73/kernel"
  input: "^AssignVariableOp_255"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_256"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_256"
  op: "AssignVariableOp"
  input: "bnorm_73/gamma"
  input: "Placeholder_256"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_256"
  op: "ReadVariableOp"
  input: "bnorm_73/gamma"
  input: "^AssignVariableOp_256"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_257"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_257"
  op: "AssignVariableOp"
  input: "bnorm_73/beta"
  input: "Placeholder_257"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_257"
  op: "ReadVariableOp"
  input: "bnorm_73/beta"
  input: "^AssignVariableOp_257"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_258"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_258"
  op: "AssignVariableOp"
  input: "bnorm_73/moving_mean"
  input: "Placeholder_258"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_258"
  op: "ReadVariableOp"
  input: "bnorm_73/moving_mean"
  input: "^AssignVariableOp_258"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_259"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_259"
  op: "AssignVariableOp"
  input: "bnorm_73/moving_variance"
  input: "Placeholder_259"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_259"
  op: "ReadVariableOp"
  input: "bnorm_73/moving_variance"
  input: "^AssignVariableOp_259"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_260"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_260"
  op: "AssignVariableOp"
  input: "conv_75/kernel"
  input: "Placeholder_260"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_260"
  op: "ReadVariableOp"
  input: "conv_75/kernel"
  input: "^AssignVariableOp_260"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_261"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_261"
  op: "AssignVariableOp"
  input: "bnorm_75/gamma"
  input: "Placeholder_261"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_261"
  op: "ReadVariableOp"
  input: "bnorm_75/gamma"
  input: "^AssignVariableOp_261"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_262"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_262"
  op: "AssignVariableOp"
  input: "bnorm_75/beta"
  input: "Placeholder_262"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_262"
  op: "ReadVariableOp"
  input: "bnorm_75/beta"
  input: "^AssignVariableOp_262"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_263"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_263"
  op: "AssignVariableOp"
  input: "bnorm_75/moving_mean"
  input: "Placeholder_263"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_263"
  op: "ReadVariableOp"
  input: "bnorm_75/moving_mean"
  input: "^AssignVariableOp_263"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_264"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_264"
  op: "AssignVariableOp"
  input: "bnorm_75/moving_variance"
  input: "Placeholder_264"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_264"
  op: "ReadVariableOp"
  input: "bnorm_75/moving_variance"
  input: "^AssignVariableOp_264"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_265"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_265"
  op: "AssignVariableOp"
  input: "conv_76/kernel"
  input: "Placeholder_265"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_265"
  op: "ReadVariableOp"
  input: "conv_76/kernel"
  input: "^AssignVariableOp_265"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_266"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_266"
  op: "AssignVariableOp"
  input: "bnorm_76/gamma"
  input: "Placeholder_266"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_266"
  op: "ReadVariableOp"
  input: "bnorm_76/gamma"
  input: "^AssignVariableOp_266"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_267"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_267"
  op: "AssignVariableOp"
  input: "bnorm_76/beta"
  input: "Placeholder_267"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_267"
  op: "ReadVariableOp"
  input: "bnorm_76/beta"
  input: "^AssignVariableOp_267"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_268"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_268"
  op: "AssignVariableOp"
  input: "bnorm_76/moving_mean"
  input: "Placeholder_268"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_268"
  op: "ReadVariableOp"
  input: "bnorm_76/moving_mean"
  input: "^AssignVariableOp_268"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_269"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_269"
  op: "AssignVariableOp"
  input: "bnorm_76/moving_variance"
  input: "Placeholder_269"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_269"
  op: "ReadVariableOp"
  input: "bnorm_76/moving_variance"
  input: "^AssignVariableOp_269"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_270"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_270"
  op: "AssignVariableOp"
  input: "conv_77/kernel"
  input: "Placeholder_270"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_270"
  op: "ReadVariableOp"
  input: "conv_77/kernel"
  input: "^AssignVariableOp_270"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_271"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_271"
  op: "AssignVariableOp"
  input: "bnorm_77/gamma"
  input: "Placeholder_271"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_271"
  op: "ReadVariableOp"
  input: "bnorm_77/gamma"
  input: "^AssignVariableOp_271"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_272"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_272"
  op: "AssignVariableOp"
  input: "bnorm_77/beta"
  input: "Placeholder_272"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_272"
  op: "ReadVariableOp"
  input: "bnorm_77/beta"
  input: "^AssignVariableOp_272"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_273"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_273"
  op: "AssignVariableOp"
  input: "bnorm_77/moving_mean"
  input: "Placeholder_273"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_273"
  op: "ReadVariableOp"
  input: "bnorm_77/moving_mean"
  input: "^AssignVariableOp_273"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_274"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_274"
  op: "AssignVariableOp"
  input: "bnorm_77/moving_variance"
  input: "Placeholder_274"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_274"
  op: "ReadVariableOp"
  input: "bnorm_77/moving_variance"
  input: "^AssignVariableOp_274"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_275"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_275"
  op: "AssignVariableOp"
  input: "conv_78/kernel"
  input: "Placeholder_275"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_275"
  op: "ReadVariableOp"
  input: "conv_78/kernel"
  input: "^AssignVariableOp_275"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_276"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_276"
  op: "AssignVariableOp"
  input: "bnorm_78/gamma"
  input: "Placeholder_276"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_276"
  op: "ReadVariableOp"
  input: "bnorm_78/gamma"
  input: "^AssignVariableOp_276"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_277"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_277"
  op: "AssignVariableOp"
  input: "bnorm_78/beta"
  input: "Placeholder_277"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_277"
  op: "ReadVariableOp"
  input: "bnorm_78/beta"
  input: "^AssignVariableOp_277"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_278"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_278"
  op: "AssignVariableOp"
  input: "bnorm_78/moving_mean"
  input: "Placeholder_278"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_278"
  op: "ReadVariableOp"
  input: "bnorm_78/moving_mean"
  input: "^AssignVariableOp_278"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_279"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_279"
  op: "AssignVariableOp"
  input: "bnorm_78/moving_variance"
  input: "Placeholder_279"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_279"
  op: "ReadVariableOp"
  input: "bnorm_78/moving_variance"
  input: "^AssignVariableOp_279"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_280"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_280"
  op: "AssignVariableOp"
  input: "conv_79/kernel"
  input: "Placeholder_280"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_280"
  op: "ReadVariableOp"
  input: "conv_79/kernel"
  input: "^AssignVariableOp_280"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_281"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_281"
  op: "AssignVariableOp"
  input: "bnorm_79/gamma"
  input: "Placeholder_281"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_281"
  op: "ReadVariableOp"
  input: "bnorm_79/gamma"
  input: "^AssignVariableOp_281"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_282"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_282"
  op: "AssignVariableOp"
  input: "bnorm_79/beta"
  input: "Placeholder_282"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_282"
  op: "ReadVariableOp"
  input: "bnorm_79/beta"
  input: "^AssignVariableOp_282"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_283"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_283"
  op: "AssignVariableOp"
  input: "bnorm_79/moving_mean"
  input: "Placeholder_283"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_283"
  op: "ReadVariableOp"
  input: "bnorm_79/moving_mean"
  input: "^AssignVariableOp_283"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_284"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_284"
  op: "AssignVariableOp"
  input: "bnorm_79/moving_variance"
  input: "Placeholder_284"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_284"
  op: "ReadVariableOp"
  input: "bnorm_79/moving_variance"
  input: "^AssignVariableOp_284"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_285"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_285"
  op: "AssignVariableOp"
  input: "conv_84/kernel"
  input: "Placeholder_285"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_285"
  op: "ReadVariableOp"
  input: "conv_84/kernel"
  input: "^AssignVariableOp_285"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_286"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_286"
  op: "AssignVariableOp"
  input: "bnorm_84/gamma"
  input: "Placeholder_286"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_286"
  op: "ReadVariableOp"
  input: "bnorm_84/gamma"
  input: "^AssignVariableOp_286"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_287"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_287"
  op: "AssignVariableOp"
  input: "bnorm_84/beta"
  input: "Placeholder_287"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_287"
  op: "ReadVariableOp"
  input: "bnorm_84/beta"
  input: "^AssignVariableOp_287"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_288"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_288"
  op: "AssignVariableOp"
  input: "bnorm_84/moving_mean"
  input: "Placeholder_288"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_288"
  op: "ReadVariableOp"
  input: "bnorm_84/moving_mean"
  input: "^AssignVariableOp_288"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_289"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_289"
  op: "AssignVariableOp"
  input: "bnorm_84/moving_variance"
  input: "Placeholder_289"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_289"
  op: "ReadVariableOp"
  input: "bnorm_84/moving_variance"
  input: "^AssignVariableOp_289"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_290"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_290"
  op: "AssignVariableOp"
  input: "conv_87/kernel"
  input: "Placeholder_290"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_290"
  op: "ReadVariableOp"
  input: "conv_87/kernel"
  input: "^AssignVariableOp_290"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_291"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_291"
  op: "AssignVariableOp"
  input: "bnorm_87/gamma"
  input: "Placeholder_291"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_291"
  op: "ReadVariableOp"
  input: "bnorm_87/gamma"
  input: "^AssignVariableOp_291"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_292"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_292"
  op: "AssignVariableOp"
  input: "bnorm_87/beta"
  input: "Placeholder_292"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_292"
  op: "ReadVariableOp"
  input: "bnorm_87/beta"
  input: "^AssignVariableOp_292"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_293"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_293"
  op: "AssignVariableOp"
  input: "bnorm_87/moving_mean"
  input: "Placeholder_293"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_293"
  op: "ReadVariableOp"
  input: "bnorm_87/moving_mean"
  input: "^AssignVariableOp_293"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_294"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_294"
  op: "AssignVariableOp"
  input: "bnorm_87/moving_variance"
  input: "Placeholder_294"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_294"
  op: "ReadVariableOp"
  input: "bnorm_87/moving_variance"
  input: "^AssignVariableOp_294"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_295"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_295"
  op: "AssignVariableOp"
  input: "conv_88/kernel"
  input: "Placeholder_295"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_295"
  op: "ReadVariableOp"
  input: "conv_88/kernel"
  input: "^AssignVariableOp_295"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_296"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_296"
  op: "AssignVariableOp"
  input: "bnorm_88/gamma"
  input: "Placeholder_296"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_296"
  op: "ReadVariableOp"
  input: "bnorm_88/gamma"
  input: "^AssignVariableOp_296"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_297"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_297"
  op: "AssignVariableOp"
  input: "bnorm_88/beta"
  input: "Placeholder_297"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_297"
  op: "ReadVariableOp"
  input: "bnorm_88/beta"
  input: "^AssignVariableOp_297"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_298"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_298"
  op: "AssignVariableOp"
  input: "bnorm_88/moving_mean"
  input: "Placeholder_298"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_298"
  op: "ReadVariableOp"
  input: "bnorm_88/moving_mean"
  input: "^AssignVariableOp_298"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_299"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_299"
  op: "AssignVariableOp"
  input: "bnorm_88/moving_variance"
  input: "Placeholder_299"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_299"
  op: "ReadVariableOp"
  input: "bnorm_88/moving_variance"
  input: "^AssignVariableOp_299"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_300"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_300"
  op: "AssignVariableOp"
  input: "conv_89/kernel"
  input: "Placeholder_300"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_300"
  op: "ReadVariableOp"
  input: "conv_89/kernel"
  input: "^AssignVariableOp_300"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_301"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_301"
  op: "AssignVariableOp"
  input: "bnorm_89/gamma"
  input: "Placeholder_301"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_301"
  op: "ReadVariableOp"
  input: "bnorm_89/gamma"
  input: "^AssignVariableOp_301"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_302"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_302"
  op: "AssignVariableOp"
  input: "bnorm_89/beta"
  input: "Placeholder_302"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_302"
  op: "ReadVariableOp"
  input: "bnorm_89/beta"
  input: "^AssignVariableOp_302"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_303"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_303"
  op: "AssignVariableOp"
  input: "bnorm_89/moving_mean"
  input: "Placeholder_303"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_303"
  op: "ReadVariableOp"
  input: "bnorm_89/moving_mean"
  input: "^AssignVariableOp_303"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_304"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_304"
  op: "AssignVariableOp"
  input: "bnorm_89/moving_variance"
  input: "Placeholder_304"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_304"
  op: "ReadVariableOp"
  input: "bnorm_89/moving_variance"
  input: "^AssignVariableOp_304"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_305"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_305"
  op: "AssignVariableOp"
  input: "conv_90/kernel"
  input: "Placeholder_305"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_305"
  op: "ReadVariableOp"
  input: "conv_90/kernel"
  input: "^AssignVariableOp_305"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_306"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_306"
  op: "AssignVariableOp"
  input: "bnorm_90/gamma"
  input: "Placeholder_306"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_306"
  op: "ReadVariableOp"
  input: "bnorm_90/gamma"
  input: "^AssignVariableOp_306"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_307"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_307"
  op: "AssignVariableOp"
  input: "bnorm_90/beta"
  input: "Placeholder_307"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_307"
  op: "ReadVariableOp"
  input: "bnorm_90/beta"
  input: "^AssignVariableOp_307"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_308"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_308"
  op: "AssignVariableOp"
  input: "bnorm_90/moving_mean"
  input: "Placeholder_308"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_308"
  op: "ReadVariableOp"
  input: "bnorm_90/moving_mean"
  input: "^AssignVariableOp_308"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_309"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_309"
  op: "AssignVariableOp"
  input: "bnorm_90/moving_variance"
  input: "Placeholder_309"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_309"
  op: "ReadVariableOp"
  input: "bnorm_90/moving_variance"
  input: "^AssignVariableOp_309"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_310"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_310"
  op: "AssignVariableOp"
  input: "conv_91/kernel"
  input: "Placeholder_310"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_310"
  op: "ReadVariableOp"
  input: "conv_91/kernel"
  input: "^AssignVariableOp_310"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_311"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_311"
  op: "AssignVariableOp"
  input: "bnorm_91/gamma"
  input: "Placeholder_311"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_311"
  op: "ReadVariableOp"
  input: "bnorm_91/gamma"
  input: "^AssignVariableOp_311"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_312"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_312"
  op: "AssignVariableOp"
  input: "bnorm_91/beta"
  input: "Placeholder_312"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_312"
  op: "ReadVariableOp"
  input: "bnorm_91/beta"
  input: "^AssignVariableOp_312"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_313"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_313"
  op: "AssignVariableOp"
  input: "bnorm_91/moving_mean"
  input: "Placeholder_313"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_313"
  op: "ReadVariableOp"
  input: "bnorm_91/moving_mean"
  input: "^AssignVariableOp_313"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_314"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_314"
  op: "AssignVariableOp"
  input: "bnorm_91/moving_variance"
  input: "Placeholder_314"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_314"
  op: "ReadVariableOp"
  input: "bnorm_91/moving_variance"
  input: "^AssignVariableOp_314"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_315"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_315"
  op: "AssignVariableOp"
  input: "conv_96/kernel"
  input: "Placeholder_315"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_315"
  op: "ReadVariableOp"
  input: "conv_96/kernel"
  input: "^AssignVariableOp_315"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_316"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_316"
  op: "AssignVariableOp"
  input: "bnorm_96/gamma"
  input: "Placeholder_316"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_316"
  op: "ReadVariableOp"
  input: "bnorm_96/gamma"
  input: "^AssignVariableOp_316"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_317"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_317"
  op: "AssignVariableOp"
  input: "bnorm_96/beta"
  input: "Placeholder_317"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_317"
  op: "ReadVariableOp"
  input: "bnorm_96/beta"
  input: "^AssignVariableOp_317"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_318"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_318"
  op: "AssignVariableOp"
  input: "bnorm_96/moving_mean"
  input: "Placeholder_318"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_318"
  op: "ReadVariableOp"
  input: "bnorm_96/moving_mean"
  input: "^AssignVariableOp_318"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_319"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_319"
  op: "AssignVariableOp"
  input: "bnorm_96/moving_variance"
  input: "Placeholder_319"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_319"
  op: "ReadVariableOp"
  input: "bnorm_96/moving_variance"
  input: "^AssignVariableOp_319"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_320"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_320"
  op: "AssignVariableOp"
  input: "conv_99/kernel"
  input: "Placeholder_320"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_320"
  op: "ReadVariableOp"
  input: "conv_99/kernel"
  input: "^AssignVariableOp_320"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_321"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_321"
  op: "AssignVariableOp"
  input: "bnorm_99/gamma"
  input: "Placeholder_321"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_321"
  op: "ReadVariableOp"
  input: "bnorm_99/gamma"
  input: "^AssignVariableOp_321"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_322"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_322"
  op: "AssignVariableOp"
  input: "bnorm_99/beta"
  input: "Placeholder_322"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_322"
  op: "ReadVariableOp"
  input: "bnorm_99/beta"
  input: "^AssignVariableOp_322"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_323"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_323"
  op: "AssignVariableOp"
  input: "bnorm_99/moving_mean"
  input: "Placeholder_323"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_323"
  op: "ReadVariableOp"
  input: "bnorm_99/moving_mean"
  input: "^AssignVariableOp_323"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_324"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_324"
  op: "AssignVariableOp"
  input: "bnorm_99/moving_variance"
  input: "Placeholder_324"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_324"
  op: "ReadVariableOp"
  input: "bnorm_99/moving_variance"
  input: "^AssignVariableOp_324"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_325"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_325"
  op: "AssignVariableOp"
  input: "conv_100/kernel"
  input: "Placeholder_325"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_325"
  op: "ReadVariableOp"
  input: "conv_100/kernel"
  input: "^AssignVariableOp_325"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_326"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_326"
  op: "AssignVariableOp"
  input: "bnorm_100/gamma"
  input: "Placeholder_326"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_326"
  op: "ReadVariableOp"
  input: "bnorm_100/gamma"
  input: "^AssignVariableOp_326"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_327"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_327"
  op: "AssignVariableOp"
  input: "bnorm_100/beta"
  input: "Placeholder_327"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_327"
  op: "ReadVariableOp"
  input: "bnorm_100/beta"
  input: "^AssignVariableOp_327"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_328"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_328"
  op: "AssignVariableOp"
  input: "bnorm_100/moving_mean"
  input: "Placeholder_328"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_328"
  op: "ReadVariableOp"
  input: "bnorm_100/moving_mean"
  input: "^AssignVariableOp_328"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_329"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_329"
  op: "AssignVariableOp"
  input: "bnorm_100/moving_variance"
  input: "Placeholder_329"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_329"
  op: "ReadVariableOp"
  input: "bnorm_100/moving_variance"
  input: "^AssignVariableOp_329"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_330"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_330"
  op: "AssignVariableOp"
  input: "conv_101/kernel"
  input: "Placeholder_330"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_330"
  op: "ReadVariableOp"
  input: "conv_101/kernel"
  input: "^AssignVariableOp_330"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_331"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_331"
  op: "AssignVariableOp"
  input: "bnorm_101/gamma"
  input: "Placeholder_331"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_331"
  op: "ReadVariableOp"
  input: "bnorm_101/gamma"
  input: "^AssignVariableOp_331"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_332"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_332"
  op: "AssignVariableOp"
  input: "bnorm_101/beta"
  input: "Placeholder_332"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_332"
  op: "ReadVariableOp"
  input: "bnorm_101/beta"
  input: "^AssignVariableOp_332"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_333"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_333"
  op: "AssignVariableOp"
  input: "bnorm_101/moving_mean"
  input: "Placeholder_333"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_333"
  op: "ReadVariableOp"
  input: "bnorm_101/moving_mean"
  input: "^AssignVariableOp_333"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_334"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_334"
  op: "AssignVariableOp"
  input: "bnorm_101/moving_variance"
  input: "Placeholder_334"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_334"
  op: "ReadVariableOp"
  input: "bnorm_101/moving_variance"
  input: "^AssignVariableOp_334"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_335"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_335"
  op: "AssignVariableOp"
  input: "conv_102/kernel"
  input: "Placeholder_335"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_335"
  op: "ReadVariableOp"
  input: "conv_102/kernel"
  input: "^AssignVariableOp_335"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_336"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_336"
  op: "AssignVariableOp"
  input: "bnorm_102/gamma"
  input: "Placeholder_336"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_336"
  op: "ReadVariableOp"
  input: "bnorm_102/gamma"
  input: "^AssignVariableOp_336"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_337"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_337"
  op: "AssignVariableOp"
  input: "bnorm_102/beta"
  input: "Placeholder_337"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_337"
  op: "ReadVariableOp"
  input: "bnorm_102/beta"
  input: "^AssignVariableOp_337"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_338"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_338"
  op: "AssignVariableOp"
  input: "bnorm_102/moving_mean"
  input: "Placeholder_338"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_338"
  op: "ReadVariableOp"
  input: "bnorm_102/moving_mean"
  input: "^AssignVariableOp_338"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_339"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_339"
  op: "AssignVariableOp"
  input: "bnorm_102/moving_variance"
  input: "Placeholder_339"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_339"
  op: "ReadVariableOp"
  input: "bnorm_102/moving_variance"
  input: "^AssignVariableOp_339"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_340"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_340"
  op: "AssignVariableOp"
  input: "conv_103/kernel"
  input: "Placeholder_340"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_340"
  op: "ReadVariableOp"
  input: "conv_103/kernel"
  input: "^AssignVariableOp_340"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_341"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_341"
  op: "AssignVariableOp"
  input: "bnorm_103/gamma"
  input: "Placeholder_341"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_341"
  op: "ReadVariableOp"
  input: "bnorm_103/gamma"
  input: "^AssignVariableOp_341"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_342"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_342"
  op: "AssignVariableOp"
  input: "bnorm_103/beta"
  input: "Placeholder_342"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_342"
  op: "ReadVariableOp"
  input: "bnorm_103/beta"
  input: "^AssignVariableOp_342"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_343"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_343"
  op: "AssignVariableOp"
  input: "bnorm_103/moving_mean"
  input: "Placeholder_343"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_343"
  op: "ReadVariableOp"
  input: "bnorm_103/moving_mean"
  input: "^AssignVariableOp_343"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_344"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_344"
  op: "AssignVariableOp"
  input: "bnorm_103/moving_variance"
  input: "Placeholder_344"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_344"
  op: "ReadVariableOp"
  input: "bnorm_103/moving_variance"
  input: "^AssignVariableOp_344"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_345"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_345"
  op: "AssignVariableOp"
  input: "conv_80/kernel"
  input: "Placeholder_345"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_345"
  op: "ReadVariableOp"
  input: "conv_80/kernel"
  input: "^AssignVariableOp_345"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_346"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_346"
  op: "AssignVariableOp"
  input: "conv_92/kernel"
  input: "Placeholder_346"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_346"
  op: "ReadVariableOp"
  input: "conv_92/kernel"
  input: "^AssignVariableOp_346"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_347"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_347"
  op: "AssignVariableOp"
  input: "conv_104/kernel"
  input: "Placeholder_347"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_347"
  op: "ReadVariableOp"
  input: "conv_104/kernel"
  input: "^AssignVariableOp_347"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_348"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_348"
  op: "AssignVariableOp"
  input: "bnorm_80/gamma"
  input: "Placeholder_348"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_348"
  op: "ReadVariableOp"
  input: "bnorm_80/gamma"
  input: "^AssignVariableOp_348"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_349"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_349"
  op: "AssignVariableOp"
  input: "bnorm_80/beta"
  input: "Placeholder_349"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_349"
  op: "ReadVariableOp"
  input: "bnorm_80/beta"
  input: "^AssignVariableOp_349"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_350"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_350"
  op: "AssignVariableOp"
  input: "bnorm_80/moving_mean"
  input: "Placeholder_350"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_350"
  op: "ReadVariableOp"
  input: "bnorm_80/moving_mean"
  input: "^AssignVariableOp_350"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_351"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_351"
  op: "AssignVariableOp"
  input: "bnorm_80/moving_variance"
  input: "Placeholder_351"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_351"
  op: "ReadVariableOp"
  input: "bnorm_80/moving_variance"
  input: "^AssignVariableOp_351"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_352"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_352"
  op: "AssignVariableOp"
  input: "bnorm_92/gamma"
  input: "Placeholder_352"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_352"
  op: "ReadVariableOp"
  input: "bnorm_92/gamma"
  input: "^AssignVariableOp_352"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_353"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_353"
  op: "AssignVariableOp"
  input: "bnorm_92/beta"
  input: "Placeholder_353"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_353"
  op: "ReadVariableOp"
  input: "bnorm_92/beta"
  input: "^AssignVariableOp_353"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_354"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_354"
  op: "AssignVariableOp"
  input: "bnorm_92/moving_mean"
  input: "Placeholder_354"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_354"
  op: "ReadVariableOp"
  input: "bnorm_92/moving_mean"
  input: "^AssignVariableOp_354"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_355"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_355"
  op: "AssignVariableOp"
  input: "bnorm_92/moving_variance"
  input: "Placeholder_355"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_355"
  op: "ReadVariableOp"
  input: "bnorm_92/moving_variance"
  input: "^AssignVariableOp_355"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_356"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_356"
  op: "AssignVariableOp"
  input: "bnorm_104/gamma"
  input: "Placeholder_356"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_356"
  op: "ReadVariableOp"
  input: "bnorm_104/gamma"
  input: "^AssignVariableOp_356"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_357"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_357"
  op: "AssignVariableOp"
  input: "bnorm_104/beta"
  input: "Placeholder_357"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_357"
  op: "ReadVariableOp"
  input: "bnorm_104/beta"
  input: "^AssignVariableOp_357"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_358"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_358"
  op: "AssignVariableOp"
  input: "bnorm_104/moving_mean"
  input: "Placeholder_358"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_358"
  op: "ReadVariableOp"
  input: "bnorm_104/moving_mean"
  input: "^AssignVariableOp_358"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_359"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_359"
  op: "AssignVariableOp"
  input: "bnorm_104/moving_variance"
  input: "Placeholder_359"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_359"
  op: "ReadVariableOp"
  input: "bnorm_104/moving_variance"
  input: "^AssignVariableOp_359"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_360"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_360"
  op: "AssignVariableOp"
  input: "conv_81/kernel"
  input: "Placeholder_360"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_360"
  op: "ReadVariableOp"
  input: "conv_81/kernel"
  input: "^AssignVariableOp_360"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_361"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_361"
  op: "AssignVariableOp"
  input: "conv_81/bias"
  input: "Placeholder_361"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_361"
  op: "ReadVariableOp"
  input: "conv_81/bias"
  input: "^AssignVariableOp_361"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_362"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_362"
  op: "AssignVariableOp"
  input: "conv_93/kernel"
  input: "Placeholder_362"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_362"
  op: "ReadVariableOp"
  input: "conv_93/kernel"
  input: "^AssignVariableOp_362"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_363"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_363"
  op: "AssignVariableOp"
  input: "conv_93/bias"
  input: "Placeholder_363"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_363"
  op: "ReadVariableOp"
  input: "conv_93/bias"
  input: "^AssignVariableOp_363"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_364"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_364"
  op: "AssignVariableOp"
  input: "conv_105/kernel"
  input: "Placeholder_364"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_364"
  op: "ReadVariableOp"
  input: "conv_105/kernel"
  input: "^AssignVariableOp_364"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_365"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_365"
  op: "AssignVariableOp"
  input: "conv_105/bias"
  input: "Placeholder_365"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_365"
  op: "ReadVariableOp"
  input: "conv_105/bias"
  input: "^AssignVariableOp_365"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bnorm_53/gamma"
}
node {
  name: "VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "bnorm_38/gamma"
}
node {
  name: "VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "bnorm_44/beta"
}
node {
  name: "VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "bnorm_103/beta"
}
node {
  name: "VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "bnorm_69/moving_mean"
}
node {
  name: "VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "bnorm_5/moving_mean"
}
node {
  name: "VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "bnorm_31/beta"
}
node {
  name: "VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "bnorm_64/beta"
}
node {
  name: "VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "bnorm_70/moving_mean"
}
node {
  name: "VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "bnorm_78/moving_variance"
}
node {
  name: "VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "bnorm_88/moving_variance"
}
node {
  name: "VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "bnorm_91/moving_mean"
}
node {
  name: "VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "bnorm_92/moving_mean"
}
node {
  name: "VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "bnorm_67/gamma"
}
node {
  name: "VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "bnorm_90/gamma"
}
node {
  name: "VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "conv_23/kernel"
}
node {
  name: "VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "conv_60/kernel"
}
node {
  name: "VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "conv_63/kernel"
}
node {
  name: "VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "bnorm_76/gamma"
}
node {
  name: "VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "bnorm_16/moving_mean"
}
node {
  name: "VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "bnorm_29/gamma"
}
node {
  name: "VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "bnorm_41/moving_variance"
}
node {
  name: "VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "bnorm_57/moving_mean"
}
node {
  name: "VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "bnorm_12/moving_variance"
}
node {
  name: "VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "conv_13/kernel"
}
node {
  name: "VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "conv_42/kernel"
}
node {
  name: "VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "bnorm_51/moving_mean"
}
node {
  name: "VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "conv_54/kernel"
}
node {
  name: "VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "conv_77/kernel"
}
node {
  name: "VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "bnorm_89/beta"
}
node {
  name: "VarIsInitializedOp_30"
  op: "VarIsInitializedOp"
  input: "bnorm_102/moving_variance"
}
node {
  name: "VarIsInitializedOp_31"
  op: "VarIsInitializedOp"
  input: "conv_93/kernel"
}
node {
  name: "VarIsInitializedOp_32"
  op: "VarIsInitializedOp"
  input: "conv_57/kernel"
}
node {
  name: "VarIsInitializedOp_33"
  op: "VarIsInitializedOp"
  input: "bnorm_91/beta"
}
node {
  name: "VarIsInitializedOp_34"
  op: "VarIsInitializedOp"
  input: "bnorm_48/gamma"
}
node {
  name: "VarIsInitializedOp_35"
  op: "VarIsInitializedOp"
  input: "bnorm_50/moving_mean"
}
node {
  name: "VarIsInitializedOp_36"
  op: "VarIsInitializedOp"
  input: "bnorm_77/gamma"
}
node {
  name: "VarIsInitializedOp_37"
  op: "VarIsInitializedOp"
  input: "bnorm_101/beta"
}
node {
  name: "VarIsInitializedOp_38"
  op: "VarIsInitializedOp"
  input: "bnorm_101/moving_mean"
}
node {
  name: "VarIsInitializedOp_39"
  op: "VarIsInitializedOp"
  input: "bnorm_45/gamma"
}
node {
  name: "VarIsInitializedOp_40"
  op: "VarIsInitializedOp"
  input: "bnorm_66/gamma"
}
node {
  name: "VarIsInitializedOp_41"
  op: "VarIsInitializedOp"
  input: "bnorm_72/beta"
}
node {
  name: "VarIsInitializedOp_42"
  op: "VarIsInitializedOp"
  input: "conv_75/kernel"
}
node {
  name: "VarIsInitializedOp_43"
  op: "VarIsInitializedOp"
  input: "conv_102/kernel"
}
node {
  name: "VarIsInitializedOp_44"
  op: "VarIsInitializedOp"
  input: "conv_105/kernel"
}
node {
  name: "VarIsInitializedOp_45"
  op: "VarIsInitializedOp"
  input: "bnorm_89/gamma"
}
node {
  name: "VarIsInitializedOp_46"
  op: "VarIsInitializedOp"
  input: "bnorm_96/moving_mean"
}
node {
  name: "VarIsInitializedOp_47"
  op: "VarIsInitializedOp"
  input: "bnorm_73/moving_variance"
}
node {
  name: "VarIsInitializedOp_48"
  op: "VarIsInitializedOp"
  input: "bnorm_1/moving_mean"
}
node {
  name: "VarIsInitializedOp_49"
  op: "VarIsInitializedOp"
  input: "bnorm_26/gamma"
}
node {
  name: "VarIsInitializedOp_50"
  op: "VarIsInitializedOp"
  input: "bnorm_32/moving_mean"
}
node {
  name: "VarIsInitializedOp_51"
  op: "VarIsInitializedOp"
  input: "bnorm_34/moving_variance"
}
node {
  name: "VarIsInitializedOp_52"
  op: "VarIsInitializedOp"
  input: "bnorm_39/beta"
}
node {
  name: "VarIsInitializedOp_53"
  op: "VarIsInitializedOp"
  input: "bnorm_59/beta"
}
node {
  name: "VarIsInitializedOp_54"
  op: "VarIsInitializedOp"
  input: "bnorm_62/beta"
}
node {
  name: "VarIsInitializedOp_55"
  op: "VarIsInitializedOp"
  input: "bnorm_64/moving_variance"
}
node {
  name: "VarIsInitializedOp_56"
  op: "VarIsInitializedOp"
  input: "bnorm_73/moving_mean"
}
node {
  name: "VarIsInitializedOp_57"
  op: "VarIsInitializedOp"
  input: "bnorm_54/moving_mean"
}
node {
  name: "VarIsInitializedOp_58"
  op: "VarIsInitializedOp"
  input: "bnorm_73/gamma"
}
node {
  name: "VarIsInitializedOp_59"
  op: "VarIsInitializedOp"
  input: "bnorm_99/moving_variance"
}
node {
  name: "VarIsInitializedOp_60"
  op: "VarIsInitializedOp"
  input: "bnorm_63/moving_variance"
}
node {
  name: "VarIsInitializedOp_61"
  op: "VarIsInitializedOp"
  input: "bnorm_87/beta"
}
node {
  name: "VarIsInitializedOp_62"
  op: "VarIsInitializedOp"
  input: "bnorm_99/gamma"
}
node {
  name: "VarIsInitializedOp_63"
  op: "VarIsInitializedOp"
  input: "bnorm_28/gamma"
}
node {
  name: "VarIsInitializedOp_64"
  op: "VarIsInitializedOp"
  input: "bnorm_53/beta"
}
node {
  name: "VarIsInitializedOp_65"
  op: "VarIsInitializedOp"
  input: "conv_56/kernel"
}
node {
  name: "VarIsInitializedOp_66"
  op: "VarIsInitializedOp"
  input: "conv_88/kernel"
}
node {
  name: "VarIsInitializedOp_67"
  op: "VarIsInitializedOp"
  input: "bnorm_47/moving_variance"
}
node {
  name: "VarIsInitializedOp_68"
  op: "VarIsInitializedOp"
  input: "bnorm_67/moving_mean"
}
node {
  name: "VarIsInitializedOp_69"
  op: "VarIsInitializedOp"
  input: "bnorm_78/gamma"
}
node {
  name: "VarIsInitializedOp_70"
  op: "VarIsInitializedOp"
  input: "bnorm_26/moving_mean"
}
node {
  name: "VarIsInitializedOp_71"
  op: "VarIsInitializedOp"
  input: "bnorm_6/moving_mean"
}
node {
  name: "VarIsInitializedOp_72"
  op: "VarIsInitializedOp"
  input: "bnorm_92/beta"
}
node {
  name: "VarIsInitializedOp_73"
  op: "VarIsInitializedOp"
  input: "bnorm_80/gamma"
}
node {
  name: "VarIsInitializedOp_74"
  op: "VarIsInitializedOp"
  input: "bnorm_89/moving_mean"
}
node {
  name: "VarIsInitializedOp_75"
  op: "VarIsInitializedOp"
  input: "bnorm_20/beta"
}
node {
  name: "VarIsInitializedOp_76"
  op: "VarIsInitializedOp"
  input: "bnorm_13/moving_variance"
}
node {
  name: "VarIsInitializedOp_77"
  op: "VarIsInitializedOp"
  input: "conv_34/kernel"
}
node {
  name: "VarIsInitializedOp_78"
  op: "VarIsInitializedOp"
  input: "bnorm_41/gamma"
}
node {
  name: "VarIsInitializedOp_79"
  op: "VarIsInitializedOp"
  input: "bnorm_54/moving_variance"
}
node {
  name: "VarIsInitializedOp_80"
  op: "VarIsInitializedOp"
  input: "conv_73/kernel"
}
node {
  name: "VarIsInitializedOp_81"
  op: "VarIsInitializedOp"
  input: "bnorm_84/beta"
}
node {
  name: "VarIsInitializedOp_82"
  op: "VarIsInitializedOp"
  input: "bnorm_57/gamma"
}
node {
  name: "VarIsInitializedOp_83"
  op: "VarIsInitializedOp"
  input: "conv_105/bias"
}
node {
  name: "VarIsInitializedOp_84"
  op: "VarIsInitializedOp"
  input: "bnorm_92/moving_variance"
}
node {
  name: "VarIsInitializedOp_85"
  op: "VarIsInitializedOp"
  input: "conv_5/kernel"
}
node {
  name: "VarIsInitializedOp_86"
  op: "VarIsInitializedOp"
  input: "conv_19/kernel"
}
node {
  name: "VarIsInitializedOp_87"
  op: "VarIsInitializedOp"
  input: "bnorm_34/moving_mean"
}
node {
  name: "VarIsInitializedOp_88"
  op: "VarIsInitializedOp"
  input: "bnorm_41/beta"
}
node {
  name: "VarIsInitializedOp_89"
  op: "VarIsInitializedOp"
  input: "bnorm_48/beta"
}
node {
  name: "VarIsInitializedOp_90"
  op: "VarIsInitializedOp"
  input: "conv_51/kernel"
}
node {
  name: "VarIsInitializedOp_91"
  op: "VarIsInitializedOp"
  input: "bnorm_57/moving_variance"
}
node {
  name: "VarIsInitializedOp_92"
  op: "VarIsInitializedOp"
  input: "bnorm_75/moving_variance"
}
node {
  name: "VarIsInitializedOp_93"
  op: "VarIsInitializedOp"
  input: "conv_76/kernel"
}
node {
  name: "VarIsInitializedOp_94"
  op: "VarIsInitializedOp"
  input: "bnorm_100/moving_variance"
}
node {
  name: "VarIsInitializedOp_95"
  op: "VarIsInitializedOp"
  input: "bnorm_28/moving_variance"
}
node {
  name: "VarIsInitializedOp_96"
  op: "VarIsInitializedOp"
  input: "conv_31/kernel"
}
node {
  name: "VarIsInitializedOp_97"
  op: "VarIsInitializedOp"
  input: "bnorm_60/beta"
}
node {
  name: "VarIsInitializedOp_98"
  op: "VarIsInitializedOp"
  input: "bnorm_25/moving_variance"
}
node {
  name: "VarIsInitializedOp_99"
  op: "VarIsInitializedOp"
  input: "bnorm_35/moving_variance"
}
node {
  name: "VarIsInitializedOp_100"
  op: "VarIsInitializedOp"
  input: "conv_39/kernel"
}
node {
  name: "VarIsInitializedOp_101"
  op: "VarIsInitializedOp"
  input: "bnorm_69/gamma"
}
node {
  name: "VarIsInitializedOp_102"
  op: "VarIsInitializedOp"
  input: "conv_81/kernel"
}
node {
  name: "VarIsInitializedOp_103"
  op: "VarIsInitializedOp"
  input: "conv_64/kernel"
}
node {
  name: "VarIsInitializedOp_104"
  op: "VarIsInitializedOp"
  input: "conv_70/kernel"
}
node {
  name: "VarIsInitializedOp_105"
  op: "VarIsInitializedOp"
  input: "conv_91/kernel"
}
node {
  name: "VarIsInitializedOp_106"
  op: "VarIsInitializedOp"
  input: "bnorm_104/moving_mean"
}
node {
  name: "VarIsInitializedOp_107"
  op: "VarIsInitializedOp"
  input: "bnorm_88/moving_mean"
}
node {
  name: "VarIsInitializedOp_108"
  op: "VarIsInitializedOp"
  input: "bnorm_84/moving_mean"
}
node {
  name: "VarIsInitializedOp_109"
  op: "VarIsInitializedOp"
  input: "bnorm_90/beta"
}
node {
  name: "VarIsInitializedOp_110"
  op: "VarIsInitializedOp"
  input: "bnorm_3/gamma"
}
node {
  name: "VarIsInitializedOp_111"
  op: "VarIsInitializedOp"
  input: "bnorm_14/moving_variance"
}
node {
  name: "VarIsInitializedOp_112"
  op: "VarIsInitializedOp"
  input: "bnorm_20/moving_mean"
}
node {
  name: "VarIsInitializedOp_113"
  op: "VarIsInitializedOp"
  input: "conv_22/kernel"
}
node {
  name: "VarIsInitializedOp_114"
  op: "VarIsInitializedOp"
  input: "bnorm_29/beta"
}
node {
  name: "VarIsInitializedOp_115"
  op: "VarIsInitializedOp"
  input: "bnorm_48/moving_variance"
}
node {
  name: "VarIsInitializedOp_116"
  op: "VarIsInitializedOp"
  input: "bnorm_56/moving_variance"
}
node {
  name: "VarIsInitializedOp_117"
  op: "VarIsInitializedOp"
  input: "conv_37/kernel"
}
node {
  name: "VarIsInitializedOp_118"
  op: "VarIsInitializedOp"
  input: "bnorm_87/moving_variance"
}
node {
  name: "VarIsInitializedOp_119"
  op: "VarIsInitializedOp"
  input: "bnorm_17/gamma"
}
node {
  name: "VarIsInitializedOp_120"
  op: "VarIsInitializedOp"
  input: "conv_80/kernel"
}
node {
  name: "VarIsInitializedOp_121"
  op: "VarIsInitializedOp"
  input: "bnorm_84/gamma"
}
node {
  name: "VarIsInitializedOp_122"
  op: "VarIsInitializedOp"
  input: "bnorm_3/moving_variance"
}
node {
  name: "VarIsInitializedOp_123"
  op: "VarIsInitializedOp"
  input: "bnorm_2/gamma"
}
node {
  name: "VarIsInitializedOp_124"
  op: "VarIsInitializedOp"
  input: "bnorm_9/moving_variance"
}
node {
  name: "VarIsInitializedOp_125"
  op: "VarIsInitializedOp"
  input: "bnorm_10/gamma"
}
node {
  name: "VarIsInitializedOp_126"
  op: "VarIsInitializedOp"
  input: "bnorm_12/moving_mean"
}
node {
  name: "VarIsInitializedOp_127"
  op: "VarIsInitializedOp"
  input: "conv_28/kernel"
}
node {
  name: "VarIsInitializedOp_128"
  op: "VarIsInitializedOp"
  input: "bnorm_50/gamma"
}
node {
  name: "VarIsInitializedOp_129"
  op: "VarIsInitializedOp"
  input: "conv_67/kernel"
}
node {
  name: "VarIsInitializedOp_130"
  op: "VarIsInitializedOp"
  input: "bnorm_69/moving_variance"
}
node {
  name: "VarIsInitializedOp_131"
  op: "VarIsInitializedOp"
  input: "bnorm_9/beta"
}
node {
  name: "VarIsInitializedOp_132"
  op: "VarIsInitializedOp"
  input: "conv_20/kernel"
}
node {
  name: "VarIsInitializedOp_133"
  op: "VarIsInitializedOp"
  input: "bnorm_38/beta"
}
node {
  name: "VarIsInitializedOp_134"
  op: "VarIsInitializedOp"
  input: "bnorm_38/moving_variance"
}
node {
  name: "VarIsInitializedOp_135"
  op: "VarIsInitializedOp"
  input: "bnorm_78/moving_mean"
}
node {
  name: "VarIsInitializedOp_136"
  op: "VarIsInitializedOp"
  input: "bnorm_99/moving_mean"
}
node {
  name: "VarIsInitializedOp_137"
  op: "VarIsInitializedOp"
  input: "bnorm_76/beta"
}
node {
  name: "VarIsInitializedOp_138"
  op: "VarIsInitializedOp"
  input: "conv_62/kernel"
}
node {
  name: "VarIsInitializedOp_139"
  op: "VarIsInitializedOp"
  input: "conv_89/kernel"
}
node {
  name: "VarIsInitializedOp_140"
  op: "VarIsInitializedOp"
  input: "bnorm_90/moving_variance"
}
node {
  name: "VarIsInitializedOp_141"
  op: "VarIsInitializedOp"
  input: "conv_103/kernel"
}
node {
  name: "VarIsInitializedOp_142"
  op: "VarIsInitializedOp"
  input: "bnorm_96/gamma"
}
node {
  name: "VarIsInitializedOp_143"
  op: "VarIsInitializedOp"
  input: "conv_84/kernel"
}
node {
  name: "VarIsInitializedOp_144"
  op: "VarIsInitializedOp"
  input: "bnorm_17/moving_variance"
}
node {
  name: "VarIsInitializedOp_145"
  op: "VarIsInitializedOp"
  input: "bnorm_2/moving_variance"
}
node {
  name: "VarIsInitializedOp_146"
  op: "VarIsInitializedOp"
  input: "bnorm_5/moving_variance"
}
node {
  name: "VarIsInitializedOp_147"
  op: "VarIsInitializedOp"
  input: "bnorm_7/gamma"
}
node {
  name: "VarIsInitializedOp_148"
  op: "VarIsInitializedOp"
  input: "bnorm_1/gamma"
}
node {
  name: "VarIsInitializedOp_149"
  op: "VarIsInitializedOp"
  input: "conv_25/kernel"
}
node {
  name: "VarIsInitializedOp_150"
  op: "VarIsInitializedOp"
  input: "conv_32/kernel"
}
node {
  name: "VarIsInitializedOp_151"
  op: "VarIsInitializedOp"
  input: "bnorm_39/moving_variance"
}
node {
  name: "VarIsInitializedOp_152"
  op: "VarIsInitializedOp"
  input: "bnorm_104/beta"
}
node {
  name: "VarIsInitializedOp_153"
  op: "VarIsInitializedOp"
  input: "bnorm_20/gamma"
}
node {
  name: "VarIsInitializedOp_154"
  op: "VarIsInitializedOp"
  input: "bnorm_26/moving_variance"
}
node {
  name: "VarIsInitializedOp_155"
  op: "VarIsInitializedOp"
  input: "bnorm_3/beta"
}
node {
  name: "VarIsInitializedOp_156"
  op: "VarIsInitializedOp"
  input: "bnorm_6/gamma"
}
node {
  name: "VarIsInitializedOp_157"
  op: "VarIsInitializedOp"
  input: "bnorm_7/moving_variance"
}
node {
  name: "VarIsInitializedOp_158"
  op: "VarIsInitializedOp"
  input: "bnorm_14/moving_mean"
}
node {
  name: "VarIsInitializedOp_159"
  op: "VarIsInitializedOp"
  input: "bnorm_20/moving_variance"
}
node {
  name: "VarIsInitializedOp_160"
  op: "VarIsInitializedOp"
  input: "conv_26/kernel"
}
node {
  name: "VarIsInitializedOp_161"
  op: "VarIsInitializedOp"
  input: "bnorm_31/gamma"
}
node {
  name: "VarIsInitializedOp_162"
  op: "VarIsInitializedOp"
  input: "conv_35/kernel"
}
node {
  name: "VarIsInitializedOp_163"
  op: "VarIsInitializedOp"
  input: "bnorm_47/beta"
}
node {
  name: "VarIsInitializedOp_164"
  op: "VarIsInitializedOp"
  input: "bnorm_56/gamma"
}
node {
  name: "VarIsInitializedOp_165"
  op: "VarIsInitializedOp"
  input: "bnorm_14/beta"
}
node {
  name: "VarIsInitializedOp_166"
  op: "VarIsInitializedOp"
  input: "conv_79/kernel"
}
node {
  name: "VarIsInitializedOp_167"
  op: "VarIsInitializedOp"
  input: "bnorm_56/beta"
}
node {
  name: "VarIsInitializedOp_168"
  op: "VarIsInitializedOp"
  input: "bnorm_60/gamma"
}
node {
  name: "VarIsInitializedOp_169"
  op: "VarIsInitializedOp"
  input: "conv_66/kernel"
}
node {
  name: "VarIsInitializedOp_170"
  op: "VarIsInitializedOp"
  input: "bnorm_102/gamma"
}
node {
  name: "VarIsInitializedOp_171"
  op: "VarIsInitializedOp"
  input: "conv_17/kernel"
}
node {
  name: "VarIsInitializedOp_172"
  op: "VarIsInitializedOp"
  input: "bnorm_6/moving_variance"
}
node {
  name: "VarIsInitializedOp_173"
  op: "VarIsInitializedOp"
  input: "bnorm_9/gamma"
}
node {
  name: "VarIsInitializedOp_174"
  op: "VarIsInitializedOp"
  input: "bnorm_10/beta"
}
node {
  name: "VarIsInitializedOp_175"
  op: "VarIsInitializedOp"
  input: "bnorm_17/moving_mean"
}
node {
  name: "VarIsInitializedOp_176"
  op: "VarIsInitializedOp"
  input: "bnorm_2/beta"
}
node {
  name: "VarIsInitializedOp_177"
  op: "VarIsInitializedOp"
  input: "bnorm_47/moving_mean"
}
node {
  name: "VarIsInitializedOp_178"
  op: "VarIsInitializedOp"
  input: "bnorm_56/moving_mean"
}
node {
  name: "VarIsInitializedOp_179"
  op: "VarIsInitializedOp"
  input: "bnorm_59/moving_mean"
}
node {
  name: "VarIsInitializedOp_180"
  op: "VarIsInitializedOp"
  input: "bnorm_66/moving_variance"
}
node {
  name: "VarIsInitializedOp_181"
  op: "VarIsInitializedOp"
  input: "conv_69/kernel"
}
node {
  name: "VarIsInitializedOp_182"
  op: "VarIsInitializedOp"
  input: "bnorm_47/gamma"
}
node {
  name: "VarIsInitializedOp_183"
  op: "VarIsInitializedOp"
  input: "bnorm_13/gamma"
}
node {
  name: "VarIsInitializedOp_184"
  op: "VarIsInitializedOp"
  input: "conv_41/kernel"
}
node {
  name: "VarIsInitializedOp_185"
  op: "VarIsInitializedOp"
  input: "bnorm_54/gamma"
}
node {
  name: "VarIsInitializedOp_186"
  op: "VarIsInitializedOp"
  input: "bnorm_70/beta"
}
node {
  name: "VarIsInitializedOp_187"
  op: "VarIsInitializedOp"
  input: "bnorm_91/moving_variance"
}
node {
  name: "VarIsInitializedOp_188"
  op: "VarIsInitializedOp"
  input: "bnorm_1/beta"
}
node {
  name: "VarIsInitializedOp_189"
  op: "VarIsInitializedOp"
  input: "bnorm_3/moving_mean"
}
node {
  name: "VarIsInitializedOp_190"
  op: "VarIsInitializedOp"
  input: "bnorm_7/beta"
}
node {
  name: "VarIsInitializedOp_191"
  op: "VarIsInitializedOp"
  input: "bnorm_31/moving_variance"
}
node {
  name: "VarIsInitializedOp_192"
  op: "VarIsInitializedOp"
  input: "bnorm_37/gamma"
}
node {
  name: "VarIsInitializedOp_193"
  op: "VarIsInitializedOp"
  input: "bnorm_38/moving_mean"
}
node {
  name: "VarIsInitializedOp_194"
  op: "VarIsInitializedOp"
  input: "conv_47/kernel"
}
node {
  name: "VarIsInitializedOp_195"
  op: "VarIsInitializedOp"
  input: "bnorm_51/beta"
}
node {
  name: "VarIsInitializedOp_196"
  op: "VarIsInitializedOp"
  input: "bnorm_76/moving_variance"
}
node {
  name: "VarIsInitializedOp_197"
  op: "VarIsInitializedOp"
  input: "bnorm_77/moving_mean"
}
node {
  name: "VarIsInitializedOp_198"
  op: "VarIsInitializedOp"
  input: "conv_45/kernel"
}
node {
  name: "VarIsInitializedOp_199"
  op: "VarIsInitializedOp"
  input: "bnorm_75/moving_mean"
}
node {
  name: "VarIsInitializedOp_200"
  op: "VarIsInitializedOp"
  input: "conv_101/kernel"
}
node {
  name: "VarIsInitializedOp_201"
  op: "VarIsInitializedOp"
  input: "bnorm_59/gamma"
}
node {
  name: "VarIsInitializedOp_202"
  op: "VarIsInitializedOp"
  input: "conv_1/kernel"
}
node {
  name: "VarIsInitializedOp_203"
  op: "VarIsInitializedOp"
  input: "bnorm_2/moving_mean"
}
node {
  name: "VarIsInitializedOp_204"
  op: "VarIsInitializedOp"
  input: "bnorm_6/beta"
}
node {
  name: "VarIsInitializedOp_205"
  op: "VarIsInitializedOp"
  input: "bnorm_7/moving_mean"
}
node {
  name: "VarIsInitializedOp_206"
  op: "VarIsInitializedOp"
  input: "bnorm_9/moving_mean"
}
node {
  name: "VarIsInitializedOp_207"
  op: "VarIsInitializedOp"
  input: "bnorm_10/moving_mean"
}
node {
  name: "VarIsInitializedOp_208"
  op: "VarIsInitializedOp"
  input: "bnorm_16/beta"
}
node {
  name: "VarIsInitializedOp_209"
  op: "VarIsInitializedOp"
  input: "bnorm_16/moving_variance"
}
node {
  name: "VarIsInitializedOp_210"
  op: "VarIsInitializedOp"
  input: "conv_48/kernel"
}
node {
  name: "VarIsInitializedOp_211"
  op: "VarIsInitializedOp"
  input: "bnorm_42/moving_variance"
}
node {
  name: "VarIsInitializedOp_212"
  op: "VarIsInitializedOp"
  input: "bnorm_76/moving_mean"
}
node {
  name: "VarIsInitializedOp_213"
  op: "VarIsInitializedOp"
  input: "bnorm_100/beta"
}
node {
  name: "VarIsInitializedOp_214"
  op: "VarIsInitializedOp"
  input: "bnorm_62/moving_variance"
}
node {
  name: "VarIsInitializedOp_215"
  op: "VarIsInitializedOp"
  input: "bnorm_77/moving_variance"
}
node {
  name: "VarIsInitializedOp_216"
  op: "VarIsInitializedOp"
  input: "conv_78/kernel"
}
node {
  name: "VarIsInitializedOp_217"
  op: "VarIsInitializedOp"
  input: "bnorm_96/beta"
}
node {
  name: "VarIsInitializedOp_218"
  op: "VarIsInitializedOp"
  input: "bnorm_12/gamma"
}
node {
  name: "VarIsInitializedOp_219"
  op: "VarIsInitializedOp"
  input: "bnorm_16/gamma"
}
node {
  name: "VarIsInitializedOp_220"
  op: "VarIsInitializedOp"
  input: "bnorm_23/moving_variance"
}
node {
  name: "VarIsInitializedOp_221"
  op: "VarIsInitializedOp"
  input: "bnorm_32/beta"
}
node {
  name: "VarIsInitializedOp_222"
  op: "VarIsInitializedOp"
  input: "bnorm_37/moving_variance"
}
node {
  name: "VarIsInitializedOp_223"
  op: "VarIsInitializedOp"
  input: "conv_14/kernel"
}
node {
  name: "VarIsInitializedOp_224"
  op: "VarIsInitializedOp"
  input: "bnorm_103/gamma"
}
node {
  name: "VarIsInitializedOp_225"
  op: "VarIsInitializedOp"
  input: "conv_72/kernel"
}
node {
  name: "VarIsInitializedOp_226"
  op: "VarIsInitializedOp"
  input: "bnorm_87/gamma"
}
node {
  name: "VarIsInitializedOp_227"
  op: "VarIsInitializedOp"
  input: "bnorm_62/moving_mean"
}
node {
  name: "VarIsInitializedOp_228"
  op: "VarIsInitializedOp"
  input: "bnorm_72/moving_variance"
}
node {
  name: "VarIsInitializedOp_229"
  op: "VarIsInitializedOp"
  input: "bnorm_100/moving_mean"
}
node {
  name: "VarIsInitializedOp_230"
  op: "VarIsInitializedOp"
  input: "bnorm_88/gamma"
}
node {
  name: "VarIsInitializedOp_231"
  op: "VarIsInitializedOp"
  input: "bnorm_102/beta"
}
node {
  name: "VarIsInitializedOp_232"
  op: "VarIsInitializedOp"
  input: "bnorm_22/moving_mean"
}
node {
  name: "VarIsInitializedOp_233"
  op: "VarIsInitializedOp"
  input: "bnorm_5/gamma"
}
node {
  name: "VarIsInitializedOp_234"
  op: "VarIsInitializedOp"
  input: "bnorm_19/moving_variance"
}
node {
  name: "VarIsInitializedOp_235"
  op: "VarIsInitializedOp"
  input: "bnorm_44/gamma"
}
node {
  name: "VarIsInitializedOp_236"
  op: "VarIsInitializedOp"
  input: "bnorm_96/moving_variance"
}
node {
  name: "VarIsInitializedOp_237"
  op: "VarIsInitializedOp"
  input: "bnorm_101/gamma"
}
node {
  name: "VarIsInitializedOp_238"
  op: "VarIsInitializedOp"
  input: "conv_6/kernel"
}
node {
  name: "VarIsInitializedOp_239"
  op: "VarIsInitializedOp"
  input: "bnorm_23/moving_mean"
}
node {
  name: "VarIsInitializedOp_240"
  op: "VarIsInitializedOp"
  input: "bnorm_31/moving_mean"
}
node {
  name: "VarIsInitializedOp_241"
  op: "VarIsInitializedOp"
  input: "bnorm_63/moving_mean"
}
node {
  name: "VarIsInitializedOp_242"
  op: "VarIsInitializedOp"
  input: "bnorm_70/gamma"
}
node {
  name: "VarIsInitializedOp_243"
  op: "VarIsInitializedOp"
  input: "bnorm_91/gamma"
}
node {
  name: "VarIsInitializedOp_244"
  op: "VarIsInitializedOp"
  input: "conv_12/kernel"
}
node {
  name: "VarIsInitializedOp_245"
  op: "VarIsInitializedOp"
  input: "bnorm_22/gamma"
}
node {
  name: "VarIsInitializedOp_246"
  op: "VarIsInitializedOp"
  input: "bnorm_23/gamma"
}
node {
  name: "VarIsInitializedOp_247"
  op: "VarIsInitializedOp"
  input: "bnorm_32/moving_variance"
}
node {
  name: "VarIsInitializedOp_248"
  op: "VarIsInitializedOp"
  input: "bnorm_37/moving_mean"
}
node {
  name: "VarIsInitializedOp_249"
  op: "VarIsInitializedOp"
  input: "conv_44/kernel"
}
node {
  name: "VarIsInitializedOp_250"
  op: "VarIsInitializedOp"
  input: "bnorm_63/gamma"
}
node {
  name: "VarIsInitializedOp_251"
  op: "VarIsInitializedOp"
  input: "bnorm_60/moving_variance"
}
node {
  name: "VarIsInitializedOp_252"
  op: "VarIsInitializedOp"
  input: "bnorm_79/moving_variance"
}
node {
  name: "VarIsInitializedOp_253"
  op: "VarIsInitializedOp"
  input: "conv_92/kernel"
}
node {
  name: "VarIsInitializedOp_254"
  op: "VarIsInitializedOp"
  input: "bnorm_29/moving_variance"
}
node {
  name: "VarIsInitializedOp_255"
  op: "VarIsInitializedOp"
  input: "bnorm_59/moving_variance"
}
node {
  name: "VarIsInitializedOp_256"
  op: "VarIsInitializedOp"
  input: "bnorm_103/moving_variance"
}
node {
  name: "VarIsInitializedOp_257"
  op: "VarIsInitializedOp"
  input: "bnorm_22/moving_variance"
}
node {
  name: "VarIsInitializedOp_258"
  op: "VarIsInitializedOp"
  input: "bnorm_28/moving_mean"
}
node {
  name: "VarIsInitializedOp_259"
  op: "VarIsInitializedOp"
  input: "bnorm_37/beta"
}
node {
  name: "VarIsInitializedOp_260"
  op: "VarIsInitializedOp"
  input: "bnorm_67/moving_variance"
}
node {
  name: "VarIsInitializedOp_261"
  op: "VarIsInitializedOp"
  input: "bnorm_92/gamma"
}
node {
  name: "VarIsInitializedOp_262"
  op: "VarIsInitializedOp"
  input: "conv_53/kernel"
}
node {
  name: "VarIsInitializedOp_263"
  op: "VarIsInitializedOp"
  input: "conv_16/kernel"
}
node {
  name: "VarIsInitializedOp_264"
  op: "VarIsInitializedOp"
  input: "bnorm_17/beta"
}
node {
  name: "VarIsInitializedOp_265"
  op: "VarIsInitializedOp"
  input: "bnorm_5/beta"
}
node {
  name: "VarIsInitializedOp_266"
  op: "VarIsInitializedOp"
  input: "bnorm_26/beta"
}
node {
  name: "VarIsInitializedOp_267"
  op: "VarIsInitializedOp"
  input: "bnorm_34/gamma"
}
node {
  name: "VarIsInitializedOp_268"
  op: "VarIsInitializedOp"
  input: "bnorm_35/gamma"
}
node {
  name: "VarIsInitializedOp_269"
  op: "VarIsInitializedOp"
  input: "bnorm_42/gamma"
}
node {
  name: "VarIsInitializedOp_270"
  op: "VarIsInitializedOp"
  input: "bnorm_53/moving_variance"
}
node {
  name: "VarIsInitializedOp_271"
  op: "VarIsInitializedOp"
  input: "conv_59/kernel"
}
node {
  name: "VarIsInitializedOp_272"
  op: "VarIsInitializedOp"
  input: "bnorm_22/beta"
}
node {
  name: "VarIsInitializedOp_273"
  op: "VarIsInitializedOp"
  input: "bnorm_51/gamma"
}
node {
  name: "VarIsInitializedOp_274"
  op: "VarIsInitializedOp"
  input: "bnorm_89/moving_variance"
}
node {
  name: "VarIsInitializedOp_275"
  op: "VarIsInitializedOp"
  input: "bnorm_10/moving_variance"
}
node {
  name: "VarIsInitializedOp_276"
  op: "VarIsInitializedOp"
  input: "bnorm_104/gamma"
}
node {
  name: "VarIsInitializedOp_277"
  op: "VarIsInitializedOp"
  input: "bnorm_41/moving_mean"
}
node {
  name: "VarIsInitializedOp_278"
  op: "VarIsInitializedOp"
  input: "bnorm_78/beta"
}
node {
  name: "VarIsInitializedOp_279"
  op: "VarIsInitializedOp"
  input: "bnorm_87/moving_mean"
}
node {
  name: "VarIsInitializedOp_280"
  op: "VarIsInitializedOp"
  input: "bnorm_99/beta"
}
node {
  name: "VarIsInitializedOp_281"
  op: "VarIsInitializedOp"
  input: "conv_100/kernel"
}
node {
  name: "VarIsInitializedOp_282"
  op: "VarIsInitializedOp"
  input: "conv_81/bias"
}
node {
  name: "VarIsInitializedOp_283"
  op: "VarIsInitializedOp"
  input: "conv_2/kernel"
}
node {
  name: "VarIsInitializedOp_284"
  op: "VarIsInitializedOp"
  input: "conv_3/kernel"
}
node {
  name: "VarIsInitializedOp_285"
  op: "VarIsInitializedOp"
  input: "conv_10/kernel"
}
node {
  name: "VarIsInitializedOp_286"
  op: "VarIsInitializedOp"
  input: "bnorm_19/beta"
}
node {
  name: "VarIsInitializedOp_287"
  op: "VarIsInitializedOp"
  input: "bnorm_25/beta"
}
node {
  name: "VarIsInitializedOp_288"
  op: "VarIsInitializedOp"
  input: "bnorm_48/moving_mean"
}
node {
  name: "VarIsInitializedOp_289"
  op: "VarIsInitializedOp"
  input: "conv_96/kernel"
}
node {
  name: "VarIsInitializedOp_290"
  op: "VarIsInitializedOp"
  input: "bnorm_72/moving_mean"
}
node {
  name: "VarIsInitializedOp_291"
  op: "VarIsInitializedOp"
  input: "bnorm_42/moving_mean"
}
node {
  name: "VarIsInitializedOp_292"
  op: "VarIsInitializedOp"
  input: "bnorm_51/moving_variance"
}
node {
  name: "VarIsInitializedOp_293"
  op: "VarIsInitializedOp"
  input: "bnorm_64/gamma"
}
node {
  name: "VarIsInitializedOp_294"
  op: "VarIsInitializedOp"
  input: "bnorm_73/beta"
}
node {
  name: "VarIsInitializedOp_295"
  op: "VarIsInitializedOp"
  input: "bnorm_77/beta"
}
node {
  name: "VarIsInitializedOp_296"
  op: "VarIsInitializedOp"
  input: "bnorm_13/moving_mean"
}
node {
  name: "VarIsInitializedOp_297"
  op: "VarIsInitializedOp"
  input: "bnorm_19/moving_mean"
}
node {
  name: "VarIsInitializedOp_298"
  op: "VarIsInitializedOp"
  input: "bnorm_25/gamma"
}
node {
  name: "VarIsInitializedOp_299"
  op: "VarIsInitializedOp"
  input: "conv_29/kernel"
}
node {
  name: "VarIsInitializedOp_300"
  op: "VarIsInitializedOp"
  input: "bnorm_34/beta"
}
node {
  name: "VarIsInitializedOp_301"
  op: "VarIsInitializedOp"
  input: "conv_38/kernel"
}
node {
  name: "VarIsInitializedOp_302"
  op: "VarIsInitializedOp"
  input: "bnorm_45/moving_variance"
}
node {
  name: "VarIsInitializedOp_303"
  op: "VarIsInitializedOp"
  input: "bnorm_69/beta"
}
node {
  name: "VarIsInitializedOp_304"
  op: "VarIsInitializedOp"
  input: "bnorm_62/gamma"
}
node {
  name: "VarIsInitializedOp_305"
  op: "VarIsInitializedOp"
  input: "bnorm_79/gamma"
}
node {
  name: "VarIsInitializedOp_306"
  op: "VarIsInitializedOp"
  input: "bnorm_19/gamma"
}
node {
  name: "VarIsInitializedOp_307"
  op: "VarIsInitializedOp"
  input: "conv_9/kernel"
}
node {
  name: "VarIsInitializedOp_308"
  op: "VarIsInitializedOp"
  input: "bnorm_32/gamma"
}
node {
  name: "VarIsInitializedOp_309"
  op: "VarIsInitializedOp"
  input: "bnorm_42/beta"
}
node {
  name: "VarIsInitializedOp_310"
  op: "VarIsInitializedOp"
  input: "bnorm_50/moving_variance"
}
node {
  name: "VarIsInitializedOp_311"
  op: "VarIsInitializedOp"
  input: "bnorm_88/beta"
}
node {
  name: "VarIsInitializedOp_312"
  op: "VarIsInitializedOp"
  input: "bnorm_80/beta"
}
node {
  name: "VarIsInitializedOp_313"
  op: "VarIsInitializedOp"
  input: "bnorm_12/beta"
}
node {
  name: "VarIsInitializedOp_314"
  op: "VarIsInitializedOp"
  input: "bnorm_25/moving_mean"
}
node {
  name: "VarIsInitializedOp_315"
  op: "VarIsInitializedOp"
  input: "bnorm_60/moving_mean"
}
node {
  name: "VarIsInitializedOp_316"
  op: "VarIsInitializedOp"
  input: "bnorm_64/moving_mean"
}
node {
  name: "VarIsInitializedOp_317"
  op: "VarIsInitializedOp"
  input: "bnorm_66/moving_mean"
}
node {
  name: "VarIsInitializedOp_318"
  op: "VarIsInitializedOp"
  input: "bnorm_75/beta"
}
node {
  name: "VarIsInitializedOp_319"
  op: "VarIsInitializedOp"
  input: "bnorm_79/moving_mean"
}
node {
  name: "VarIsInitializedOp_320"
  op: "VarIsInitializedOp"
  input: "conv_99/kernel"
}
node {
  name: "VarIsInitializedOp_321"
  op: "VarIsInitializedOp"
  input: "bnorm_103/moving_mean"
}
node {
  name: "VarIsInitializedOp_322"
  op: "VarIsInitializedOp"
  input: "bnorm_80/moving_mean"
}
node {
  name: "VarIsInitializedOp_323"
  op: "VarIsInitializedOp"
  input: "conv_93/bias"
}
node {
  name: "VarIsInitializedOp_324"
  op: "VarIsInitializedOp"
  input: "bnorm_72/gamma"
}
node {
  name: "VarIsInitializedOp_325"
  op: "VarIsInitializedOp"
  input: "bnorm_39/moving_mean"
}
node {
  name: "VarIsInitializedOp_326"
  op: "VarIsInitializedOp"
  input: "bnorm_57/beta"
}
node {
  name: "VarIsInitializedOp_327"
  op: "VarIsInitializedOp"
  input: "bnorm_102/moving_mean"
}
node {
  name: "VarIsInitializedOp_328"
  op: "VarIsInitializedOp"
  input: "conv_7/kernel"
}
node {
  name: "VarIsInitializedOp_329"
  op: "VarIsInitializedOp"
  input: "bnorm_29/moving_mean"
}
node {
  name: "VarIsInitializedOp_330"
  op: "VarIsInitializedOp"
  input: "bnorm_39/gamma"
}
node {
  name: "VarIsInitializedOp_331"
  op: "VarIsInitializedOp"
  input: "bnorm_45/beta"
}
node {
  name: "VarIsInitializedOp_332"
  op: "VarIsInitializedOp"
  input: "bnorm_53/moving_mean"
}
node {
  name: "VarIsInitializedOp_333"
  op: "VarIsInitializedOp"
  input: "bnorm_79/beta"
}
node {
  name: "VarIsInitializedOp_334"
  op: "VarIsInitializedOp"
  input: "bnorm_90/moving_mean"
}
node {
  name: "VarIsInitializedOp_335"
  op: "VarIsInitializedOp"
  input: "bnorm_101/moving_variance"
}
node {
  name: "VarIsInitializedOp_336"
  op: "VarIsInitializedOp"
  input: "conv_104/kernel"
}
node {
  name: "VarIsInitializedOp_337"
  op: "VarIsInitializedOp"
  input: "bnorm_80/moving_variance"
}
node {
  name: "VarIsInitializedOp_338"
  op: "VarIsInitializedOp"
  input: "bnorm_75/gamma"
}
node {
  name: "VarIsInitializedOp_339"
  op: "VarIsInitializedOp"
  input: "bnorm_13/beta"
}
node {
  name: "VarIsInitializedOp_340"
  op: "VarIsInitializedOp"
  input: "bnorm_14/gamma"
}
node {
  name: "VarIsInitializedOp_341"
  op: "VarIsInitializedOp"
  input: "bnorm_28/beta"
}
node {
  name: "VarIsInitializedOp_342"
  op: "VarIsInitializedOp"
  input: "bnorm_35/moving_mean"
}
node {
  name: "VarIsInitializedOp_343"
  op: "VarIsInitializedOp"
  input: "bnorm_44/moving_variance"
}
node {
  name: "VarIsInitializedOp_344"
  op: "VarIsInitializedOp"
  input: "bnorm_45/moving_mean"
}
node {
  name: "VarIsInitializedOp_345"
  op: "VarIsInitializedOp"
  input: "conv_50/kernel"
}
node {
  name: "VarIsInitializedOp_346"
  op: "VarIsInitializedOp"
  input: "bnorm_54/beta"
}
node {
  name: "VarIsInitializedOp_347"
  op: "VarIsInitializedOp"
  input: "bnorm_67/beta"
}
node {
  name: "VarIsInitializedOp_348"
  op: "VarIsInitializedOp"
  input: "bnorm_84/moving_variance"
}
node {
  name: "VarIsInitializedOp_349"
  op: "VarIsInitializedOp"
  input: "bnorm_1/moving_variance"
}
node {
  name: "VarIsInitializedOp_350"
  op: "VarIsInitializedOp"
  input: "bnorm_23/beta"
}
node {
  name: "VarIsInitializedOp_351"
  op: "VarIsInitializedOp"
  input: "bnorm_35/beta"
}
node {
  name: "VarIsInitializedOp_352"
  op: "VarIsInitializedOp"
  input: "bnorm_44/moving_mean"
}
node {
  name: "VarIsInitializedOp_353"
  op: "VarIsInitializedOp"
  input: "bnorm_50/beta"
}
node {
  name: "VarIsInitializedOp_354"
  op: "VarIsInitializedOp"
  input: "bnorm_63/beta"
}
node {
  name: "VarIsInitializedOp_355"
  op: "VarIsInitializedOp"
  input: "bnorm_66/beta"
}
node {
  name: "VarIsInitializedOp_356"
  op: "VarIsInitializedOp"
  input: "bnorm_70/moving_variance"
}
node {
  name: "VarIsInitializedOp_357"
  op: "VarIsInitializedOp"
  input: "conv_87/kernel"
}
node {
  name: "VarIsInitializedOp_358"
  op: "VarIsInitializedOp"
  input: "conv_90/kernel"
}
node {
  name: "VarIsInitializedOp_359"
  op: "VarIsInitializedOp"
  input: "bnorm_104/moving_variance"
}
node {
  name: "VarIsInitializedOp_360"
  op: "VarIsInitializedOp"
  input: "bnorm_100/gamma"
}
node {
  name: "init"
  op: "NoOp"
  input: "^bnorm_1/beta/Assign"
  input: "^bnorm_1/gamma/Assign"
  input: "^bnorm_1/moving_mean/Assign"
  input: "^bnorm_1/moving_variance/Assign"
  input: "^bnorm_10/beta/Assign"
  input: "^bnorm_10/gamma/Assign"
  input: "^bnorm_10/moving_mean/Assign"
  input: "^bnorm_10/moving_variance/Assign"
  input: "^bnorm_100/beta/Assign"
  input: "^bnorm_100/gamma/Assign"
  input: "^bnorm_100/moving_mean/Assign"
  input: "^bnorm_100/moving_variance/Assign"
  input: "^bnorm_101/beta/Assign"
  input: "^bnorm_101/gamma/Assign"
  input: "^bnorm_101/moving_mean/Assign"
  input: "^bnorm_101/moving_variance/Assign"
  input: "^bnorm_102/beta/Assign"
  input: "^bnorm_102/gamma/Assign"
  input: "^bnorm_102/moving_mean/Assign"
  input: "^bnorm_102/moving_variance/Assign"
  input: "^bnorm_103/beta/Assign"
  input: "^bnorm_103/gamma/Assign"
  input: "^bnorm_103/moving_mean/Assign"
  input: "^bnorm_103/moving_variance/Assign"
  input: "^bnorm_104/beta/Assign"
  input: "^bnorm_104/gamma/Assign"
  input: "^bnorm_104/moving_mean/Assign"
  input: "^bnorm_104/moving_variance/Assign"
  input: "^bnorm_12/beta/Assign"
  input: "^bnorm_12/gamma/Assign"
  input: "^bnorm_12/moving_mean/Assign"
  input: "^bnorm_12/moving_variance/Assign"
  input: "^bnorm_13/beta/Assign"
  input: "^bnorm_13/gamma/Assign"
  input: "^bnorm_13/moving_mean/Assign"
  input: "^bnorm_13/moving_variance/Assign"
  input: "^bnorm_14/beta/Assign"
  input: "^bnorm_14/gamma/Assign"
  input: "^bnorm_14/moving_mean/Assign"
  input: "^bnorm_14/moving_variance/Assign"
  input: "^bnorm_16/beta/Assign"
  input: "^bnorm_16/gamma/Assign"
  input: "^bnorm_16/moving_mean/Assign"
  input: "^bnorm_16/moving_variance/Assign"
  input: "^bnorm_17/beta/Assign"
  input: "^bnorm_17/gamma/Assign"
  input: "^bnorm_17/moving_mean/Assign"
  input: "^bnorm_17/moving_variance/Assign"
  input: "^bnorm_19/beta/Assign"
  input: "^bnorm_19/gamma/Assign"
  input: "^bnorm_19/moving_mean/Assign"
  input: "^bnorm_19/moving_variance/Assign"
  input: "^bnorm_2/beta/Assign"
  input: "^bnorm_2/gamma/Assign"
  input: "^bnorm_2/moving_mean/Assign"
  input: "^bnorm_2/moving_variance/Assign"
  input: "^bnorm_20/beta/Assign"
  input: "^bnorm_20/gamma/Assign"
  input: "^bnorm_20/moving_mean/Assign"
  input: "^bnorm_20/moving_variance/Assign"
  input: "^bnorm_22/beta/Assign"
  input: "^bnorm_22/gamma/Assign"
  input: "^bnorm_22/moving_mean/Assign"
  input: "^bnorm_22/moving_variance/Assign"
  input: "^bnorm_23/beta/Assign"
  input: "^bnorm_23/gamma/Assign"
  input: "^bnorm_23/moving_mean/Assign"
  input: "^bnorm_23/moving_variance/Assign"
  input: "^bnorm_25/beta/Assign"
  input: "^bnorm_25/gamma/Assign"
  input: "^bnorm_25/moving_mean/Assign"
  input: "^bnorm_25/moving_variance/Assign"
  input: "^bnorm_26/beta/Assign"
  input: "^bnorm_26/gamma/Assign"
  input: "^bnorm_26/moving_mean/Assign"
  input: "^bnorm_26/moving_variance/Assign"
  input: "^bnorm_28/beta/Assign"
  input: "^bnorm_28/gamma/Assign"
  input: "^bnorm_28/moving_mean/Assign"
  input: "^bnorm_28/moving_variance/Assign"
  input: "^bnorm_29/beta/Assign"
  input: "^bnorm_29/gamma/Assign"
  input: "^bnorm_29/moving_mean/Assign"
  input: "^bnorm_29/moving_variance/Assign"
  input: "^bnorm_3/beta/Assign"
  input: "^bnorm_3/gamma/Assign"
  input: "^bnorm_3/moving_mean/Assign"
  input: "^bnorm_3/moving_variance/Assign"
  input: "^bnorm_31/beta/Assign"
  input: "^bnorm_31/gamma/Assign"
  input: "^bnorm_31/moving_mean/Assign"
  input: "^bnorm_31/moving_variance/Assign"
  input: "^bnorm_32/beta/Assign"
  input: "^bnorm_32/gamma/Assign"
  input: "^bnorm_32/moving_mean/Assign"
  input: "^bnorm_32/moving_variance/Assign"
  input: "^bnorm_34/beta/Assign"
  input: "^bnorm_34/gamma/Assign"
  input: "^bnorm_34/moving_mean/Assign"
  input: "^bnorm_34/moving_variance/Assign"
  input: "^bnorm_35/beta/Assign"
  input: "^bnorm_35/gamma/Assign"
  input: "^bnorm_35/moving_mean/Assign"
  input: "^bnorm_35/moving_variance/Assign"
  input: "^bnorm_37/beta/Assign"
  input: "^bnorm_37/gamma/Assign"
  input: "^bnorm_37/moving_mean/Assign"
  input: "^bnorm_37/moving_variance/Assign"
  input: "^bnorm_38/beta/Assign"
  input: "^bnorm_38/gamma/Assign"
  input: "^bnorm_38/moving_mean/Assign"
  input: "^bnorm_38/moving_variance/Assign"
  input: "^bnorm_39/beta/Assign"
  input: "^bnorm_39/gamma/Assign"
  input: "^bnorm_39/moving_mean/Assign"
  input: "^bnorm_39/moving_variance/Assign"
  input: "^bnorm_41/beta/Assign"
  input: "^bnorm_41/gamma/Assign"
  input: "^bnorm_41/moving_mean/Assign"
  input: "^bnorm_41/moving_variance/Assign"
  input: "^bnorm_42/beta/Assign"
  input: "^bnorm_42/gamma/Assign"
  input: "^bnorm_42/moving_mean/Assign"
  input: "^bnorm_42/moving_variance/Assign"
  input: "^bnorm_44/beta/Assign"
  input: "^bnorm_44/gamma/Assign"
  input: "^bnorm_44/moving_mean/Assign"
  input: "^bnorm_44/moving_variance/Assign"
  input: "^bnorm_45/beta/Assign"
  input: "^bnorm_45/gamma/Assign"
  input: "^bnorm_45/moving_mean/Assign"
  input: "^bnorm_45/moving_variance/Assign"
  input: "^bnorm_47/beta/Assign"
  input: "^bnorm_47/gamma/Assign"
  input: "^bnorm_47/moving_mean/Assign"
  input: "^bnorm_47/moving_variance/Assign"
  input: "^bnorm_48/beta/Assign"
  input: "^bnorm_48/gamma/Assign"
  input: "^bnorm_48/moving_mean/Assign"
  input: "^bnorm_48/moving_variance/Assign"
  input: "^bnorm_5/beta/Assign"
  input: "^bnorm_5/gamma/Assign"
  input: "^bnorm_5/moving_mean/Assign"
  input: "^bnorm_5/moving_variance/Assign"
  input: "^bnorm_50/beta/Assign"
  input: "^bnorm_50/gamma/Assign"
  input: "^bnorm_50/moving_mean/Assign"
  input: "^bnorm_50/moving_variance/Assign"
  input: "^bnorm_51/beta/Assign"
  input: "^bnorm_51/gamma/Assign"
  input: "^bnorm_51/moving_mean/Assign"
  input: "^bnorm_51/moving_variance/Assign"
  input: "^bnorm_53/beta/Assign"
  input: "^bnorm_53/gamma/Assign"
  input: "^bnorm_53/moving_mean/Assign"
  input: "^bnorm_53/moving_variance/Assign"
  input: "^bnorm_54/beta/Assign"
  input: "^bnorm_54/gamma/Assign"
  input: "^bnorm_54/moving_mean/Assign"
  input: "^bnorm_54/moving_variance/Assign"
  input: "^bnorm_56/beta/Assign"
  input: "^bnorm_56/gamma/Assign"
  input: "^bnorm_56/moving_mean/Assign"
  input: "^bnorm_56/moving_variance/Assign"
  input: "^bnorm_57/beta/Assign"
  input: "^bnorm_57/gamma/Assign"
  input: "^bnorm_57/moving_mean/Assign"
  input: "^bnorm_57/moving_variance/Assign"
  input: "^bnorm_59/beta/Assign"
  input: "^bnorm_59/gamma/Assign"
  input: "^bnorm_59/moving_mean/Assign"
  input: "^bnorm_59/moving_variance/Assign"
  input: "^bnorm_6/beta/Assign"
  input: "^bnorm_6/gamma/Assign"
  input: "^bnorm_6/moving_mean/Assign"
  input: "^bnorm_6/moving_variance/Assign"
  input: "^bnorm_60/beta/Assign"
  input: "^bnorm_60/gamma/Assign"
  input: "^bnorm_60/moving_mean/Assign"
  input: "^bnorm_60/moving_variance/Assign"
  input: "^bnorm_62/beta/Assign"
  input: "^bnorm_62/gamma/Assign"
  input: "^bnorm_62/moving_mean/Assign"
  input: "^bnorm_62/moving_variance/Assign"
  input: "^bnorm_63/beta/Assign"
  input: "^bnorm_63/gamma/Assign"
  input: "^bnorm_63/moving_mean/Assign"
  input: "^bnorm_63/moving_variance/Assign"
  input: "^bnorm_64/beta/Assign"
  input: "^bnorm_64/gamma/Assign"
  input: "^bnorm_64/moving_mean/Assign"
  input: "^bnorm_64/moving_variance/Assign"
  input: "^bnorm_66/beta/Assign"
  input: "^bnorm_66/gamma/Assign"
  input: "^bnorm_66/moving_mean/Assign"
  input: "^bnorm_66/moving_variance/Assign"
  input: "^bnorm_67/beta/Assign"
  input: "^bnorm_67/gamma/Assign"
  input: "^bnorm_67/moving_mean/Assign"
  input: "^bnorm_67/moving_variance/Assign"
  input: "^bnorm_69/beta/Assign"
  input: "^bnorm_69/gamma/Assign"
  input: "^bnorm_69/moving_mean/Assign"
  input: "^bnorm_69/moving_variance/Assign"
  input: "^bnorm_7/beta/Assign"
  input: "^bnorm_7/gamma/Assign"
  input: "^bnorm_7/moving_mean/Assign"
  input: "^bnorm_7/moving_variance/Assign"
  input: "^bnorm_70/beta/Assign"
  input: "^bnorm_70/gamma/Assign"
  input: "^bnorm_70/moving_mean/Assign"
  input: "^bnorm_70/moving_variance/Assign"
  input: "^bnorm_72/beta/Assign"
  input: "^bnorm_72/gamma/Assign"
  input: "^bnorm_72/moving_mean/Assign"
  input: "^bnorm_72/moving_variance/Assign"
  input: "^bnorm_73/beta/Assign"
  input: "^bnorm_73/gamma/Assign"
  input: "^bnorm_73/moving_mean/Assign"
  input: "^bnorm_73/moving_variance/Assign"
  input: "^bnorm_75/beta/Assign"
  input: "^bnorm_75/gamma/Assign"
  input: "^bnorm_75/moving_mean/Assign"
  input: "^bnorm_75/moving_variance/Assign"
  input: "^bnorm_76/beta/Assign"
  input: "^bnorm_76/gamma/Assign"
  input: "^bnorm_76/moving_mean/Assign"
  input: "^bnorm_76/moving_variance/Assign"
  input: "^bnorm_77/beta/Assign"
  input: "^bnorm_77/gamma/Assign"
  input: "^bnorm_77/moving_mean/Assign"
  input: "^bnorm_77/moving_variance/Assign"
  input: "^bnorm_78/beta/Assign"
  input: "^bnorm_78/gamma/Assign"
  input: "^bnorm_78/moving_mean/Assign"
  input: "^bnorm_78/moving_variance/Assign"
  input: "^bnorm_79/beta/Assign"
  input: "^bnorm_79/gamma/Assign"
  input: "^bnorm_79/moving_mean/Assign"
  input: "^bnorm_79/moving_variance/Assign"
  input: "^bnorm_80/beta/Assign"
  input: "^bnorm_80/gamma/Assign"
  input: "^bnorm_80/moving_mean/Assign"
  input: "^bnorm_80/moving_variance/Assign"
  input: "^bnorm_84/beta/Assign"
  input: "^bnorm_84/gamma/Assign"
  input: "^bnorm_84/moving_mean/Assign"
  input: "^bnorm_84/moving_variance/Assign"
  input: "^bnorm_87/beta/Assign"
  input: "^bnorm_87/gamma/Assign"
  input: "^bnorm_87/moving_mean/Assign"
  input: "^bnorm_87/moving_variance/Assign"
  input: "^bnorm_88/beta/Assign"
  input: "^bnorm_88/gamma/Assign"
  input: "^bnorm_88/moving_mean/Assign"
  input: "^bnorm_88/moving_variance/Assign"
  input: "^bnorm_89/beta/Assign"
  input: "^bnorm_89/gamma/Assign"
  input: "^bnorm_89/moving_mean/Assign"
  input: "^bnorm_89/moving_variance/Assign"
  input: "^bnorm_9/beta/Assign"
  input: "^bnorm_9/gamma/Assign"
  input: "^bnorm_9/moving_mean/Assign"
  input: "^bnorm_9/moving_variance/Assign"
  input: "^bnorm_90/beta/Assign"
  input: "^bnorm_90/gamma/Assign"
  input: "^bnorm_90/moving_mean/Assign"
  input: "^bnorm_90/moving_variance/Assign"
  input: "^bnorm_91/beta/Assign"
  input: "^bnorm_91/gamma/Assign"
  input: "^bnorm_91/moving_mean/Assign"
  input: "^bnorm_91/moving_variance/Assign"
  input: "^bnorm_92/beta/Assign"
  input: "^bnorm_92/gamma/Assign"
  input: "^bnorm_92/moving_mean/Assign"
  input: "^bnorm_92/moving_variance/Assign"
  input: "^bnorm_96/beta/Assign"
  input: "^bnorm_96/gamma/Assign"
  input: "^bnorm_96/moving_mean/Assign"
  input: "^bnorm_96/moving_variance/Assign"
  input: "^bnorm_99/beta/Assign"
  input: "^bnorm_99/gamma/Assign"
  input: "^bnorm_99/moving_mean/Assign"
  input: "^bnorm_99/moving_variance/Assign"
  input: "^conv_1/kernel/Assign"
  input: "^conv_10/kernel/Assign"
  input: "^conv_100/kernel/Assign"
  input: "^conv_101/kernel/Assign"
  input: "^conv_102/kernel/Assign"
  input: "^conv_103/kernel/Assign"
  input: "^conv_104/kernel/Assign"
  input: "^conv_105/bias/Assign"
  input: "^conv_105/kernel/Assign"
  input: "^conv_12/kernel/Assign"
  input: "^conv_13/kernel/Assign"
  input: "^conv_14/kernel/Assign"
  input: "^conv_16/kernel/Assign"
  input: "^conv_17/kernel/Assign"
  input: "^conv_19/kernel/Assign"
  input: "^conv_2/kernel/Assign"
  input: "^conv_20/kernel/Assign"
  input: "^conv_22/kernel/Assign"
  input: "^conv_23/kernel/Assign"
  input: "^conv_25/kernel/Assign"
  input: "^conv_26/kernel/Assign"
  input: "^conv_28/kernel/Assign"
  input: "^conv_29/kernel/Assign"
  input: "^conv_3/kernel/Assign"
  input: "^conv_31/kernel/Assign"
  input: "^conv_32/kernel/Assign"
  input: "^conv_34/kernel/Assign"
  input: "^conv_35/kernel/Assign"
  input: "^conv_37/kernel/Assign"
  input: "^conv_38/kernel/Assign"
  input: "^conv_39/kernel/Assign"
  input: "^conv_41/kernel/Assign"
  input: "^conv_42/kernel/Assign"
  input: "^conv_44/kernel/Assign"
  input: "^conv_45/kernel/Assign"
  input: "^conv_47/kernel/Assign"
  input: "^conv_48/kernel/Assign"
  input: "^conv_5/kernel/Assign"
  input: "^conv_50/kernel/Assign"
  input: "^conv_51/kernel/Assign"
  input: "^conv_53/kernel/Assign"
  input: "^conv_54/kernel/Assign"
  input: "^conv_56/kernel/Assign"
  input: "^conv_57/kernel/Assign"
  input: "^conv_59/kernel/Assign"
  input: "^conv_6/kernel/Assign"
  input: "^conv_60/kernel/Assign"
  input: "^conv_62/kernel/Assign"
  input: "^conv_63/kernel/Assign"
  input: "^conv_64/kernel/Assign"
  input: "^conv_66/kernel/Assign"
  input: "^conv_67/kernel/Assign"
  input: "^conv_69/kernel/Assign"
  input: "^conv_7/kernel/Assign"
  input: "^conv_70/kernel/Assign"
  input: "^conv_72/kernel/Assign"
  input: "^conv_73/kernel/Assign"
  input: "^conv_75/kernel/Assign"
  input: "^conv_76/kernel/Assign"
  input: "^conv_77/kernel/Assign"
  input: "^conv_78/kernel/Assign"
  input: "^conv_79/kernel/Assign"
  input: "^conv_80/kernel/Assign"
  input: "^conv_81/bias/Assign"
  input: "^conv_81/kernel/Assign"
  input: "^conv_84/kernel/Assign"
  input: "^conv_87/kernel/Assign"
  input: "^conv_88/kernel/Assign"
  input: "^conv_89/kernel/Assign"
  input: "^conv_9/kernel/Assign"
  input: "^conv_90/kernel/Assign"
  input: "^conv_91/kernel/Assign"
  input: "^conv_92/kernel/Assign"
  input: "^conv_93/bias/Assign"
  input: "^conv_93/kernel/Assign"
  input: "^conv_96/kernel/Assign"
  input: "^conv_99/kernel/Assign"
}
versions {
  producer: 134
}
